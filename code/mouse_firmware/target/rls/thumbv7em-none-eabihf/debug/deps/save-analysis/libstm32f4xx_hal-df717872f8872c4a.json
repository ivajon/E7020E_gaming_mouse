{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0","program":"/home/s7rul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","stm32f4xx_hal","--edition=2018","/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=1","-C","debuginfo=2","--cfg","feature=\"device-selected\"","--cfg","feature=\"gpiod\"","--cfg","feature=\"gpioe\"","--cfg","feature=\"i2c3\"","--cfg","feature=\"otg-fs\"","--cfg","feature=\"rt\"","--cfg","feature=\"sdio\"","--cfg","feature=\"spi3\"","--cfg","feature=\"spi4\"","--cfg","feature=\"spi5\"","--cfg","feature=\"stm32f411\"","--cfg","feature=\"synopsys-usb-otg\"","--cfg","feature=\"tim2\"","--cfg","feature=\"usb_fs\"","-C","metadata=df717872f8872c4a","-C","extra-filename=-df717872f8872c4a","--out-dir","/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/debug/deps","--extern","bare_metal=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libbare_metal-224c9d2784867bdd.rmeta","--extern","bitflags=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libbitflags-fc42e91d43e330a5.rmeta","--extern","cortex_m=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m-e2710c0d5373be6b.rmeta","--extern","cortex_m_rt=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m_rt-d17d48670de09f97.rmeta","--extern","embedded_dma=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_dma-d03f29b7e6595494.rmeta","--extern","embedded_hal=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_hal-a13faaa931965237.rmeta","--extern","embedded_hal_one=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_hal-1cc54fdc10ba010e.rmeta","--extern","embedded_storage=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_storage-12bcab7ccb422849.rmeta","--extern","fugit=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libfugit-173eaa1131be895c.rmeta","--extern","fugit_timer=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libfugit_timer-d3d9a3ab3a8fe8a7.rmeta","--extern","hd44780_driver=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libhd44780_driver-c0fc4d048c2b9932.rmeta","--extern","nb=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libnb-80ce622ace3a159a.rmeta","--extern","rand_core=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/librand_core-070654a08987b125.rmeta","--extern","stm32f4=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libstm32f4-b257b0bcf2436d30.rmeta","--extern","synopsys_usb_otg=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libsynopsys_usb_otg-ee9115cdabce56ed.rmeta","--extern","time=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libtime-22aea77d10574bee.rmeta","--extern","void=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libvoid-821dd62e3c5760a6.rmeta","--cap-lints","allow","-L","/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/build/cortex-m-9cc62ea7a2682fe4/out","-L","/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/build/cortex-m-rt-1ae8edbe9962e34e/out","-L","/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/build/stm32f4-5cb082b512cbf1a1/out","--error-format=json","--sysroot","/home/s7rul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libstm32f4xx_hal-df717872f8872c4a.rmeta"},"prelude":{"crate_id":{"name":"stm32f4xx_hal","disambiguator":[5500127659629622995,0]},"crate_root":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src","external_crates":[{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11850898037736144901,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4266445326248464732,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10236682895667522671,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":4,"id":{"name":"embedded_hal","disambiguator":[1470599666875002530,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":5,"id":{"name":"nb","disambiguator":[932372155979664908,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":6,"id":{"name":"nb","disambiguator":[5444142482443035389,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","num":7,"id":{"name":"void","disambiguator":[2468047175398030117,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":8,"id":{"name":"stm32f4","disambiguator":[18148909875884086072,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","num":9,"id":{"name":"cortex_m","disambiguator":[4850524805246375290,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":10,"id":{"name":"bare_metal","disambiguator":[16944285582135952960,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":11,"id":{"name":"volatile_register","disambiguator":[13936815109044514835,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":12,"id":{"name":"vcell","disambiguator":[14635091974150106792,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":13,"id":{"name":"cortex_m_rt","disambiguator":[3608541274136929951,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","num":14,"id":{"name":"cortex_m_rt_macros","disambiguator":[183536089174427528,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","num":15,"id":{"name":"embedded_hal","disambiguator":[13327561859517076447,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","num":16,"id":{"name":"fugit","disambiguator":[16632885840747366973,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","num":17,"id":{"name":"gcd","disambiguator":[4294560088443843010,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","num":18,"id":{"name":"paste","disambiguator":[15064864536093518767,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","num":19,"id":{"name":"synopsys_usb_otg","disambiguator":[4767173915959028427,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","num":20,"id":{"name":"usb_device","disambiguator":[16491445997211076536,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","num":21,"id":{"name":"cortex_m","disambiguator":[16550382947968600450,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","num":22,"id":{"name":"aligned","disambiguator":[17075606391651895278,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","num":23,"id":{"name":"as_slice","disambiguator":[14029367881861703634,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","num":24,"id":{"name":"generic_array","disambiguator":[4522314181596211811,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","num":25,"id":{"name":"typenum","disambiguator":[15399933575121888095,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","num":26,"id":{"name":"generic_array","disambiguator":[5731250005424756864,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","num":27,"id":{"name":"generic_array","disambiguator":[6369704161500142370,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","num":28,"id":{"name":"stable_deref_trait","disambiguator":[17122422275466883217,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","num":29,"id":{"name":"embedded_dma","disambiguator":[928143002955384479,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","num":30,"id":{"name":"embedded_storage","disambiguator":[2650119357169489412,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","num":31,"id":{"name":"time","disambiguator":[6138323617401216281,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","num":32,"id":{"name":"bitflags","disambiguator":[17107551838189931583,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","num":33,"id":{"name":"fugit_timer","disambiguator":[14279362718395965644,0]}}],"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":0,"byte_end":5949,"line_start":1,"line_end":189,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":527,"byte_end":539,"line_start":27,"line_end":27,"column_start":9,"column_end":21},"alias_span":null,"name":"hal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":0},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":593,"byte_end":595,"line_start":30,"line_end":30,"column_start":9,"column_end":11},"alias_span":null,"name":"nb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":21},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":645,"byte_end":650,"line_start":32,"line_end":32,"column_start":13,"column_end":18},"alias_span":null,"name":"block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":81},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":1549,"byte_end":1558,"line_start":52,"line_end":52,"column_start":18,"column_end":27},"alias_span":null,"name":"pac","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":58384},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":3840,"byte_end":3849,"line_start":104,"line_end":104,"column_start":21,"column_end":30},"alias_span":null,"name":"interrupt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":68},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":3840,"byte_end":3849,"line_start":104,"line_end":104,"column_start":21,"column_end":30},"alias_span":null,"name":"interrupt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":572},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74617,"byte_end":74622,"line_start":67,"line_end":67,"column_start":28,"column_end":33},"alias_span":null,"name":"PEPin","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":575},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74624,"byte_end":74642,"line_start":67,"line_end":67,"column_start":35,"column_end":53},"alias_span":null,"name":"PartiallyErasedPin","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":624},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74674,"byte_end":74678,"line_start":69,"line_end":69,"column_start":18,"column_end":22},"alias_span":null,"name":"EPin","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":626},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74680,"byte_end":74689,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"alias_span":null,"name":"ErasedPin","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":674},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74723,"byte_end":74730,"line_start":71,"line_end":71,"column_start":19,"column_end":26},"alias_span":null,"name":"Dynamic","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74732,"byte_end":74742,"line_start":71,"line_end":71,"column_start":28,"column_end":38},"alias_span":null,"name":"DynamicPin","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":4,"index":629},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74804,"byte_end":74812,"line_start":75,"line_end":75,"column_start":36,"column_end":44},"alias_span":null,"name":"PinState","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5675},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88756,"byte_end":88759,"line_start":580,"line_end":580,"column_start":5,"column_end":8},"alias_span":null,"name":"PA0","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5679},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88792,"byte_end":88795,"line_start":581,"line_end":581,"column_start":5,"column_end":8},"alias_span":null,"name":"PA1","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5683},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88828,"byte_end":88831,"line_start":582,"line_end":582,"column_start":5,"column_end":8},"alias_span":null,"name":"PA2","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5687},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88864,"byte_end":88867,"line_start":583,"line_end":583,"column_start":5,"column_end":8},"alias_span":null,"name":"PA3","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5691},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88900,"byte_end":88903,"line_start":584,"line_end":584,"column_start":5,"column_end":8},"alias_span":null,"name":"PA4","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5695},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88936,"byte_end":88939,"line_start":585,"line_end":585,"column_start":5,"column_end":8},"alias_span":null,"name":"PA5","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5699},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88972,"byte_end":88975,"line_start":586,"line_end":586,"column_start":5,"column_end":8},"alias_span":null,"name":"PA6","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5703},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89008,"byte_end":89011,"line_start":587,"line_end":587,"column_start":5,"column_end":8},"alias_span":null,"name":"PA7","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5707},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89044,"byte_end":89047,"line_start":588,"line_end":588,"column_start":5,"column_end":8},"alias_span":null,"name":"PA8","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5711},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89080,"byte_end":89083,"line_start":589,"line_end":589,"column_start":5,"column_end":8},"alias_span":null,"name":"PA9","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5715},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89116,"byte_end":89120,"line_start":590,"line_end":590,"column_start":5,"column_end":9},"alias_span":null,"name":"PA10","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5719},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89155,"byte_end":89159,"line_start":591,"line_end":591,"column_start":5,"column_end":9},"alias_span":null,"name":"PA11","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5723},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89194,"byte_end":89198,"line_start":592,"line_end":592,"column_start":5,"column_end":9},"alias_span":null,"name":"PA12","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5727},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89233,"byte_end":89237,"line_start":593,"line_end":593,"column_start":5,"column_end":9},"alias_span":null,"name":"PA13","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5731},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89304,"byte_end":89308,"line_start":594,"line_end":594,"column_start":5,"column_end":9},"alias_span":null,"name":"PA14","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5735},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89362,"byte_end":89366,"line_start":595,"line_end":595,"column_start":5,"column_end":9},"alias_span":null,"name":"PA15","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5833},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89458,"byte_end":89461,"line_start":599,"line_end":599,"column_start":5,"column_end":8},"alias_span":null,"name":"PB0","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5837},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89494,"byte_end":89497,"line_start":600,"line_end":600,"column_start":5,"column_end":8},"alias_span":null,"name":"PB1","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5841},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89530,"byte_end":89533,"line_start":601,"line_end":601,"column_start":5,"column_end":8},"alias_span":null,"name":"PB2","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5845},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89566,"byte_end":89569,"line_start":602,"line_end":602,"column_start":5,"column_end":8},"alias_span":null,"name":"PB3","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5849},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89625,"byte_end":89628,"line_start":603,"line_end":603,"column_start":5,"column_end":8},"alias_span":null,"name":"PB4","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5853},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89678,"byte_end":89681,"line_start":604,"line_end":604,"column_start":5,"column_end":8},"alias_span":null,"name":"PB5","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5857},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89714,"byte_end":89717,"line_start":605,"line_end":605,"column_start":5,"column_end":8},"alias_span":null,"name":"PB6","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5861},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89750,"byte_end":89753,"line_start":606,"line_end":606,"column_start":5,"column_end":8},"alias_span":null,"name":"PB7","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5865},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89786,"byte_end":89789,"line_start":607,"line_end":607,"column_start":5,"column_end":8},"alias_span":null,"name":"PB8","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5869},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89822,"byte_end":89825,"line_start":608,"line_end":608,"column_start":5,"column_end":8},"alias_span":null,"name":"PB9","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5873},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89858,"byte_end":89862,"line_start":609,"line_end":609,"column_start":5,"column_end":9},"alias_span":null,"name":"PB10","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5877},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89897,"byte_end":89901,"line_start":610,"line_end":610,"column_start":5,"column_end":9},"alias_span":null,"name":"PB11","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5881},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89936,"byte_end":89940,"line_start":611,"line_end":611,"column_start":5,"column_end":9},"alias_span":null,"name":"PB12","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5885},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89975,"byte_end":89979,"line_start":612,"line_end":612,"column_start":5,"column_end":9},"alias_span":null,"name":"PB13","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5889},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90014,"byte_end":90018,"line_start":613,"line_end":613,"column_start":5,"column_end":9},"alias_span":null,"name":"PB14","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5893},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90053,"byte_end":90057,"line_start":614,"line_end":614,"column_start":5,"column_end":9},"alias_span":null,"name":"PB15","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5991},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90133,"byte_end":90136,"line_start":618,"line_end":618,"column_start":5,"column_end":8},"alias_span":null,"name":"PC0","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5995},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90169,"byte_end":90172,"line_start":619,"line_end":619,"column_start":5,"column_end":8},"alias_span":null,"name":"PC1","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":5999},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90205,"byte_end":90208,"line_start":620,"line_end":620,"column_start":5,"column_end":8},"alias_span":null,"name":"PC2","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6003},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90241,"byte_end":90244,"line_start":621,"line_end":621,"column_start":5,"column_end":8},"alias_span":null,"name":"PC3","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6007},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90277,"byte_end":90280,"line_start":622,"line_end":622,"column_start":5,"column_end":8},"alias_span":null,"name":"PC4","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6011},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90313,"byte_end":90316,"line_start":623,"line_end":623,"column_start":5,"column_end":8},"alias_span":null,"name":"PC5","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6015},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90349,"byte_end":90352,"line_start":624,"line_end":624,"column_start":5,"column_end":8},"alias_span":null,"name":"PC6","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6019},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90385,"byte_end":90388,"line_start":625,"line_end":625,"column_start":5,"column_end":8},"alias_span":null,"name":"PC7","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6023},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90421,"byte_end":90424,"line_start":626,"line_end":626,"column_start":5,"column_end":8},"alias_span":null,"name":"PC8","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6027},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90457,"byte_end":90460,"line_start":627,"line_end":627,"column_start":5,"column_end":8},"alias_span":null,"name":"PC9","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6031},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90493,"byte_end":90497,"line_start":628,"line_end":628,"column_start":5,"column_end":9},"alias_span":null,"name":"PC10","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6035},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90532,"byte_end":90536,"line_start":629,"line_end":629,"column_start":5,"column_end":9},"alias_span":null,"name":"PC11","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6039},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90571,"byte_end":90575,"line_start":630,"line_end":630,"column_start":5,"column_end":9},"alias_span":null,"name":"PC12","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6043},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90610,"byte_end":90614,"line_start":631,"line_end":631,"column_start":5,"column_end":9},"alias_span":null,"name":"PC13","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6047},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90649,"byte_end":90653,"line_start":632,"line_end":632,"column_start":5,"column_end":9},"alias_span":null,"name":"PC14","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6051},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90688,"byte_end":90692,"line_start":633,"line_end":633,"column_start":5,"column_end":9},"alias_span":null,"name":"PC15","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6149},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90794,"byte_end":90797,"line_start":638,"line_end":638,"column_start":5,"column_end":8},"alias_span":null,"name":"PD0","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6153},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90830,"byte_end":90833,"line_start":639,"line_end":639,"column_start":5,"column_end":8},"alias_span":null,"name":"PD1","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6157},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90866,"byte_end":90869,"line_start":640,"line_end":640,"column_start":5,"column_end":8},"alias_span":null,"name":"PD2","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6161},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90902,"byte_end":90905,"line_start":641,"line_end":641,"column_start":5,"column_end":8},"alias_span":null,"name":"PD3","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6165},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90938,"byte_end":90941,"line_start":642,"line_end":642,"column_start":5,"column_end":8},"alias_span":null,"name":"PD4","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6169},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90974,"byte_end":90977,"line_start":643,"line_end":643,"column_start":5,"column_end":8},"alias_span":null,"name":"PD5","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6173},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91010,"byte_end":91013,"line_start":644,"line_end":644,"column_start":5,"column_end":8},"alias_span":null,"name":"PD6","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6177},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91046,"byte_end":91049,"line_start":645,"line_end":645,"column_start":5,"column_end":8},"alias_span":null,"name":"PD7","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6181},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91082,"byte_end":91085,"line_start":646,"line_end":646,"column_start":5,"column_end":8},"alias_span":null,"name":"PD8","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6185},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91118,"byte_end":91121,"line_start":647,"line_end":647,"column_start":5,"column_end":8},"alias_span":null,"name":"PD9","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6189},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91154,"byte_end":91158,"line_start":648,"line_end":648,"column_start":5,"column_end":9},"alias_span":null,"name":"PD10","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6193},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91193,"byte_end":91197,"line_start":649,"line_end":649,"column_start":5,"column_end":9},"alias_span":null,"name":"PD11","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6197},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91232,"byte_end":91236,"line_start":650,"line_end":650,"column_start":5,"column_end":9},"alias_span":null,"name":"PD12","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6201},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91271,"byte_end":91275,"line_start":651,"line_end":651,"column_start":5,"column_end":9},"alias_span":null,"name":"PD13","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6205},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91310,"byte_end":91314,"line_start":652,"line_end":652,"column_start":5,"column_end":9},"alias_span":null,"name":"PD14","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6209},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91349,"byte_end":91353,"line_start":653,"line_end":653,"column_start":5,"column_end":9},"alias_span":null,"name":"PD15","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6307},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91455,"byte_end":91458,"line_start":658,"line_end":658,"column_start":5,"column_end":8},"alias_span":null,"name":"PE0","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6311},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91491,"byte_end":91494,"line_start":659,"line_end":659,"column_start":5,"column_end":8},"alias_span":null,"name":"PE1","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6315},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91527,"byte_end":91530,"line_start":660,"line_end":660,"column_start":5,"column_end":8},"alias_span":null,"name":"PE2","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6319},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91563,"byte_end":91566,"line_start":661,"line_end":661,"column_start":5,"column_end":8},"alias_span":null,"name":"PE3","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6323},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91599,"byte_end":91602,"line_start":662,"line_end":662,"column_start":5,"column_end":8},"alias_span":null,"name":"PE4","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6327},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91635,"byte_end":91638,"line_start":663,"line_end":663,"column_start":5,"column_end":8},"alias_span":null,"name":"PE5","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6331},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91671,"byte_end":91674,"line_start":664,"line_end":664,"column_start":5,"column_end":8},"alias_span":null,"name":"PE6","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6335},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91707,"byte_end":91710,"line_start":665,"line_end":665,"column_start":5,"column_end":8},"alias_span":null,"name":"PE7","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6339},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91743,"byte_end":91746,"line_start":666,"line_end":666,"column_start":5,"column_end":8},"alias_span":null,"name":"PE8","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6343},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91779,"byte_end":91782,"line_start":667,"line_end":667,"column_start":5,"column_end":8},"alias_span":null,"name":"PE9","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6347},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91815,"byte_end":91819,"line_start":668,"line_end":668,"column_start":5,"column_end":9},"alias_span":null,"name":"PE10","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6351},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91854,"byte_end":91858,"line_start":669,"line_end":669,"column_start":5,"column_end":9},"alias_span":null,"name":"PE11","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6355},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91893,"byte_end":91897,"line_start":670,"line_end":670,"column_start":5,"column_end":9},"alias_span":null,"name":"PE12","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6359},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91932,"byte_end":91936,"line_start":671,"line_end":671,"column_start":5,"column_end":9},"alias_span":null,"name":"PE13","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6363},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91971,"byte_end":91975,"line_start":672,"line_end":672,"column_start":5,"column_end":9},"alias_span":null,"name":"PE14","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6367},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":92010,"byte_end":92014,"line_start":673,"line_end":673,"column_start":5,"column_end":9},"alias_span":null,"name":"PE15","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6465},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93447,"byte_end":93450,"line_start":718,"line_end":718,"column_start":5,"column_end":8},"alias_span":null,"name":"PH0","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6469},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93483,"byte_end":93486,"line_start":719,"line_end":719,"column_start":5,"column_end":8},"alias_span":null,"name":"PH1","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6473},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93519,"byte_end":93522,"line_start":720,"line_end":720,"column_start":5,"column_end":8},"alias_span":null,"name":"PH2","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6477},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93555,"byte_end":93558,"line_start":721,"line_end":721,"column_start":5,"column_end":8},"alias_span":null,"name":"PH3","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6481},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93591,"byte_end":93594,"line_start":722,"line_end":722,"column_start":5,"column_end":8},"alias_span":null,"name":"PH4","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6485},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93627,"byte_end":93630,"line_start":723,"line_end":723,"column_start":5,"column_end":8},"alias_span":null,"name":"PH5","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6489},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93663,"byte_end":93666,"line_start":724,"line_end":724,"column_start":5,"column_end":8},"alias_span":null,"name":"PH6","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6493},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93699,"byte_end":93702,"line_start":725,"line_end":725,"column_start":5,"column_end":8},"alias_span":null,"name":"PH7","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6497},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93735,"byte_end":93738,"line_start":726,"line_end":726,"column_start":5,"column_end":8},"alias_span":null,"name":"PH8","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6501},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93771,"byte_end":93774,"line_start":727,"line_end":727,"column_start":5,"column_end":8},"alias_span":null,"name":"PH9","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6505},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93807,"byte_end":93811,"line_start":728,"line_end":728,"column_start":5,"column_end":9},"alias_span":null,"name":"PH10","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6509},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93846,"byte_end":93850,"line_start":729,"line_end":729,"column_start":5,"column_end":9},"alias_span":null,"name":"PH11","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6513},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93885,"byte_end":93889,"line_start":730,"line_end":730,"column_start":5,"column_end":9},"alias_span":null,"name":"PH12","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6517},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93924,"byte_end":93928,"line_start":731,"line_end":731,"column_start":5,"column_end":9},"alias_span":null,"name":"PH13","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6521},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93963,"byte_end":93967,"line_start":732,"line_end":732,"column_start":5,"column_end":9},"alias_span":null,"name":"PH14","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":6525},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":94002,"byte_end":94006,"line_start":733,"line_end":733,"column_start":5,"column_end":9},"alias_span":null,"name":"PH15","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":15,"index":492},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163562,"byte_end":163581,"line_start":97,"line_end":97,"column_start":32,"column_end":51},"alias_span":null,"name":"NoAcknowledgeSource","value":"","parent":{"krate":0,"index":1288}},{"kind":"Use","ref_id":{"krate":19,"index":317},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187613,"byte_end":187619,"line_start":12,"line_end":12,"column_start":27,"column_end":33},"alias_span":null,"name":"UsbBus","value":"","parent":{"krate":0,"index":1614}},{"kind":"Use","ref_id":{"krate":4,"index":14},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312738,"byte_end":312745,"line_start":39,"line_end":39,"column_start":28,"column_end":35},"alias_span":null,"name":"_embedded_hal_adc_OneShot","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":4,"index":28},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312815,"byte_end":312822,"line_start":40,"line_end":40,"column_start":40,"column_end":47},"alias_span":null,"name":"_embedded_hal_blocking_delay_DelayMs","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":4,"index":31},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312903,"byte_end":312910,"line_start":41,"line_end":41,"column_start":40,"column_end":47},"alias_span":null,"name":"_embedded_hal_blocking_delay_DelayUs","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":4,"index":83},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312992,"byte_end":312997,"line_start":42,"line_end":42,"column_start":41,"column_end":46},"alias_span":null,"name":"_embedded_hal_blocking_serial_Write","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":4,"index":98},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313081,"byte_end":313089,"line_start":44,"line_end":44,"column_start":5,"column_end":13},"alias_span":null,"name":"_embedded_hal_blocking_spi_Transfer","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":4,"index":103},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313130,"byte_end":313135,"line_start":44,"line_end":44,"column_start":54,"column_end":59},"alias_span":null,"name":"_embedded_hal_blocking_spi_Write","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":4,"index":426},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313206,"byte_end":313210,"line_start":46,"line_end":46,"column_start":31,"column_end":35},"alias_span":null,"name":"_embedded_hal_serial_Read","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":4,"index":430},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313271,"byte_end":313276,"line_start":47,"line_end":47,"column_start":31,"column_end":36},"alias_span":null,"name":"_embedded_hal_serial_Write","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":4,"index":439},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313335,"byte_end":313345,"line_start":48,"line_end":48,"column_start":28,"column_end":38},"alias_span":null,"name":"_embedded_hal_spi_FullDuplex","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":4,"index":473},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313401,"byte_end":313408,"line_start":49,"line_end":49,"column_start":23,"column_end":30},"alias_span":null,"name":"_embedded_hal_Capture","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":4,"index":484},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313457,"byte_end":313460,"line_start":50,"line_end":50,"column_start":23,"column_end":26},"alias_span":null,"name":"_embedded_hal_Pwm","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":4,"index":503},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313505,"byte_end":313508,"line_start":51,"line_end":51,"column_start":23,"column_end":26},"alias_span":null,"name":"_embedded_hal_Qei","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":16,"index":207},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313546,"byte_end":313552,"line_start":52,"line_end":52,"column_start":16,"column_end":22},"alias_span":null,"name":"_fugit_DurationExtU32","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":16,"index":429},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313594,"byte_end":313604,"line_start":53,"line_end":53,"column_start":16,"column_end":26},"alias_span":null,"name":"_fugit_RateExtU32","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":1163},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313935,"byte_end":313942,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"alias_span":null,"name":"_stm32f4xx_hal_gpio_ExtiPin","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":1122},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":313996,"byte_end":314003,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"alias_span":null,"name":"_stm32f4xx_hal_gpio_GpioExt","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":314056,"byte_end":314062,"line_start":65,"line_end":65,"column_start":21,"column_end":27},"alias_span":null,"name":"_stm32f4xx_hal_i2c_I2cExt","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":1592},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":314113,"byte_end":314119,"line_start":66,"line_end":66,"column_start":21,"column_end":27},"alias_span":null,"name":"_stm32f4xx_hal_i2s_I2sExt","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":2415},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":314170,"byte_end":314176,"line_start":67,"line_end":67,"column_start":21,"column_end":27},"alias_span":null,"name":"_stm32f4xx_hal_QeiExt","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":2536},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":314223,"byte_end":314229,"line_start":68,"line_end":68,"column_start":21,"column_end":27},"alias_span":null,"name":"_stm32f4xx_hal_rcc_RccExt","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":3127},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":314398,"byte_end":314407,"line_start":71,"line_end":71,"column_start":24,"column_end":33},"alias_span":null,"name":"_stm32f4xx_hal_serial_SerialExt","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":3616},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":314464,"byte_end":314470,"line_start":72,"line_end":72,"column_start":21,"column_end":27},"alias_span":null,"name":"_stm32f4xx_hal_spi_SpiExt","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":3732},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":314524,"byte_end":314533,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"alias_span":null,"name":"_stm32f4xx_hal_syscfg_SysCfgExt","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":3755},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":314591,"byte_end":314597,"line_start":74,"line_end":74,"column_start":22,"column_end":28},"alias_span":null,"name":"_stm32f4xx_hal_time_U32Ext","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":4127},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":314749,"byte_end":314755,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"_stm32f4xx_hal_timer_PwmExt","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":4562},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":314810,"byte_end":314821,"line_start":78,"line_end":78,"column_start":23,"column_end":34},"alias_span":null,"name":"_stm32f4xx_hal_timer_SysCounterExt","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":0,"index":4541},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":314883,"byte_end":314891,"line_start":79,"line_end":79,"column_start":23,"column_end":31},"alias_span":null,"name":"_stm32f4xx_hal_timer_TimerExt","value":"","parent":{"krate":0,"index":2316}},{"kind":"Use","ref_id":{"krate":15,"index":534},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409763,"byte_end":409772,"line_start":38,"line_end":38,"column_start":35,"column_end":44},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":2777}},{"kind":"Use","ref_id":{"krate":16,"index":98},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","byte_start":470314,"byte_end":470322,"line_start":1,"line_end":1,"column_start":17,"column_end":25},"alias_span":null,"name":"Hertz","value":"","parent":{"krate":0,"index":3744}},{"kind":"Use","ref_id":{"krate":16,"index":108},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","byte_start":470333,"byte_end":470345,"line_start":1,"line_end":1,"column_start":36,"column_end":48},"alias_span":null,"name":"KiloHertz","value":"","parent":{"krate":0,"index":3744}},{"kind":"Use","ref_id":{"krate":16,"index":118},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","byte_start":470360,"byte_end":470372,"line_start":1,"line_end":1,"column_start":63,"column_end":75},"alias_span":null,"name":"MegaHertz","value":"","parent":{"krate":0,"index":3744}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471123,"byte_end":471124,"line_start":18,"line_end":18,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"SysCounterHz, SysCounter, CounterUs, Counter, CounterMs, SysCounterUs, CounterHz","parent":{"krate":0,"index":3759}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471156,"byte_end":471157,"line_start":20,"line_end":20,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"DelayUs, Delay, SysDelay, DelayMs","parent":{"krate":0,"index":3759}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471183,"byte_end":471184,"line_start":22,"line_end":22,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"Ch, C2, C4, C1, CPin, C3","parent":{"krate":0,"index":3759}},{"kind":"Use","ref_id":{"krate":0,"index":4020},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512441,"byte_end":512445,"line_start":28,"line_end":28,"column_start":17,"column_end":21},"alias_span":null,"name":"CPin","value":"","parent":{"krate":0,"index":4032}},{"kind":"Use","ref_id":{"krate":0,"index":4023},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512447,"byte_end":512449,"line_start":28,"line_end":28,"column_start":23,"column_end":25},"alias_span":null,"name":"Ch","value":"","parent":{"krate":0,"index":4032}},{"kind":"Use","ref_id":{"krate":0,"index":4024},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512447,"byte_end":512449,"line_start":28,"line_end":28,"column_start":23,"column_end":25},"alias_span":null,"name":"Ch","value":"","parent":{"krate":0,"index":4032}},{"kind":"Use","ref_id":{"krate":0,"index":4026},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512451,"byte_end":512453,"line_start":28,"line_end":28,"column_start":27,"column_end":29},"alias_span":null,"name":"C1","value":"","parent":{"krate":0,"index":4032}},{"kind":"Use","ref_id":{"krate":0,"index":4027},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512455,"byte_end":512457,"line_start":28,"line_end":28,"column_start":31,"column_end":33},"alias_span":null,"name":"C2","value":"","parent":{"krate":0,"index":4032}},{"kind":"Use","ref_id":{"krate":0,"index":4028},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512459,"byte_end":512461,"line_start":28,"line_end":28,"column_start":35,"column_end":37},"alias_span":null,"name":"C3","value":"","parent":{"krate":0,"index":4032}},{"kind":"Use","ref_id":{"krate":0,"index":4029},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512463,"byte_end":512465,"line_start":28,"line_end":28,"column_start":39,"column_end":41},"alias_span":null,"name":"C4","value":"","parent":{"krate":0,"index":4032}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471212,"byte_end":471213,"line_start":24,"line_end":24,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"PwmExt, Pins, Pwm, PwmChannel, PwmHz","parent":{"krate":0,"index":3759}},{"kind":"Use","ref_id":{"krate":0,"index":4283},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471253,"byte_end":471261,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"alias_span":null,"name":"PwmInput","value":"","parent":{"krate":0,"index":3759}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":0,"byte_end":5949,"line_start":1,"line_end":189,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":101},{"krate":0,"index":114},{"krate":0,"index":150},{"krate":0,"index":1288},{"krate":0,"index":1528},{"krate":0,"index":1614},{"krate":0,"index":1666},{"krate":0,"index":2139},{"krate":0,"index":2208},{"krate":0,"index":2316},{"krate":0,"index":2399},{"krate":0,"index":2451},{"krate":0,"index":2647},{"krate":0,"index":2777},{"krate":0,"index":3255},{"krate":0,"index":3275},{"krate":0,"index":3715},{"krate":0,"index":3744},{"krate":0,"index":3759},{"krate":0,"index":4676},{"krate":0,"index":4732},{"krate":0,"index":4734},{"krate":0,"index":4737}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":11,"byte_end":42,"line_start":2,"line_end":2,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adc","qualname":"::adc","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":5022},{"krate":0,"index":5028},{"krate":0,"index":5031},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":5033},{"krate":0,"index":5034},{"krate":0,"index":5102},{"krate":0,"index":5105},{"krate":0,"index":5109},{"krate":0,"index":5113},{"krate":0,"index":5126},{"krate":0,"index":5129},{"krate":0,"index":5132},{"krate":0,"index":5135},{"krate":0,"index":5138},{"krate":0,"index":5141},{"krate":0,"index":5144},{"krate":0,"index":5147},{"krate":0,"index":5150},{"krate":0,"index":5153},{"krate":0,"index":5156},{"krate":0,"index":5159},{"krate":0,"index":5162},{"krate":0,"index":5165},{"krate":0,"index":5168},{"krate":0,"index":5171},{"krate":0,"index":5174},{"krate":0,"index":5177},{"krate":0,"index":5180},{"krate":0,"index":5183},{"krate":0,"index":5186},{"krate":0,"index":5189},{"krate":0,"index":5192},{"krate":0,"index":5195},{"krate":0,"index":5198},{"krate":0,"index":5201},{"krate":0,"index":5204},{"krate":0,"index":5207},{"krate":0,"index":5210},{"krate":0,"index":5213},{"krate":0,"index":5216},{"krate":0,"index":5219},{"krate":0,"index":5222},{"krate":0,"index":5225},{"krate":0,"index":5228},{"krate":0,"index":5231},{"krate":0,"index":5234},{"krate":0,"index":5237}],"decl_id":null,"docs":" Analog to digital converter configuration.\n According to CubeMx, all STM32F4 chips use the same ADC IP so this should be correct for all variants.\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":3852,"byte_end":3887,"line_start":106,"line_end":106,"column_start":1,"column_end":36}},{"value":"/ Analog to digital converter configuration.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":5951,"byte_end":5997,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/ According to CubeMx, all STM32F4 chips use the same ADC IP so this should be correct for all variants.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":5998,"byte_end":6104,"line_start":2,"line_end":2,"column_start":1,"column_end":107}},{"value":"deny(missing_docs)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":6106,"byte_end":6128,"line_start":4,"line_end":4,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":6621,"byte_end":6625,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"Vref","qualname":"::adc::Vref","value":"","parent":null,"children":[],"decl_id":null,"docs":" Vref internal signal, used for calibration\n","sig":null,"attributes":[{"value":"/ Vref internal signal, used for calibration","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":6563,"byte_end":6609,"line_start":21,"line_end":21,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":56},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":6707,"byte_end":6711,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"Vbat","qualname":"::adc::Vbat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Vbat internal signal, used for monitoring the battery (if used)\n","sig":null,"attributes":[{"value":"/ Vbat internal signal, used for monitoring the battery (if used)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":6628,"byte_end":6695,"line_start":24,"line_end":24,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":6762,"byte_end":6773,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"Temperature","qualname":"::adc::Temperature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Core temperature internal signal\n","sig":null,"attributes":[{"value":"/ Core temperature internal signal","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":6714,"byte_end":6750,"line_start":27,"line_end":27,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":61},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7270,"byte_end":7276,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"config","qualname":"::adc::config","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","parent":null,"children":[{"krate":0,"index":4739},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4781},{"krate":0,"index":4783},{"krate":0,"index":4785},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":4787},{"krate":0,"index":4804},{"krate":0,"index":4805},{"krate":0,"index":4807},{"krate":0,"index":4808},{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4813},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":4815},{"krate":0,"index":4824},{"krate":0,"index":4825},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4830},{"krate":0,"index":4831},{"krate":0,"index":4833},{"krate":0,"index":70},{"krate":0,"index":4835},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4853},{"krate":0,"index":72},{"krate":0,"index":4855},{"krate":0,"index":4884},{"krate":0,"index":4885},{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4890},{"krate":0,"index":4891},{"krate":0,"index":4893},{"krate":0,"index":74},{"krate":0,"index":4895},{"krate":0,"index":4904},{"krate":0,"index":4905},{"krate":0,"index":4907},{"krate":0,"index":4908},{"krate":0,"index":4910},{"krate":0,"index":4911},{"krate":0,"index":4913},{"krate":0,"index":76},{"krate":0,"index":4915},{"krate":0,"index":4920},{"krate":0,"index":4921},{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4926},{"krate":0,"index":4927},{"krate":0,"index":4929},{"krate":0,"index":78},{"krate":0,"index":4931},{"krate":0,"index":4936},{"krate":0,"index":4937},{"krate":0,"index":4939},{"krate":0,"index":4940},{"krate":0,"index":4942},{"krate":0,"index":4943},{"krate":0,"index":4945},{"krate":0,"index":80},{"krate":0,"index":4947},{"krate":0,"index":4952},{"krate":0,"index":4953},{"krate":0,"index":4955},{"krate":0,"index":4956},{"krate":0,"index":4958},{"krate":0,"index":4959},{"krate":0,"index":4961},{"krate":0,"index":82},{"krate":0,"index":4963},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4973},{"krate":0,"index":4974},{"krate":0,"index":4976},{"krate":0,"index":4977},{"krate":0,"index":4979},{"krate":0,"index":4981},{"krate":0,"index":4988},{"krate":0,"index":4989},{"krate":0,"index":4991},{"krate":0,"index":4992},{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":4997},{"krate":0,"index":4999},{"krate":0,"index":5010},{"krate":0,"index":5011},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5020},{"krate":0,"index":84},{"krate":0,"index":95}],"decl_id":null,"docs":" Contains types related to ADC configuration\n","sig":null,"attributes":[{"value":"/ Contains types related to ADC configuration","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7214,"byte_end":7261,"line_start":46,"line_end":46,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4740},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7518,"byte_end":7521,"line_start":53,"line_end":53,"column_start":9,"column_end":12},"name":"One","qualname":"::adc::config::Sequence::One","value":"Sequence::One","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 1\n","sig":null,"attributes":[{"value":"/ 1","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7504,"byte_end":7509,"line_start":52,"line_end":52,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4742},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7545,"byte_end":7548,"line_start":55,"line_end":55,"column_start":9,"column_end":12},"name":"Two","qualname":"::adc::config::Sequence::Two","value":"Sequence::Two","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 2\n","sig":null,"attributes":[{"value":"/ 2","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7531,"byte_end":7536,"line_start":54,"line_end":54,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4744},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7572,"byte_end":7577,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"Three","qualname":"::adc::config::Sequence::Three","value":"Sequence::Three","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 3\n","sig":null,"attributes":[{"value":"/ 3","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7558,"byte_end":7563,"line_start":56,"line_end":56,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4746},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7601,"byte_end":7605,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"name":"Four","qualname":"::adc::config::Sequence::Four","value":"Sequence::Four","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 4\n","sig":null,"attributes":[{"value":"/ 4","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7587,"byte_end":7592,"line_start":58,"line_end":58,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4748},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7629,"byte_end":7633,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"name":"Five","qualname":"::adc::config::Sequence::Five","value":"Sequence::Five","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 5\n","sig":null,"attributes":[{"value":"/ 5","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7615,"byte_end":7620,"line_start":60,"line_end":60,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4750},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7657,"byte_end":7660,"line_start":63,"line_end":63,"column_start":9,"column_end":12},"name":"Six","qualname":"::adc::config::Sequence::Six","value":"Sequence::Six","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 6\n","sig":null,"attributes":[{"value":"/ 6","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7643,"byte_end":7648,"line_start":62,"line_end":62,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4752},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7684,"byte_end":7689,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"name":"Seven","qualname":"::adc::config::Sequence::Seven","value":"Sequence::Seven","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 7\n","sig":null,"attributes":[{"value":"/ 7","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7670,"byte_end":7675,"line_start":64,"line_end":64,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4754},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7713,"byte_end":7718,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"name":"Eight","qualname":"::adc::config::Sequence::Eight","value":"Sequence::Eight","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 8\n","sig":null,"attributes":[{"value":"/ 8","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7699,"byte_end":7704,"line_start":66,"line_end":66,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4756},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7742,"byte_end":7746,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"name":"Nine","qualname":"::adc::config::Sequence::Nine","value":"Sequence::Nine","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 9\n","sig":null,"attributes":[{"value":"/ 9","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7728,"byte_end":7733,"line_start":68,"line_end":68,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4758},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7771,"byte_end":7774,"line_start":71,"line_end":71,"column_start":9,"column_end":12},"name":"Ten","qualname":"::adc::config::Sequence::Ten","value":"Sequence::Ten","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 10\n","sig":null,"attributes":[{"value":"/ 10","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7756,"byte_end":7762,"line_start":70,"line_end":70,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4760},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7799,"byte_end":7805,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"name":"Eleven","qualname":"::adc::config::Sequence::Eleven","value":"Sequence::Eleven","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 11\n","sig":null,"attributes":[{"value":"/ 11","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7784,"byte_end":7790,"line_start":72,"line_end":72,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4762},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7830,"byte_end":7836,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"name":"Twelve","qualname":"::adc::config::Sequence::Twelve","value":"Sequence::Twelve","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 12\n","sig":null,"attributes":[{"value":"/ 12","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7815,"byte_end":7821,"line_start":74,"line_end":74,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4764},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7861,"byte_end":7869,"line_start":77,"line_end":77,"column_start":9,"column_end":17},"name":"Thirteen","qualname":"::adc::config::Sequence::Thirteen","value":"Sequence::Thirteen","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 13\n","sig":null,"attributes":[{"value":"/ 13","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7846,"byte_end":7852,"line_start":76,"line_end":76,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4766},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7894,"byte_end":7902,"line_start":79,"line_end":79,"column_start":9,"column_end":17},"name":"Fourteen","qualname":"::adc::config::Sequence::Fourteen","value":"Sequence::Fourteen","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 14\n","sig":null,"attributes":[{"value":"/ 14","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7879,"byte_end":7885,"line_start":78,"line_end":78,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4768},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7927,"byte_end":7934,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"name":"Fifteen","qualname":"::adc::config::Sequence::Fifteen","value":"Sequence::Fifteen","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 15\n","sig":null,"attributes":[{"value":"/ 15","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7912,"byte_end":7918,"line_start":80,"line_end":80,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4770},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7959,"byte_end":7966,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"name":"Sixteen","qualname":"::adc::config::Sequence::Sixteen","value":"Sequence::Sixteen","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":" 16\n","sig":null,"attributes":[{"value":"/ 16","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7944,"byte_end":7950,"line_start":82,"line_end":82,"column_start":9,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":4739},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7485,"byte_end":7493,"line_start":51,"line_end":51,"column_start":14,"column_end":22},"name":"Sequence","qualname":"::adc::config::Sequence","value":"pub enum Sequence {\n    One,\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    Ten,\n    Eleven,\n    Twelve,\n    Thirteen,\n    Fourteen,\n    Fifteen,\n    Sixteen,\n}","parent":null,"children":[{"krate":0,"index":4740},{"krate":0,"index":4742},{"krate":0,"index":4744},{"krate":0,"index":4746},{"krate":0,"index":4748},{"krate":0,"index":4750},{"krate":0,"index":4752},{"krate":0,"index":4754},{"krate":0,"index":4756},{"krate":0,"index":4758},{"krate":0,"index":4760},{"krate":0,"index":4762},{"krate":0,"index":4764},{"krate":0,"index":4766},{"krate":0,"index":4768},{"krate":0,"index":4770}],"decl_id":null,"docs":" The place in the sequence a given channel should be captured\n","sig":null,"attributes":[{"value":"/ The place in the sequence a given channel should be captured","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":7283,"byte_end":7347,"line_start":48,"line_end":48,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4788},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9713,"byte_end":9721,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"Cycles_3","qualname":"::adc::config::SampleTime::Cycles_3","value":"SampleTime::Cycles_3","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" 3 cycles\n","sig":null,"attributes":[{"value":"/ 3 cycles","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9692,"byte_end":9704,"line_start":137,"line_end":137,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4790},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9753,"byte_end":9762,"line_start":140,"line_end":140,"column_start":9,"column_end":18},"name":"Cycles_15","qualname":"::adc::config::SampleTime::Cycles_15","value":"SampleTime::Cycles_15","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" 15 cycles\n","sig":null,"attributes":[{"value":"/ 15 cycles","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9731,"byte_end":9744,"line_start":139,"line_end":139,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4792},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9794,"byte_end":9803,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"name":"Cycles_28","qualname":"::adc::config::SampleTime::Cycles_28","value":"SampleTime::Cycles_28","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" 28 cycles\n","sig":null,"attributes":[{"value":"/ 28 cycles","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9772,"byte_end":9785,"line_start":141,"line_end":141,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4794},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9835,"byte_end":9844,"line_start":144,"line_end":144,"column_start":9,"column_end":18},"name":"Cycles_56","qualname":"::adc::config::SampleTime::Cycles_56","value":"SampleTime::Cycles_56","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" 56 cycles\n","sig":null,"attributes":[{"value":"/ 56 cycles","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9813,"byte_end":9826,"line_start":143,"line_end":143,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4796},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9876,"byte_end":9885,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"Cycles_84","qualname":"::adc::config::SampleTime::Cycles_84","value":"SampleTime::Cycles_84","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" 84 cycles\n","sig":null,"attributes":[{"value":"/ 84 cycles","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9854,"byte_end":9867,"line_start":145,"line_end":145,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4798},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9918,"byte_end":9928,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"Cycles_112","qualname":"::adc::config::SampleTime::Cycles_112","value":"SampleTime::Cycles_112","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" 112 cycles\n","sig":null,"attributes":[{"value":"/ 112 cycles","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9895,"byte_end":9909,"line_start":147,"line_end":147,"column_start":9,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4800},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9961,"byte_end":9971,"line_start":150,"line_end":150,"column_start":9,"column_end":19},"name":"Cycles_144","qualname":"::adc::config::SampleTime::Cycles_144","value":"SampleTime::Cycles_144","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" 144 cycles\n","sig":null,"attributes":[{"value":"/ 144 cycles","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9938,"byte_end":9952,"line_start":149,"line_end":149,"column_start":9,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4802},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":10004,"byte_end":10014,"line_start":152,"line_end":152,"column_start":9,"column_end":19},"name":"Cycles_480","qualname":"::adc::config::SampleTime::Cycles_480","value":"SampleTime::Cycles_480","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" 480 cycles\n","sig":null,"attributes":[{"value":"/ 480 cycles","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9981,"byte_end":9995,"line_start":151,"line_end":151,"column_start":9,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":4787},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9671,"byte_end":9681,"line_start":136,"line_end":136,"column_start":14,"column_end":24},"name":"SampleTime","qualname":"::adc::config::SampleTime","value":"pub enum SampleTime {\n    Cycles_3,\n    Cycles_15,\n    Cycles_28,\n    Cycles_56,\n    Cycles_84,\n    Cycles_112,\n    Cycles_144,\n    Cycles_480,\n}","parent":null,"children":[{"krate":0,"index":4788},{"krate":0,"index":4790},{"krate":0,"index":4792},{"krate":0,"index":4794},{"krate":0,"index":4796},{"krate":0,"index":4798},{"krate":0,"index":4800},{"krate":0,"index":4802}],"decl_id":null,"docs":" The number of cycles to sample a given channel for\n","sig":null,"attributes":[{"value":"/ The number of cycles to sample a given channel for","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":9496,"byte_end":9550,"line_start":133,"line_end":133,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4816},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11298,"byte_end":11309,"line_start":192,"line_end":192,"column_start":9,"column_end":20},"name":"Pclk2_div_2","qualname":"::adc::config::Clock::Pclk2_div_2","value":"Clock::Pclk2_div_2","parent":{"krate":0,"index":4815},"children":[],"decl_id":null,"docs":" PCLK2 (APB2) divided by 2\n","sig":null,"attributes":[{"value":"/ PCLK2 (APB2) divided by 2","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11260,"byte_end":11289,"line_start":191,"line_end":191,"column_start":9,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4818},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11357,"byte_end":11368,"line_start":194,"line_end":194,"column_start":9,"column_end":20},"name":"Pclk2_div_4","qualname":"::adc::config::Clock::Pclk2_div_4","value":"Clock::Pclk2_div_4","parent":{"krate":0,"index":4815},"children":[],"decl_id":null,"docs":" PCLK2 (APB2) divided by 4\n","sig":null,"attributes":[{"value":"/ PCLK2 (APB2) divided by 4","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11319,"byte_end":11348,"line_start":193,"line_end":193,"column_start":9,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4820},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11416,"byte_end":11427,"line_start":196,"line_end":196,"column_start":9,"column_end":20},"name":"Pclk2_div_6","qualname":"::adc::config::Clock::Pclk2_div_6","value":"Clock::Pclk2_div_6","parent":{"krate":0,"index":4815},"children":[],"decl_id":null,"docs":" PCLK2 (APB2) divided by 6\n","sig":null,"attributes":[{"value":"/ PCLK2 (APB2) divided by 6","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11378,"byte_end":11407,"line_start":195,"line_end":195,"column_start":9,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4822},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11475,"byte_end":11486,"line_start":198,"line_end":198,"column_start":9,"column_end":20},"name":"Pclk2_div_8","qualname":"::adc::config::Clock::Pclk2_div_8","value":"Clock::Pclk2_div_8","parent":{"krate":0,"index":4815},"children":[],"decl_id":null,"docs":" PCLK2 (APB2) divided by 8\n","sig":null,"attributes":[{"value":"/ PCLK2 (APB2) divided by 8","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11437,"byte_end":11466,"line_start":197,"line_end":197,"column_start":9,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":4815},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11244,"byte_end":11249,"line_start":190,"line_end":190,"column_start":14,"column_end":19},"name":"Clock","qualname":"::adc::config::Clock","value":"pub enum Clock { Pclk2_div_2, Pclk2_div_4, Pclk2_div_6, Pclk2_div_8, }","parent":null,"children":[{"krate":0,"index":4816},{"krate":0,"index":4818},{"krate":0,"index":4820},{"krate":0,"index":4822}],"decl_id":null,"docs":" Clock config for the ADC\n Check the datasheet for the maximum speed the ADC supports\n","sig":null,"attributes":[{"value":"/ Clock config for the ADC","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11028,"byte_end":11056,"line_start":186,"line_end":186,"column_start":5,"column_end":33}},{"value":"/ Check the datasheet for the maximum speed the ADC supports","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11061,"byte_end":11123,"line_start":187,"line_end":187,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4836},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11968,"byte_end":11974,"line_start":217,"line_end":217,"column_start":9,"column_end":15},"name":"Twelve","qualname":"::adc::config::Resolution::Twelve","value":"Resolution::Twelve","parent":{"krate":0,"index":4835},"children":[],"decl_id":null,"docs":" 12-bit\n","sig":null,"attributes":[{"value":"/ 12-bit","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11949,"byte_end":11959,"line_start":216,"line_end":216,"column_start":9,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4838},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12003,"byte_end":12006,"line_start":219,"line_end":219,"column_start":9,"column_end":12},"name":"Ten","qualname":"::adc::config::Resolution::Ten","value":"Resolution::Ten","parent":{"krate":0,"index":4835},"children":[],"decl_id":null,"docs":" 10-bit\n","sig":null,"attributes":[{"value":"/ 10-bit","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11984,"byte_end":11994,"line_start":218,"line_end":218,"column_start":9,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4840},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12034,"byte_end":12039,"line_start":221,"line_end":221,"column_start":9,"column_end":14},"name":"Eight","qualname":"::adc::config::Resolution::Eight","value":"Resolution::Eight","parent":{"krate":0,"index":4835},"children":[],"decl_id":null,"docs":" 8-bit\n","sig":null,"attributes":[{"value":"/ 8-bit","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12016,"byte_end":12025,"line_start":220,"line_end":220,"column_start":9,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4842},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12067,"byte_end":12070,"line_start":223,"line_end":223,"column_start":9,"column_end":12},"name":"Six","qualname":"::adc::config::Resolution::Six","value":"Resolution::Six","parent":{"krate":0,"index":4835},"children":[],"decl_id":null,"docs":" 6-bit\n","sig":null,"attributes":[{"value":"/ 6-bit","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12049,"byte_end":12058,"line_start":222,"line_end":222,"column_start":9,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":4835},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11928,"byte_end":11938,"line_start":215,"line_end":215,"column_start":14,"column_end":24},"name":"Resolution","qualname":"::adc::config::Resolution","value":"pub enum Resolution { Twelve, Ten, Eight, Six, }","parent":null,"children":[{"krate":0,"index":4836},{"krate":0,"index":4838},{"krate":0,"index":4840},{"krate":0,"index":4842}],"decl_id":null,"docs":" Resolution to sample at\n","sig":null,"attributes":[{"value":"/ Resolution to sample at","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":11780,"byte_end":11807,"line_start":212,"line_end":212,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4856},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12600,"byte_end":12610,"line_start":241,"line_end":241,"column_start":9,"column_end":19},"name":"Tim_1_cc_1","qualname":"::adc::config::ExternalTrigger::Tim_1_cc_1","value":"ExternalTrigger::Tim_1_cc_1","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM1 compare channel 1\n","sig":null,"attributes":[{"value":"/ TIM1 compare channel 1","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12565,"byte_end":12591,"line_start":240,"line_end":240,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4858},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12655,"byte_end":12665,"line_start":243,"line_end":243,"column_start":9,"column_end":19},"name":"Tim_1_cc_2","qualname":"::adc::config::ExternalTrigger::Tim_1_cc_2","value":"ExternalTrigger::Tim_1_cc_2","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM1 compare channel 2\n","sig":null,"attributes":[{"value":"/ TIM1 compare channel 2","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12620,"byte_end":12646,"line_start":242,"line_end":242,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4860},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12710,"byte_end":12720,"line_start":245,"line_end":245,"column_start":9,"column_end":19},"name":"Tim_1_cc_3","qualname":"::adc::config::ExternalTrigger::Tim_1_cc_3","value":"ExternalTrigger::Tim_1_cc_3","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM1 compare channel 3\n","sig":null,"attributes":[{"value":"/ TIM1 compare channel 3","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12675,"byte_end":12701,"line_start":244,"line_end":244,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4862},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12765,"byte_end":12775,"line_start":247,"line_end":247,"column_start":9,"column_end":19},"name":"Tim_2_cc_2","qualname":"::adc::config::ExternalTrigger::Tim_2_cc_2","value":"ExternalTrigger::Tim_2_cc_2","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM2 compare channel 2\n","sig":null,"attributes":[{"value":"/ TIM2 compare channel 2","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12730,"byte_end":12756,"line_start":246,"line_end":246,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4864},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12820,"byte_end":12830,"line_start":249,"line_end":249,"column_start":9,"column_end":19},"name":"Tim_2_cc_3","qualname":"::adc::config::ExternalTrigger::Tim_2_cc_3","value":"ExternalTrigger::Tim_2_cc_3","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM2 compare channel 3\n","sig":null,"attributes":[{"value":"/ TIM2 compare channel 3","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12785,"byte_end":12811,"line_start":248,"line_end":248,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4866},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12875,"byte_end":12885,"line_start":251,"line_end":251,"column_start":9,"column_end":19},"name":"Tim_2_cc_4","qualname":"::adc::config::ExternalTrigger::Tim_2_cc_4","value":"ExternalTrigger::Tim_2_cc_4","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM2 compare channel 4\n","sig":null,"attributes":[{"value":"/ TIM2 compare channel 4","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12840,"byte_end":12866,"line_start":250,"line_end":250,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4868},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12924,"byte_end":12934,"line_start":253,"line_end":253,"column_start":9,"column_end":19},"name":"Tim_2_trgo","qualname":"::adc::config::ExternalTrigger::Tim_2_trgo","value":"ExternalTrigger::Tim_2_trgo","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM2 trigger out\n","sig":null,"attributes":[{"value":"/ TIM2 trigger out","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12895,"byte_end":12915,"line_start":252,"line_end":252,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4870},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12979,"byte_end":12989,"line_start":255,"line_end":255,"column_start":9,"column_end":19},"name":"Tim_3_cc_1","qualname":"::adc::config::ExternalTrigger::Tim_3_cc_1","value":"ExternalTrigger::Tim_3_cc_1","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM3 compare channel 1\n","sig":null,"attributes":[{"value":"/ TIM3 compare channel 1","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12944,"byte_end":12970,"line_start":254,"line_end":254,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4872},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":13028,"byte_end":13038,"line_start":257,"line_end":257,"column_start":9,"column_end":19},"name":"Tim_3_trgo","qualname":"::adc::config::ExternalTrigger::Tim_3_trgo","value":"ExternalTrigger::Tim_3_trgo","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM3 trigger out\n","sig":null,"attributes":[{"value":"/ TIM3 trigger out","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12999,"byte_end":13019,"line_start":256,"line_end":256,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4874},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":13083,"byte_end":13093,"line_start":259,"line_end":259,"column_start":9,"column_end":19},"name":"Tim_4_cc_4","qualname":"::adc::config::ExternalTrigger::Tim_4_cc_4","value":"ExternalTrigger::Tim_4_cc_4","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM4 compare channel 4\n","sig":null,"attributes":[{"value":"/ TIM4 compare channel 4","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":13048,"byte_end":13074,"line_start":258,"line_end":258,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4876},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":13138,"byte_end":13148,"line_start":261,"line_end":261,"column_start":9,"column_end":19},"name":"Tim_5_cc_1","qualname":"::adc::config::ExternalTrigger::Tim_5_cc_1","value":"ExternalTrigger::Tim_5_cc_1","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM5 compare channel 1\n","sig":null,"attributes":[{"value":"/ TIM5 compare channel 1","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":13103,"byte_end":13129,"line_start":260,"line_end":260,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4878},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":13193,"byte_end":13203,"line_start":263,"line_end":263,"column_start":9,"column_end":19},"name":"Tim_5_cc_2","qualname":"::adc::config::ExternalTrigger::Tim_5_cc_2","value":"ExternalTrigger::Tim_5_cc_2","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM5 compare channel 2\n","sig":null,"attributes":[{"value":"/ TIM5 compare channel 2","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":13158,"byte_end":13184,"line_start":262,"line_end":262,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4880},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":13248,"byte_end":13258,"line_start":265,"line_end":265,"column_start":9,"column_end":19},"name":"Tim_5_cc_3","qualname":"::adc::config::ExternalTrigger::Tim_5_cc_3","value":"ExternalTrigger::Tim_5_cc_3","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" TIM5 compare channel 3\n","sig":null,"attributes":[{"value":"/ TIM5 compare channel 3","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":13213,"byte_end":13239,"line_start":264,"line_end":264,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4882},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":13306,"byte_end":13313,"line_start":267,"line_end":267,"column_start":9,"column_end":16},"name":"Exti_11","qualname":"::adc::config::ExternalTrigger::Exti_11","value":"ExternalTrigger::Exti_11","parent":{"krate":0,"index":4855},"children":[],"decl_id":null,"docs":" External interupt line 11\n","sig":null,"attributes":[{"value":"/ External interupt line 11","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":13268,"byte_end":13297,"line_start":266,"line_end":266,"column_start":9,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":4855},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12539,"byte_end":12554,"line_start":239,"line_end":239,"column_start":14,"column_end":29},"name":"ExternalTrigger","qualname":"::adc::config::ExternalTrigger","value":"pub enum ExternalTrigger {\n    Tim_1_cc_1,\n    Tim_1_cc_2,\n    Tim_1_cc_3,\n    Tim_2_cc_2,\n    Tim_2_cc_3,\n    Tim_2_cc_4,\n    Tim_2_trgo,\n    Tim_3_cc_1,\n    Tim_3_trgo,\n    Tim_4_cc_4,\n    Tim_5_cc_1,\n    Tim_5_cc_2,\n    Tim_5_cc_3,\n    Exti_11,\n}","parent":null,"children":[{"krate":0,"index":4856},{"krate":0,"index":4858},{"krate":0,"index":4860},{"krate":0,"index":4862},{"krate":0,"index":4864},{"krate":0,"index":4866},{"krate":0,"index":4868},{"krate":0,"index":4870},{"krate":0,"index":4872},{"krate":0,"index":4874},{"krate":0,"index":4876},{"krate":0,"index":4878},{"krate":0,"index":4880},{"krate":0,"index":4882}],"decl_id":null,"docs":" Possible external triggers the ADC can listen to\n","sig":null,"attributes":[{"value":"/ Possible external triggers the ADC can listen to","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":12366,"byte_end":12418,"line_start":236,"line_end":236,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4896},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":14445,"byte_end":14453,"line_start":295,"line_end":295,"column_start":9,"column_end":17},"name":"Disabled","qualname":"::adc::config::TriggerMode::Disabled","value":"TriggerMode::Disabled","parent":{"krate":0,"index":4895},"children":[],"decl_id":null,"docs":" Don't listen to external trigger\n","sig":null,"attributes":[{"value":"/ Don't listen to external trigger","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":14400,"byte_end":14436,"line_start":294,"line_end":294,"column_start":9,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4898},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":14519,"byte_end":14529,"line_start":297,"line_end":297,"column_start":9,"column_end":19},"name":"RisingEdge","qualname":"::adc::config::TriggerMode::RisingEdge","value":"TriggerMode::RisingEdge","parent":{"krate":0,"index":4895},"children":[],"decl_id":null,"docs":" Listen for rising edges of external trigger\n","sig":null,"attributes":[{"value":"/ Listen for rising edges of external trigger","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":14463,"byte_end":14510,"line_start":296,"line_end":296,"column_start":9,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4900},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":14596,"byte_end":14607,"line_start":299,"line_end":299,"column_start":9,"column_end":20},"name":"FallingEdge","qualname":"::adc::config::TriggerMode::FallingEdge","value":"TriggerMode::FallingEdge","parent":{"krate":0,"index":4895},"children":[],"decl_id":null,"docs":" Listen for falling edges of external trigger\n","sig":null,"attributes":[{"value":"/ Listen for falling edges of external trigger","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":14539,"byte_end":14587,"line_start":298,"line_end":298,"column_start":9,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4902},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":14690,"byte_end":14699,"line_start":301,"line_end":301,"column_start":9,"column_end":18},"name":"BothEdges","qualname":"::adc::config::TriggerMode::BothEdges","value":"TriggerMode::BothEdges","parent":{"krate":0,"index":4895},"children":[],"decl_id":null,"docs":" Listen for both rising and falling edges of external trigger\n","sig":null,"attributes":[{"value":"/ Listen for both rising and falling edges of external trigger","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":14617,"byte_end":14681,"line_start":300,"line_end":300,"column_start":9,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":4895},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":14378,"byte_end":14389,"line_start":293,"line_end":293,"column_start":14,"column_end":25},"name":"TriggerMode","qualname":"::adc::config::TriggerMode","value":"pub enum TriggerMode { Disabled, RisingEdge, FallingEdge, BothEdges, }","parent":null,"children":[{"krate":0,"index":4896},{"krate":0,"index":4898},{"krate":0,"index":4900},{"krate":0,"index":4902}],"decl_id":null,"docs":" Possible trigger modes\n","sig":null,"attributes":[{"value":"/ Possible trigger modes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":14231,"byte_end":14257,"line_start":290,"line_end":290,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4916},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15224,"byte_end":15229,"line_start":319,"line_end":319,"column_start":9,"column_end":14},"name":"Right","qualname":"::adc::config::Align::Right","value":"Align::Right","parent":{"krate":0,"index":4915},"children":[],"decl_id":null,"docs":" Right align output data\n","sig":null,"attributes":[{"value":"/ Right align output data","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15188,"byte_end":15215,"line_start":318,"line_end":318,"column_start":9,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4918},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15274,"byte_end":15278,"line_start":321,"line_end":321,"column_start":9,"column_end":13},"name":"Left","qualname":"::adc::config::Align::Left","value":"Align::Left","parent":{"krate":0,"index":4915},"children":[],"decl_id":null,"docs":" Left align output data\n","sig":null,"attributes":[{"value":"/ Left align output data","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15239,"byte_end":15265,"line_start":320,"line_end":320,"column_start":9,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":4915},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15172,"byte_end":15177,"line_start":317,"line_end":317,"column_start":14,"column_end":19},"name":"Align","qualname":"::adc::config::Align","value":"pub enum Align { Right, Left, }","parent":null,"children":[{"krate":0,"index":4916},{"krate":0,"index":4918}],"decl_id":null,"docs":" Data register alignment\n","sig":null,"attributes":[{"value":"/ Data register alignment","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15024,"byte_end":15051,"line_start":314,"line_end":314,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4932},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15677,"byte_end":15685,"line_start":337,"line_end":337,"column_start":9,"column_end":17},"name":"Disabled","qualname":"::adc::config::Scan::Disabled","value":"Scan::Disabled","parent":{"krate":0,"index":4931},"children":[],"decl_id":null,"docs":" Scan mode disabled\n","sig":null,"attributes":[{"value":"/ Scan mode disabled","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15646,"byte_end":15668,"line_start":336,"line_end":336,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4934},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15725,"byte_end":15732,"line_start":339,"line_end":339,"column_start":9,"column_end":16},"name":"Enabled","qualname":"::adc::config::Scan::Enabled","value":"Scan::Enabled","parent":{"krate":0,"index":4931},"children":[],"decl_id":null,"docs":" Scan mode enabled\n","sig":null,"attributes":[{"value":"/ Scan mode enabled","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15695,"byte_end":15716,"line_start":338,"line_end":338,"column_start":9,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":4931},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15631,"byte_end":15635,"line_start":335,"line_end":335,"column_start":14,"column_end":18},"name":"Scan","qualname":"::adc::config::Scan","value":"pub enum Scan { Disabled, Enabled, }","parent":null,"children":[{"krate":0,"index":4932},{"krate":0,"index":4934}],"decl_id":null,"docs":" Scan enable/disable\n","sig":null,"attributes":[{"value":"/ Scan enable/disable","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15487,"byte_end":15510,"line_start":332,"line_end":332,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4948},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16164,"byte_end":16170,"line_start":355,"line_end":355,"column_start":9,"column_end":15},"name":"Single","qualname":"::adc::config::Continuous::Single","value":"Continuous::Single","parent":{"krate":0,"index":4947},"children":[],"decl_id":null,"docs":" Single mode, continuous disabled\n","sig":null,"attributes":[{"value":"/ Single mode, continuous disabled","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16119,"byte_end":16155,"line_start":354,"line_end":354,"column_start":9,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4950},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16216,"byte_end":16226,"line_start":357,"line_end":357,"column_start":9,"column_end":19},"name":"Continuous","qualname":"::adc::config::Continuous::Continuous","value":"Continuous::Continuous","parent":{"krate":0,"index":4947},"children":[],"decl_id":null,"docs":" Continuous mode enabled\n","sig":null,"attributes":[{"value":"/ Continuous mode enabled","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16180,"byte_end":16207,"line_start":356,"line_end":356,"column_start":9,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":4947},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16098,"byte_end":16108,"line_start":353,"line_end":353,"column_start":14,"column_end":24},"name":"Continuous","qualname":"::adc::config::Continuous","value":"pub enum Continuous { Single, Continuous, }","parent":null,"children":[{"krate":0,"index":4948},{"krate":0,"index":4950}],"decl_id":null,"docs":" Continuous mode enable/disable\n","sig":null,"attributes":[{"value":"/ Continuous mode enable/disable","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":15943,"byte_end":15977,"line_start":350,"line_end":350,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4964},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16638,"byte_end":16646,"line_start":373,"line_end":373,"column_start":9,"column_end":17},"name":"Disabled","qualname":"::adc::config::Dma::Disabled","value":"Dma::Disabled","parent":{"krate":0,"index":4963},"children":[],"decl_id":null,"docs":" No DMA, disabled\n","sig":null,"attributes":[{"value":"/ No DMA, disabled","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16609,"byte_end":16629,"line_start":372,"line_end":372,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4966},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16732,"byte_end":16738,"line_start":375,"line_end":375,"column_start":9,"column_end":15},"name":"Single","qualname":"::adc::config::Dma::Single","value":"Dma::Single","parent":{"krate":0,"index":4963},"children":[],"decl_id":null,"docs":" Single DMA, DMA will be disabled after each conversion sequence\n","sig":null,"attributes":[{"value":"/ Single DMA, DMA will be disabled after each conversion sequence","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16656,"byte_end":16723,"line_start":374,"line_end":374,"column_start":9,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4968},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16817,"byte_end":16827,"line_start":377,"line_end":377,"column_start":9,"column_end":19},"name":"Continuous","qualname":"::adc::config::Dma::Continuous","value":"Dma::Continuous","parent":{"krate":0,"index":4963},"children":[],"decl_id":null,"docs":" Continuous DMA, DMA will remain enabled after conversion\n","sig":null,"attributes":[{"value":"/ Continuous DMA, DMA will remain enabled after conversion","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16748,"byte_end":16808,"line_start":376,"line_end":376,"column_start":9,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":4963},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16595,"byte_end":16598,"line_start":371,"line_end":371,"column_start":14,"column_end":17},"name":"Dma","qualname":"::adc::config::Dma","value":"pub enum Dma { Disabled, Single, Continuous, }","parent":null,"children":[{"krate":0,"index":4964},{"krate":0,"index":4966},{"krate":0,"index":4968}],"decl_id":null,"docs":" DMA mode\n","sig":null,"attributes":[{"value":"/ DMA mode","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16462,"byte_end":16474,"line_start":368,"line_end":368,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4982},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":17072,"byte_end":17080,"line_start":385,"line_end":385,"column_start":9,"column_end":17},"name":"Disabled","qualname":"::adc::config::Eoc::Disabled","value":"Eoc::Disabled","parent":{"krate":0,"index":4981},"children":[],"decl_id":null,"docs":" End-of-conversion interrupt disabled\n","sig":null,"attributes":[{"value":"/ End-of-conversion interrupt disabled","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":17023,"byte_end":17063,"line_start":384,"line_end":384,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4984},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":17153,"byte_end":17163,"line_start":387,"line_end":387,"column_start":9,"column_end":19},"name":"Conversion","qualname":"::adc::config::Eoc::Conversion","value":"Eoc::Conversion","parent":{"krate":0,"index":4981},"children":[],"decl_id":null,"docs":" End-of-conversion interrupt enabled per conversion\n","sig":null,"attributes":[{"value":"/ End-of-conversion interrupt enabled per conversion","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":17090,"byte_end":17144,"line_start":386,"line_end":386,"column_start":9,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4986},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":17234,"byte_end":17242,"line_start":389,"line_end":389,"column_start":9,"column_end":17},"name":"Sequence","qualname":"::adc::config::Eoc::Sequence","value":"Eoc::Sequence","parent":{"krate":0,"index":4981},"children":[],"decl_id":null,"docs":" End-of-conversion interrupt enabled per sequence\n","sig":null,"attributes":[{"value":"/ End-of-conversion interrupt enabled per sequence","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":17173,"byte_end":17225,"line_start":388,"line_end":388,"column_start":9,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":4981},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":17009,"byte_end":17012,"line_start":383,"line_end":383,"column_start":14,"column_end":17},"name":"Eoc","qualname":"::adc::config::Eoc","value":"pub enum Eoc { Disabled, Conversion, Sequence, }","parent":null,"children":[{"krate":0,"index":4982},{"krate":0,"index":4984},{"krate":0,"index":4986}],"decl_id":null,"docs":" End-of-conversion interrupt enabled/disabled\n","sig":null,"attributes":[{"value":"/ End-of-conversion interrupt enabled/disabled","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":16840,"byte_end":16888,"line_start":380,"line_end":380,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":4999},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":17558,"byte_end":17567,"line_start":397,"line_end":397,"column_start":16,"column_end":25},"name":"AdcConfig","qualname":"::adc::config::AdcConfig","value":"AdcConfig {  }","parent":null,"children":[{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5003},{"krate":0,"index":5004},{"krate":0,"index":5005},{"krate":0,"index":5006},{"krate":0,"index":5007},{"krate":0,"index":5008},{"krate":0,"index":5009}],"decl_id":null,"docs":" Configuration for the adc.\n There are some additional parameters on the adc peripheral that can be\n added here when needed but this covers several basic usecases.\n","sig":null,"attributes":[{"value":"/ Configuration for the adc.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":17255,"byte_end":17285,"line_start":392,"line_end":392,"column_start":5,"column_end":35}},{"value":"/ There are some additional parameters on the adc peripheral that can be","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":17290,"byte_end":17364,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ added here when needed but this covers several basic usecases.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":17369,"byte_end":17435,"line_start":394,"line_end":394,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18072,"byte_end":18077,"line_start":412,"line_end":412,"column_start":16,"column_end":21},"name":"clock","qualname":"<AdcConfig>::clock","value":"pub fn clock(Self, Clock) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the clock field\n","sig":null,"attributes":[{"value":"/ change the clock field","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18030,"byte_end":18056,"line_start":411,"line_end":411,"column_start":9,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18226,"byte_end":18236,"line_start":417,"line_end":417,"column_start":16,"column_end":26},"name":"resolution","qualname":"<AdcConfig>::resolution","value":"pub fn resolution(Self, Resolution) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the resolution field\n","sig":null,"attributes":[{"value":"/ change the resolution field","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18179,"byte_end":18210,"line_start":416,"line_end":416,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18400,"byte_end":18405,"line_start":422,"line_end":422,"column_start":16,"column_end":21},"name":"align","qualname":"<AdcConfig>::align","value":"pub fn align(Self, Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the align field\n","sig":null,"attributes":[{"value":"/ change the align field","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18358,"byte_end":18384,"line_start":421,"line_end":421,"column_start":9,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18548,"byte_end":18552,"line_start":427,"line_end":427,"column_start":16,"column_end":20},"name":"scan","qualname":"<AdcConfig>::scan","value":"pub fn scan(Self, Scan) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the scan field\n","sig":null,"attributes":[{"value":"/ change the scan field","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18507,"byte_end":18532,"line_start":426,"line_end":426,"column_start":9,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18703,"byte_end":18719,"line_start":432,"line_end":432,"column_start":16,"column_end":32},"name":"external_trigger","qualname":"<AdcConfig>::external_trigger","value":"pub fn external_trigger(Self, TriggerMode, ExternalTrigger) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the external_trigger field\n","sig":null,"attributes":[{"value":"/ change the external_trigger field","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18650,"byte_end":18687,"line_start":431,"line_end":431,"column_start":9,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18983,"byte_end":18993,"line_start":441,"line_end":441,"column_start":16,"column_end":26},"name":"continuous","qualname":"<AdcConfig>::continuous","value":"pub fn continuous(Self, Continuous) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the continuous field\n","sig":null,"attributes":[{"value":"/ change the continuous field","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18936,"byte_end":18967,"line_start":440,"line_end":440,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":19155,"byte_end":19158,"line_start":446,"line_end":446,"column_start":16,"column_end":19},"name":"dma","qualname":"<AdcConfig>::dma","value":"pub fn dma(Self, Dma) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the dma field\n","sig":null,"attributes":[{"value":"/ change the dma field","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":19115,"byte_end":19139,"line_start":445,"line_end":445,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":19316,"byte_end":19343,"line_start":451,"line_end":451,"column_start":16,"column_end":43},"name":"end_of_conversion_interrupt","qualname":"<AdcConfig>::end_of_conversion_interrupt","value":"pub fn end_of_conversion_interrupt(Self, Eoc) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the end_of_conversion_interrupt field\n","sig":null,"attributes":[{"value":"/ change the end_of_conversion_interrupt field","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":19252,"byte_end":19300,"line_start":450,"line_end":450,"column_start":9,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":19565,"byte_end":19584,"line_start":456,"line_end":456,"column_start":16,"column_end":35},"name":"default_sample_time","qualname":"<AdcConfig>::default_sample_time","value":"pub fn default_sample_time(Self, SampleTime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the default_sample_time field\n","sig":null,"attributes":[{"value":"/ change the default_sample_time field","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":19509,"byte_end":19549,"line_start":455,"line_end":455,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":19894,"byte_end":19911,"line_start":465,"line_end":465,"column_start":16,"column_end":33},"name":"reference_voltage","qualname":"<AdcConfig>::reference_voltage","value":"pub fn reference_voltage(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the reference voltage for the ADC.","sig":null,"attributes":[{"value":"/ Specify the reference voltage for the ADC.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":19734,"byte_end":19780,"line_start":461,"line_end":461,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":19789,"byte_end":19792,"line_start":462,"line_end":462,"column_start":9,"column_end":12}},{"value":"/ # Args","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":19801,"byte_end":19811,"line_start":463,"line_end":463,"column_start":9,"column_end":19}},{"value":"/ * `vdda_mv` - The ADC reference voltage in millivolts.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":19820,"byte_end":19878,"line_start":464,"line_end":464,"column_start":9,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5022},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25485,"byte_end":25488,"line_start":622,"line_end":622,"column_start":12,"column_end":15},"name":"Adc","qualname":"::adc::Adc","value":"Adc {  }","parent":null,"children":[{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5026},{"krate":0,"index":5027}],"decl_id":null,"docs":" Analog to Digital Converter\n # Status\n Most options relating to regular conversions are implemented. One-shot and sequences of conversions\n have been tested and work as expected.","sig":null,"attributes":[{"value":"/ Analog to Digital Converter","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":20622,"byte_end":20653,"line_start":489,"line_end":489,"column_start":1,"column_end":32}},{"value":"/ # Status","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":20654,"byte_end":20666,"line_start":490,"line_end":490,"column_start":1,"column_end":13}},{"value":"/ Most options relating to regular conversions are implemented. One-shot and sequences of conversions","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":20667,"byte_end":20770,"line_start":491,"line_end":491,"column_start":1,"column_end":104}},{"value":"/ have been tested and work as expected.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":20771,"byte_end":20813,"line_start":492,"line_end":492,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":20814,"byte_end":20817,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ GPIO to channel mapping should be correct for all supported F4 devices. The mappings were taken from","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":20818,"byte_end":20922,"line_start":494,"line_end":494,"column_start":1,"column_end":105}},{"value":"/ CubeMX. The mappings are feature gated per 4xx device but there are actually sub variants for some","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":20923,"byte_end":21025,"line_start":495,"line_end":495,"column_start":1,"column_end":103}},{"value":"/ devices and some pins may be missing on some variants. The implementation has been split up and commented","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21026,"byte_end":21135,"line_start":496,"line_end":496,"column_start":1,"column_end":110}},{"value":"/ to show which pins are available on certain device variants but currently the library doesn't enforce this.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21136,"byte_end":21247,"line_start":497,"line_end":497,"column_start":1,"column_end":112}},{"value":"/ To fully support the right pins would require 10+ more features for the various variants.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21248,"byte_end":21341,"line_start":498,"line_end":498,"column_start":1,"column_end":94}},{"value":"/ ## Todo","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21342,"byte_end":21353,"line_start":499,"line_end":499,"column_start":1,"column_end":12}},{"value":"/ * Injected conversions","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21354,"byte_end":21380,"line_start":500,"line_end":500,"column_start":1,"column_end":27}},{"value":"/ * Analog watchdog config","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21381,"byte_end":21409,"line_start":501,"line_end":501,"column_start":1,"column_end":29}},{"value":"/ * Discontinuous mode","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21410,"byte_end":21434,"line_start":502,"line_end":502,"column_start":1,"column_end":25}},{"value":"/ # Examples","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21435,"byte_end":21449,"line_start":503,"line_end":503,"column_start":1,"column_end":15}},{"value":"/ ## One-shot conversion","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21450,"byte_end":21476,"line_start":504,"line_end":504,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21477,"byte_end":21484,"line_start":505,"line_end":505,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::{","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21485,"byte_end":21509,"line_start":506,"line_end":506,"column_start":1,"column_end":25}},{"value":"/   gpio::gpioa,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21510,"byte_end":21528,"line_start":507,"line_end":507,"column_start":1,"column_end":19}},{"value":"/   adc::{","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21529,"byte_end":21541,"line_start":508,"line_end":508,"column_start":1,"column_end":13}},{"value":"/     Adc,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21542,"byte_end":21554,"line_start":509,"line_end":509,"column_start":1,"column_end":13}},{"value":"/     config::AdcConfig,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21555,"byte_end":21581,"line_start":510,"line_end":510,"column_start":1,"column_end":27}},{"value":"/     config::SampleTime,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21582,"byte_end":21609,"line_start":511,"line_end":511,"column_start":1,"column_end":28}},{"value":"/   },","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21610,"byte_end":21618,"line_start":512,"line_end":512,"column_start":1,"column_end":9}},{"value":"/ };","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21619,"byte_end":21625,"line_start":513,"line_end":513,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21626,"byte_end":21629,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ let mut adc = Adc::adc1(device.ADC1, true, AdcConfig::default());","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21630,"byte_end":21699,"line_start":515,"line_end":515,"column_start":1,"column_end":70}},{"value":"/ let pa3 = gpioa.pa3.into_analog();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21700,"byte_end":21738,"line_start":516,"line_end":516,"column_start":1,"column_end":39}},{"value":"/ let sample = adc.convert(&pa3, SampleTime::Cycles_480);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21739,"byte_end":21798,"line_start":517,"line_end":517,"column_start":1,"column_end":60}},{"value":"/ let millivolts = adc.sample_to_millivolts(sample);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21799,"byte_end":21853,"line_start":518,"line_end":518,"column_start":1,"column_end":55}},{"value":"/ info!(\"pa3: {}mV\", millivolts);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21854,"byte_end":21889,"line_start":519,"line_end":519,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21890,"byte_end":21897,"line_start":520,"line_end":520,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21898,"byte_end":21901,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ ## Sequence conversion","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21902,"byte_end":21928,"line_start":522,"line_end":522,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21929,"byte_end":21936,"line_start":523,"line_end":523,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::{","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21937,"byte_end":21961,"line_start":524,"line_end":524,"column_start":1,"column_end":25}},{"value":"/   gpio::gpioa,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21962,"byte_end":21980,"line_start":525,"line_end":525,"column_start":1,"column_end":19}},{"value":"/   adc::{","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21981,"byte_end":21993,"line_start":526,"line_end":526,"column_start":1,"column_end":13}},{"value":"/     Adc,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":21994,"byte_end":22006,"line_start":527,"line_end":527,"column_start":1,"column_end":13}},{"value":"/     config::AdcConfig,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22007,"byte_end":22033,"line_start":528,"line_end":528,"column_start":1,"column_end":27}},{"value":"/     config::SampleTime,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22034,"byte_end":22061,"line_start":529,"line_end":529,"column_start":1,"column_end":28}},{"value":"/     config::Sequence,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22062,"byte_end":22087,"line_start":530,"line_end":530,"column_start":1,"column_end":26}},{"value":"/     config::Eoc,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22088,"byte_end":22108,"line_start":531,"line_end":531,"column_start":1,"column_end":21}},{"value":"/     config::Scan,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22109,"byte_end":22130,"line_start":532,"line_end":532,"column_start":1,"column_end":22}},{"value":"/     config::Clock,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22131,"byte_end":22153,"line_start":533,"line_end":533,"column_start":1,"column_end":23}},{"value":"/   },","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22154,"byte_end":22162,"line_start":534,"line_end":534,"column_start":1,"column_end":9}},{"value":"/ };","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22163,"byte_end":22169,"line_start":535,"line_end":535,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22170,"byte_end":22173,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ let config = AdcConfig::default()","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22174,"byte_end":22211,"line_start":537,"line_end":537,"column_start":1,"column_end":38}},{"value":"/     //We'll either need DMA or an interrupt per conversion to convert","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22212,"byte_end":22285,"line_start":538,"line_end":538,"column_start":1,"column_end":74}},{"value":"/     //multiple values in a sequence","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22286,"byte_end":22325,"line_start":539,"line_end":539,"column_start":1,"column_end":40}},{"value":"/     .end_of_conversion_interrupt(Eoc::Conversion)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22326,"byte_end":22379,"line_start":540,"line_end":540,"column_start":1,"column_end":54}},{"value":"/     //Scan mode is also required to convert a sequence","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22380,"byte_end":22438,"line_start":541,"line_end":541,"column_start":1,"column_end":59}},{"value":"/     .scan(Scan::Enabled)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22439,"byte_end":22467,"line_start":542,"line_end":542,"column_start":1,"column_end":29}},{"value":"/     //And since we're looking for one interrupt per conversion the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22468,"byte_end":22538,"line_start":543,"line_end":543,"column_start":1,"column_end":71}},{"value":"/     //clock will need to be fairly slow to avoid overruns breaking","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22539,"byte_end":22609,"line_start":544,"line_end":544,"column_start":1,"column_end":71}},{"value":"/     //the sequence. If you are running in debug mode and logging in","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22610,"byte_end":22681,"line_start":545,"line_end":545,"column_start":1,"column_end":72}},{"value":"/     //the interrupt, good luck... try setting pclk2 really low.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22682,"byte_end":22749,"line_start":546,"line_end":546,"column_start":1,"column_end":68}},{"value":"/     //(Better yet use DMA)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22750,"byte_end":22780,"line_start":547,"line_end":547,"column_start":1,"column_end":31}},{"value":"/     .clock(Clock::Pclk2_div_8);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22781,"byte_end":22816,"line_start":548,"line_end":548,"column_start":1,"column_end":36}},{"value":"/ let mut adc = Adc::adc1(device.ADC1, true, config);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22817,"byte_end":22872,"line_start":549,"line_end":549,"column_start":1,"column_end":56}},{"value":"/ let pa0 = gpioa.pa0.into_analog();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22873,"byte_end":22911,"line_start":550,"line_end":550,"column_start":1,"column_end":39}},{"value":"/ let pa3 = gpioa.pa3.into_analog();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22912,"byte_end":22950,"line_start":551,"line_end":551,"column_start":1,"column_end":39}},{"value":"/ adc.configure_channel(&pa0, Sequence::One, SampleTime::Cycles_112);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":22951,"byte_end":23022,"line_start":552,"line_end":552,"column_start":1,"column_end":72}},{"value":"/ adc.configure_channel(&pa3, Sequence::Two, SampleTime::Cycles_480);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23023,"byte_end":23094,"line_start":553,"line_end":553,"column_start":1,"column_end":72}},{"value":"/ adc.configure_channel(&pa0, Sequence::Three, SampleTime::Cycles_112);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23095,"byte_end":23168,"line_start":554,"line_end":554,"column_start":1,"column_end":74}},{"value":"/ adc.start_conversion();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23169,"byte_end":23196,"line_start":555,"line_end":555,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23197,"byte_end":23204,"line_start":556,"line_end":556,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23205,"byte_end":23208,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ ## External trigger","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23209,"byte_end":23232,"line_start":558,"line_end":558,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23233,"byte_end":23236,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ A common mistake on STM forums is enabling continuous mode but that causes it to start","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23237,"byte_end":23327,"line_start":560,"line_end":560,"column_start":1,"column_end":91}},{"value":"/ capturing on the first trigger and capture as fast as possible forever, regardless of","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23328,"byte_end":23417,"line_start":561,"line_end":561,"column_start":1,"column_end":90}},{"value":"/ future triggers. Continuous mode is disabled by default but I thought it was worth","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23418,"byte_end":23504,"line_start":562,"line_end":562,"column_start":1,"column_end":87}},{"value":"/ highlighting.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23505,"byte_end":23522,"line_start":563,"line_end":563,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23523,"byte_end":23526,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ Getting the timer config right to make sure it's sending the event the ADC is listening","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23527,"byte_end":23618,"line_start":565,"line_end":565,"column_start":1,"column_end":92}},{"value":"/ to can be a bit of a pain but the key fields are highlighted below. Try hooking a timer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23619,"byte_end":23710,"line_start":566,"line_end":566,"column_start":1,"column_end":92}},{"value":"/ channel up to an external pin with an LED or oscilloscope attached to check it's really","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23711,"byte_end":23802,"line_start":567,"line_end":567,"column_start":1,"column_end":92}},{"value":"/ generating pulses if the ADC doesn't seem to be triggering.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23803,"byte_end":23866,"line_start":568,"line_end":568,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23867,"byte_end":23874,"line_start":569,"line_end":569,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::{","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23875,"byte_end":23899,"line_start":570,"line_end":570,"column_start":1,"column_end":25}},{"value":"/   gpio::gpioa,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23900,"byte_end":23918,"line_start":571,"line_end":571,"column_start":1,"column_end":19}},{"value":"/   adc::{","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23919,"byte_end":23931,"line_start":572,"line_end":572,"column_start":1,"column_end":13}},{"value":"/     Adc,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23932,"byte_end":23944,"line_start":573,"line_end":573,"column_start":1,"column_end":13}},{"value":"/     config::AdcConfig,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23945,"byte_end":23971,"line_start":574,"line_end":574,"column_start":1,"column_end":27}},{"value":"/     config::SampleTime,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":23972,"byte_end":23999,"line_start":575,"line_end":575,"column_start":1,"column_end":28}},{"value":"/     config::Sequence,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24000,"byte_end":24025,"line_start":576,"line_end":576,"column_start":1,"column_end":26}},{"value":"/     config::Eoc,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24026,"byte_end":24046,"line_start":577,"line_end":577,"column_start":1,"column_end":21}},{"value":"/     config::Scan,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24047,"byte_end":24068,"line_start":578,"line_end":578,"column_start":1,"column_end":22}},{"value":"/     config::Clock,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24069,"byte_end":24091,"line_start":579,"line_end":579,"column_start":1,"column_end":23}},{"value":"/   },","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24092,"byte_end":24100,"line_start":580,"line_end":580,"column_start":1,"column_end":9}},{"value":"/ };","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24101,"byte_end":24107,"line_start":581,"line_end":581,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24108,"byte_end":24111,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/  let config = AdcConfig::default()","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24112,"byte_end":24150,"line_start":583,"line_end":583,"column_start":1,"column_end":39}},{"value":"/      //Set the trigger you want","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24151,"byte_end":24186,"line_start":584,"line_end":584,"column_start":1,"column_end":36}},{"value":"/      .external_trigger(TriggerMode::RisingEdge, ExternalTrigger::Tim_1_cc_1);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24187,"byte_end":24268,"line_start":585,"line_end":585,"column_start":1,"column_end":82}},{"value":"/  let mut adc = Adc::adc1(device.ADC1, true, config);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24269,"byte_end":24325,"line_start":586,"line_end":586,"column_start":1,"column_end":57}},{"value":"/  let pa0 = gpioa.pa0.into_analog();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24326,"byte_end":24365,"line_start":587,"line_end":587,"column_start":1,"column_end":40}},{"value":"/  adc.configure_channel(&pa0, Sequence::One, SampleTime::Cycles_112);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24366,"byte_end":24438,"line_start":588,"line_end":588,"column_start":1,"column_end":73}},{"value":"/  //Make sure it's enabled but don't start the conversion","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24439,"byte_end":24499,"line_start":589,"line_end":589,"column_start":1,"column_end":61}},{"value":"/  adc.enable();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24500,"byte_end":24518,"line_start":590,"line_end":590,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24519,"byte_end":24522,"line_start":591,"line_end":591,"column_start":1,"column_end":4}},{"value":"/ //Configure the timer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24523,"byte_end":24548,"line_start":592,"line_end":592,"column_start":1,"column_end":26}},{"value":"/ let mut tim = Timer::tim1(device.TIM1, 1.hz(), clocks);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24549,"byte_end":24608,"line_start":593,"line_end":593,"column_start":1,"column_end":60}},{"value":"/ unsafe {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24609,"byte_end":24621,"line_start":594,"line_end":594,"column_start":1,"column_end":13}},{"value":"/     let tim = &(*TIM1::ptr());","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24622,"byte_end":24656,"line_start":595,"line_end":595,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24657,"byte_end":24660,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/     //Channel 1","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24661,"byte_end":24680,"line_start":597,"line_end":597,"column_start":1,"column_end":20}},{"value":"/     //Disable the channel before configuring it","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24681,"byte_end":24732,"line_start":598,"line_end":598,"column_start":1,"column_end":52}},{"value":"/     tim.ccer.modify(|_, w| w.cc1e().clear_bit());","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24733,"byte_end":24786,"line_start":599,"line_end":599,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24787,"byte_end":24790,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/     tim.ccmr1_output().modify(|_, w| w","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24791,"byte_end":24833,"line_start":601,"line_end":601,"column_start":1,"column_end":43}},{"value":"/       //Preload enable for channel","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24834,"byte_end":24872,"line_start":602,"line_end":602,"column_start":1,"column_end":39}},{"value":"/       .oc1pe().set_bit()","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24873,"byte_end":24901,"line_start":603,"line_end":603,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24902,"byte_end":24905,"line_start":604,"line_end":604,"column_start":1,"column_end":4}},{"value":"/       //Set mode for channel, the default mode is \"frozen\" which won't work","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24906,"byte_end":24985,"line_start":605,"line_end":605,"column_start":1,"column_end":80}},{"value":"/       .oc1m().pwm_mode1()","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":24986,"byte_end":25015,"line_start":606,"line_end":606,"column_start":1,"column_end":30}},{"value":"/     );","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25016,"byte_end":25026,"line_start":607,"line_end":607,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25027,"byte_end":25030,"line_start":608,"line_end":608,"column_start":1,"column_end":4}},{"value":"/     //Set the duty cycle, 0 won't work in pwm mode but might be ok in","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25031,"byte_end":25104,"line_start":609,"line_end":609,"column_start":1,"column_end":74}},{"value":"/     //toggle mode or match mode","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25105,"byte_end":25140,"line_start":610,"line_end":610,"column_start":1,"column_end":36}},{"value":"/     let max_duty = tim.arr.read().arr().bits() as u16;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25141,"byte_end":25199,"line_start":611,"line_end":611,"column_start":1,"column_end":59}},{"value":"/     tim.ccr1.modify(|_, w| w.ccr().bits(max_duty / 2));","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25200,"byte_end":25259,"line_start":612,"line_end":612,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25260,"byte_end":25263,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/     //Enable the channel","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25264,"byte_end":25292,"line_start":614,"line_end":614,"column_start":1,"column_end":29}},{"value":"/     tim.ccer.modify(|_, w| w.cc1e().set_bit());","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25293,"byte_end":25344,"line_start":615,"line_end":615,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25345,"byte_end":25348,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/     //Enable the TIM main Output","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25349,"byte_end":25385,"line_start":617,"line_end":617,"column_start":1,"column_end":37}},{"value":"/     tim.bdtr.modify(|_, w| w.moe().set_bit());","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25386,"byte_end":25436,"line_start":618,"line_end":618,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25437,"byte_end":25442,"line_start":619,"line_end":619,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25443,"byte_end":25450,"line_start":620,"line_end":620,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5035},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":48281,"byte_end":48285,"line_start":1101,"line_end":1101,"column_start":15,"column_end":19},"name":"adc1","qualname":"<Adc<pac::ADC1>>::adc1","value":"pub fn adc1(pac::ADC1, bool, config::AdcConfig) -> Adc<pac::ADC1>","parent":null,"children":[],"decl_id":null,"docs":" Enables the ADC clock, resets the peripheral (optionally), runs calibration and applies the supplied config\n # Arguments\n * `reset` - should a reset be performed. This is provided because on some devices multiple ADCs share the same common reset\n","sig":null,"attributes":[{"value":"/ Enables the ADC clock, resets the peripheral (optionally), runs calibration and applies the supplied config","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":29138,"byte_end":29249,"line_start":721,"line_end":721,"column_start":17,"column_end":128}},{"value":"/ # Arguments","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":29266,"byte_end":29281,"line_start":722,"line_end":722,"column_start":17,"column_end":32}},{"value":"/ * `reset` - should a reset be performed. This is provided because on some devices multiple ADCs share the same common reset","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":29298,"byte_end":29425,"line_start":723,"line_end":723,"column_start":17,"column_end":144}}]},{"kind":"Mod","id":{"krate":0,"index":101},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bb","qualname":"::bb","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112}],"decl_id":null,"docs":" Bit banding","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":3901,"byte_end":3936,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ Bit banding","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":65320,"byte_end":65335,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":65336,"byte_end":65339,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Support for the manipulation of peripheral registers through bit-banding.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":65340,"byte_end":65417,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ Not all peripherals are mapped to the bit-banding alias region, the peripheral bit-band region","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":65418,"byte_end":65516,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ is from `0x4000_0000` to `0x400F_FFFF`. Bit-banding allows the manipulation of individual bits","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":65517,"byte_end":65615,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ atomically.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":65616,"byte_end":65631,"line_start":6,"line_end":6,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66058,"byte_end":66063,"line_start":21,"line_end":21,"column_start":15,"column_end":20},"name":"clear","qualname":"::bb::clear","value":"pub unsafe fn clear<T>(*const T, u8)","parent":null,"children":[],"decl_id":null,"docs":" Clears the bit on the provided register without modifying other bits.","sig":null,"attributes":[{"value":"/ Clears the bit on the provided register without modifying other bits.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":65881,"byte_end":65954,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":65955,"byte_end":65958,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":65959,"byte_end":65971,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":65972,"byte_end":65975,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Some registers have reserved bits which should not be modified.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":65976,"byte_end":66043,"line_start":20,"line_end":20,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":110},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66309,"byte_end":66312,"line_start":30,"line_end":30,"column_start":15,"column_end":18},"name":"set","qualname":"::bb::set","value":"pub unsafe fn set<T>(*const T, u8)","parent":null,"children":[],"decl_id":null,"docs":" Sets the bit on the provided register without modifying other bits.","sig":null,"attributes":[{"value":"/ Sets the bit on the provided register without modifying other bits.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66134,"byte_end":66205,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66206,"byte_end":66209,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66210,"byte_end":66222,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66223,"byte_end":66226,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Some registers have reserved bits which should not be modified.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66227,"byte_end":66294,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66567,"byte_end":66572,"line_start":39,"line_end":39,"column_start":15,"column_end":20},"name":"write","qualname":"::bb::write","value":"pub unsafe fn write<T>(*const T, u8, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets or clears the bit on the provided register without modifying other bits.","sig":null,"attributes":[{"value":"/ Sets or clears the bit on the provided register without modifying other bits.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66382,"byte_end":66463,"line_start":34,"line_end":34,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66464,"byte_end":66467,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66468,"byte_end":66480,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66481,"byte_end":66484,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Some registers have reserved bits which should not be modified.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/bb.rs","byte_start":66485,"byte_end":66552,"line_start":38,"line_end":38,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":114},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crc32","qualname":"::crc32","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":137}],"decl_id":null,"docs":" CRC32 Calculation Unit","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4076,"byte_end":4111,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/ CRC32 Calculation Unit","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":66934,"byte_end":66960,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":66961,"byte_end":66964,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a hardware accelerated CRC32 calculation unit.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":66965,"byte_end":67023,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67024,"byte_end":67027,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ It is hardcoded to use the CRC-32 polynomial 0x04C1_1DB7.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67028,"byte_end":67089,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67090,"byte_end":67093,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It operates word-at-a-time, and takes 4 AHB/HCLK cycles per word","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67094,"byte_end":67162,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ to calculate. This operation stalls the AHB bus for that time.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67163,"byte_end":67229,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":135},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67407,"byte_end":67412,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Crc32","qualname":"::crc32::Crc32","value":"Crc32 {  }","parent":null,"children":[{"krate":0,"index":136}],"decl_id":null,"docs":" A handle to a HAL CRC32 peripheral\n","sig":null,"attributes":[{"value":"/ A handle to a HAL CRC32 peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67357,"byte_end":67395,"line_start":15,"line_end":15,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67501,"byte_end":67504,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<Crc32>::new","value":"pub fn new(CRC) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Crc32 HAL peripheral\n","sig":null,"attributes":[{"value":"/ Create a new Crc32 HAL peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67452,"byte_end":67489,"line_start":21,"line_end":21,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67975,"byte_end":67979,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"init","qualname":"<Crc32>::init","value":"pub fn init(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the internal CRC32 state to the default value (0xFFFF_FFFF)\n","sig":null,"attributes":[{"value":"/ Reset the internal CRC32 state to the default value (0xFFFF_FFFF)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67872,"byte_end":67941,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67946,"byte_end":67963,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68233,"byte_end":68239,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"update","qualname":"<Crc32>::update","value":"pub fn update(&mut Self, &[u32]) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Feed words into the CRC engine.","sig":null,"attributes":[{"value":"/ Feed words into the CRC engine.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68057,"byte_end":68092,"line_start":43,"line_end":43,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68097,"byte_end":68100,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The resulting calculated CRC (including this and prior data","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68105,"byte_end":68168,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/ since the last call to `init()` is returned.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68173,"byte_end":68221,"line_start":46,"line_end":46,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69523,"byte_end":69535,"line_start":80,"line_end":80,"column_start":12,"column_end":24},"name":"update_bytes","qualname":"<Crc32>::update_bytes","value":"pub fn update_bytes(&mut Self, &[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Feed bytes into the CRC engine.","sig":null,"attributes":[{"value":"/ Feed bytes into the CRC engine.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68503,"byte_end":68538,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68543,"byte_end":68546,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The resulting calculated CRC (including this and prior data","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68551,"byte_end":68614,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ since the last call to `init()` is returned.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68619,"byte_end":68667,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68672,"byte_end":68675,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ NOTE: Each four-byte chunk will be copied into a scratch buffer. This","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68680,"byte_end":68753,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ is done to ensure alignment of the data (the CRC engine only processes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68758,"byte_end":68832,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ full words at a time). If the number of bytes passed in are not a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68837,"byte_end":68906,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ multiple of four, the MOST significant bytes of the remaining word will","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68911,"byte_end":68986,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ be zeroes.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":68991,"byte_end":69005,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69010,"byte_end":69013,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This should be taken into consideration if attempting to feed bytes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69018,"byte_end":69089,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ across multiple parts (that spurious zeroes will be inserted)! To","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69094,"byte_end":69163,"line_start":68,"line_end":68,"column_start":5,"column_end":74}},{"value":"/ avoid this, only feed multiples of 4 bytes in before the \"final\"","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69168,"byte_end":69236,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ part of the message.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69241,"byte_end":69265,"line_start":70,"line_end":70,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69270,"byte_end":69273,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Example: Given the following 7 bytes:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69278,"byte_end":69319,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69324,"byte_end":69327,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ `[0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77]`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69332,"byte_end":69380,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69385,"byte_end":69388,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The following two words will be fed into the CRC engine:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69393,"byte_end":69453,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69458,"byte_end":69461,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ 1. `0x4433_2211`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69466,"byte_end":69486,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/ 2. `0x0077_6655`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":69491,"byte_end":69511,"line_start":79,"line_end":79,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":71335,"byte_end":71342,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"release","qualname":"<Crc32>::release","value":"pub fn release(Self) -> CRC","parent":null,"children":[],"decl_id":null,"docs":" Consume the HAL peripheral, returning the PAC peripheral\n","sig":null,"attributes":[{"value":"/ Consume the HAL peripheral, returning the PAC peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":71263,"byte_end":71323,"line_start":121,"line_end":121,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpio","qualname":"::gpio","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":922},{"krate":0,"index":1116},{"krate":0,"index":1119},{"krate":0,"index":5584},{"krate":0,"index":5586},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1129},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":5588},{"krate":0,"index":5601},{"krate":0,"index":5603},{"krate":0,"index":5604},{"krate":0,"index":5606},{"krate":0,"index":5607},{"krate":0,"index":5609},{"krate":0,"index":5611},{"krate":0,"index":5612},{"krate":0,"index":5619},{"krate":0,"index":5621},{"krate":0,"index":5622},{"krate":0,"index":5624},{"krate":0,"index":5625},{"krate":0,"index":5627},{"krate":0,"index":5629},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1170},{"krate":0,"index":1191},{"krate":0,"index":1196},{"krate":0,"index":1201},{"krate":0,"index":1206},{"krate":0,"index":1213},{"krate":0,"index":1219},{"krate":0,"index":1226},{"krate":0,"index":1236},{"krate":0,"index":1242},{"krate":0,"index":1248},{"krate":0,"index":1259},{"krate":0,"index":1270},{"krate":0,"index":1275},{"krate":0,"index":1281},{"krate":0,"index":5630},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5743},{"krate":0,"index":5746},{"krate":0,"index":5749},{"krate":0,"index":5752},{"krate":0,"index":5755},{"krate":0,"index":5758},{"krate":0,"index":5761},{"krate":0,"index":5764},{"krate":0,"index":5767},{"krate":0,"index":5770},{"krate":0,"index":5773},{"krate":0,"index":5776},{"krate":0,"index":5779},{"krate":0,"index":5782},{"krate":0,"index":5785},{"krate":0,"index":5788},{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":5901},{"krate":0,"index":5904},{"krate":0,"index":5907},{"krate":0,"index":5910},{"krate":0,"index":5913},{"krate":0,"index":5916},{"krate":0,"index":5919},{"krate":0,"index":5922},{"krate":0,"index":5925},{"krate":0,"index":5928},{"krate":0,"index":5931},{"krate":0,"index":5934},{"krate":0,"index":5937},{"krate":0,"index":5940},{"krate":0,"index":5943},{"krate":0,"index":5946},{"krate":0,"index":6055},{"krate":0,"index":6056},{"krate":0,"index":6059},{"krate":0,"index":6062},{"krate":0,"index":6065},{"krate":0,"index":6068},{"krate":0,"index":6071},{"krate":0,"index":6074},{"krate":0,"index":6077},{"krate":0,"index":6080},{"krate":0,"index":6083},{"krate":0,"index":6086},{"krate":0,"index":6089},{"krate":0,"index":6092},{"krate":0,"index":6095},{"krate":0,"index":6098},{"krate":0,"index":6101},{"krate":0,"index":6104},{"krate":0,"index":6213},{"krate":0,"index":6214},{"krate":0,"index":6217},{"krate":0,"index":6220},{"krate":0,"index":6223},{"krate":0,"index":6226},{"krate":0,"index":6229},{"krate":0,"index":6232},{"krate":0,"index":6235},{"krate":0,"index":6238},{"krate":0,"index":6241},{"krate":0,"index":6244},{"krate":0,"index":6247},{"krate":0,"index":6250},{"krate":0,"index":6253},{"krate":0,"index":6256},{"krate":0,"index":6259},{"krate":0,"index":6262},{"krate":0,"index":6371},{"krate":0,"index":6372},{"krate":0,"index":6375},{"krate":0,"index":6378},{"krate":0,"index":6381},{"krate":0,"index":6384},{"krate":0,"index":6387},{"krate":0,"index":6390},{"krate":0,"index":6393},{"krate":0,"index":6396},{"krate":0,"index":6399},{"krate":0,"index":6402},{"krate":0,"index":6405},{"krate":0,"index":6408},{"krate":0,"index":6411},{"krate":0,"index":6414},{"krate":0,"index":6417},{"krate":0,"index":6420},{"krate":0,"index":6529},{"krate":0,"index":6530},{"krate":0,"index":6533},{"krate":0,"index":6536},{"krate":0,"index":6539},{"krate":0,"index":6542},{"krate":0,"index":6545},{"krate":0,"index":6548},{"krate":0,"index":6551},{"krate":0,"index":6554},{"krate":0,"index":6557},{"krate":0,"index":6560},{"krate":0,"index":6563},{"krate":0,"index":6566},{"krate":0,"index":6569},{"krate":0,"index":6572},{"krate":0,"index":6575},{"krate":0,"index":1282},{"krate":0,"index":1285}],"decl_id":null,"docs":" General Purpose Input / Output","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4278,"byte_end":4313,"line_start":123,"line_end":123,"column_start":1,"column_end":36}},{"value":"/ General Purpose Input / Output","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":71618,"byte_end":71652,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":71653,"byte_end":71656,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The GPIO pins are organised into groups of 16 pins which can be accessed through the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":71657,"byte_end":71745,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/ `gpioa`, `gpiob`... modules. To get access to the pins, you first need to convert them into a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":71746,"byte_end":71843,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ HAL designed struct from the `pac` struct using the [split](trait.GpioExt.html#tymethod.split) function.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":71844,"byte_end":71952,"line_start":5,"line_end":5,"column_start":1,"column_end":109}},{"value":"/ ```rust","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":71953,"byte_end":71964,"line_start":6,"line_end":6,"column_start":1,"column_end":12}},{"value":"/ // Acquire the GPIOC peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":71965,"byte_end":72000,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/ // NOTE: `dp` is the device peripherals from the `PAC` crate","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72001,"byte_end":72065,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ let mut gpioa = dp.GPIOA.split();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72066,"byte_end":72103,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72104,"byte_end":72111,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72112,"byte_end":72115,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This gives you a struct containing all the pins `px0..px15`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72116,"byte_end":72180,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/ By default pins are in floating input mode. You can change their modes.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72181,"byte_end":72256,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ For example, to set `pa5` high, you would call","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72257,"byte_end":72307,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72308,"byte_end":72311,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72312,"byte_end":72323,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ let output = gpioa.pa5.into_push_pull_output();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72324,"byte_end":72375,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/ output.set_high();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72376,"byte_end":72398,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72399,"byte_end":72406,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72407,"byte_end":72410,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Modes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72411,"byte_end":72423,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72424,"byte_end":72427,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Each GPIO pin can be set to various modes:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72428,"byte_end":72474,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72475,"byte_end":72478,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - **Alternate**: Pin mode required when the pin is driven by other peripherals","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72479,"byte_end":72561,"line_start":25,"line_end":25,"column_start":1,"column_end":83}},{"value":"/ - **Analog**: Analog input to be used with ADC.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72562,"byte_end":72613,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/ - **Dynamic**: Pin mode is selected at runtime. See changing configurations for more details","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72614,"byte_end":72710,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ - Input","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72711,"byte_end":72722,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/     - **PullUp**: Input connected to high with a weak pull up resistor. Will be high when nothing","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72723,"byte_end":72824,"line_start":29,"line_end":29,"column_start":1,"column_end":102}},{"value":"/     is connected","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72825,"byte_end":72845,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/     - **PullDown**: Input connected to high with a weak pull up resistor. Will be low when nothing","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72846,"byte_end":72948,"line_start":31,"line_end":31,"column_start":1,"column_end":103}},{"value":"/     is connected","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72949,"byte_end":72969,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/     - **Floating**: Input not pulled to high or low. Will be undefined when nothing is connected","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":72970,"byte_end":73070,"line_start":33,"line_end":33,"column_start":1,"column_end":101}},{"value":"/ - Output","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73071,"byte_end":73083,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"/     - **PushPull**: Output which either drives the pin high or low","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73084,"byte_end":73154,"line_start":35,"line_end":35,"column_start":1,"column_end":71}},{"value":"/     - **OpenDrain**: Output which leaves the gate floating, or pulls it do ground in drain","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73155,"byte_end":73249,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"/     mode. Can be used as an input in the `open` configuration","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73250,"byte_end":73315,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73316,"byte_end":73319,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Changing modes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73320,"byte_end":73341,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/ The simplest way to change the pin mode is to use the `into_<mode>` functions. These return a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73342,"byte_end":73439,"line_start":40,"line_end":40,"column_start":1,"column_end":98}},{"value":"/ new struct with the correct mode that you can use the input or output functions on.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73440,"byte_end":73527,"line_start":41,"line_end":41,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73528,"byte_end":73531,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If you need a more temporary mode change, and can not use the `into_<mode>` functions for","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73532,"byte_end":73625,"line_start":43,"line_end":43,"column_start":1,"column_end":94}},{"value":"/ ownership reasons, you can use the closure based `with_<mode>` functions to temporarily change the pin type, do","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73626,"byte_end":73741,"line_start":44,"line_end":44,"column_start":1,"column_end":116}},{"value":"/ some output or input, and then have it change back once done.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73742,"byte_end":73807,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73808,"byte_end":73811,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ### Dynamic Mode Change","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73812,"byte_end":73839,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ The above mode change methods guarantee that you can only call input functions when the pin is","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73840,"byte_end":73938,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ in input mode, and output when in output modes, but can lead to some issues. Therefore, there","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":73939,"byte_end":74036,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/ is also a mode where the state is kept track of at runtime, allowing you to change the mode","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74037,"byte_end":74132,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ often, and without problems with ownership, or references, at the cost of some performance and","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74133,"byte_end":74231,"line_start":51,"line_end":51,"column_start":1,"column_end":99}},{"value":"/ the risk of runtime errors.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74232,"byte_end":74263,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74264,"byte_end":74267,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ To make a pin dynamic, use the `into_dynamic` function, and then use the `make_<mode>` functions to","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74268,"byte_end":74371,"line_start":54,"line_end":54,"column_start":1,"column_end":104}},{"value":"/ change the mode","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74372,"byte_end":74391,"line_start":55,"line_end":55,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97006,"byte_end":97011,"line_start":4,"line_end":4,"column_start":12,"column_end":17},"name":"Const","qualname":"::gpio::alt::Const","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":205},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97037,"byte_end":97049,"line_start":6,"line_end":6,"column_start":11,"column_end":23},"name":"SetAlternate","qualname":"::gpio::alt::SetAlternate","value":"SetAlternate<Otype, const A: u8>","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97079,"byte_end":97091,"line_start":7,"line_end":7,"column_start":8,"column_end":20},"name":"set_alt_mode","qualname":"::gpio::alt::SetAlternate::set_alt_mode","value":"pub fn set_alt_mode(&mut Self)","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97111,"byte_end":97123,"line_start":8,"line_end":8,"column_start":8,"column_end":20},"name":"restore_mode","qualname":"::gpio::alt::SetAlternate::restore_mode","value":"pub fn restore_mode(&mut Self)","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":242},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":98304,"byte_end":98308,"line_start":57,"line_end":57,"column_start":11,"column_end":15},"name":"PinA","qualname":"::gpio::alt::PinA","value":"PinA<PIN, PER>","parent":null,"children":[{"krate":0,"index":245}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":245},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":98330,"byte_end":98331,"line_start":58,"line_end":58,"column_start":10,"column_end":11},"name":"A","qualname":"::gpio::alt::PinA::A","value":"type A;","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":123365,"byte_end":123379,"line_start":367,"line_end":367,"column_start":12,"column_end":26},"name":"into_alternate","qualname":"<Pin<MODE, P, N>>::into_alternate","value":"pub fn into_alternate<const A: u8>(Self) -> Pin<Alternate<PushPull, >, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate alternate mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate alternate mode","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":123305,"byte_end":123353,"line_start":366,"line_end":366,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":123611,"byte_end":123636,"line_start":374,"line_end":374,"column_start":12,"column_end":37},"name":"into_alternate_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_open_drain","value":"pub fn into_alternate_open_drain<const A: u8>(Self)\n-> Pin<Alternate<OpenDrain, >, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in alternate open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in alternate open drain mode","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":123507,"byte_end":123569,"line_start":372,"line_end":372,"column_start":5,"column_end":67}},{"value":"allow(path_statements)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":123574,"byte_end":123599,"line_start":373,"line_end":373,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":123828,"byte_end":123847,"line_start":379,"line_end":379,"column_start":12,"column_end":31},"name":"into_floating_input","qualname":"<Pin<MODE, P, N>>::into_floating_input","value":"pub fn into_floating_input(Self) -> Pin<Input<Floating>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as a floating input pin\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as a floating input pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":123759,"byte_end":123816,"line_start":378,"line_end":378,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":124032,"byte_end":124052,"line_start":385,"line_end":385,"column_start":12,"column_end":32},"name":"into_pull_down_input","qualname":"<Pin<MODE, P, N>>::into_pull_down_input","value":"pub fn into_pull_down_input(Self) -> Pin<Input<PullDown>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as a pulled down input pin\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as a pulled down input pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":123960,"byte_end":124020,"line_start":384,"line_end":384,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":124235,"byte_end":124253,"line_start":391,"line_end":391,"column_start":12,"column_end":30},"name":"into_pull_up_input","qualname":"<Pin<MODE, P, N>>::into_pull_up_input","value":"pub fn into_pull_up_input(Self) -> Pin<Input<PullUp>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as a pulled up input pin\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as a pulled up input pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":124165,"byte_end":124223,"line_start":390,"line_end":390,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":124470,"byte_end":124492,"line_start":398,"line_end":398,"column_start":12,"column_end":34},"name":"into_open_drain_output","qualname":"<Pin<MODE, P, N>>::into_open_drain_output","value":"pub fn into_open_drain_output(Self) -> Pin<Output<OpenDrain>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as an open drain output pin\n Initial state will be low.\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as an open drain output pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":124362,"byte_end":124423,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/ Initial state will be low.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":124428,"byte_end":124458,"line_start":397,"line_end":397,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":124766,"byte_end":124797,"line_start":405,"line_end":405,"column_start":12,"column_end":43},"name":"into_open_drain_output_in_state","qualname":"<Pin<MODE, P, N>>::into_open_drain_output_in_state","value":"pub fn into_open_drain_output_in_state(Self, PinState)\n-> Pin<Output<OpenDrain>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as an open-drain output pin.\n `initial_state` specifies whether the pin should be initially high or low.\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as an open-drain output pin.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":124609,"byte_end":124671,"line_start":403,"line_end":403,"column_start":5,"column_end":67}},{"value":"/ `initial_state` specifies whether the pin should be initially high or low.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":124676,"byte_end":124754,"line_start":404,"line_end":404,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125109,"byte_end":125130,"line_start":416,"line_end":416,"column_start":12,"column_end":33},"name":"into_push_pull_output","qualname":"<Pin<MODE, P, N>>::into_push_pull_output","value":"pub fn into_push_pull_output(Self) -> Pin<Output<PushPull>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as an push pull output pin\n Initial state will be low.\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as an push pull output pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125002,"byte_end":125062,"line_start":414,"line_end":414,"column_start":5,"column_end":65}},{"value":"/ Initial state will be low.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125067,"byte_end":125097,"line_start":415,"line_end":415,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125426,"byte_end":125456,"line_start":424,"line_end":424,"column_start":12,"column_end":42},"name":"into_push_pull_output_in_state","qualname":"<Pin<MODE, P, N>>::into_push_pull_output_in_state","value":"pub fn into_push_pull_output_in_state(Self, PinState)\n-> Pin<Output<PushPull>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as an push-pull output pin.\n `initial_state` specifies whether the pin should be initially high or low.\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as an push-pull output pin.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125270,"byte_end":125331,"line_start":422,"line_end":422,"column_start":5,"column_end":66}},{"value":"/ `initial_state` specifies whether the pin should be initially high or low.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125336,"byte_end":125414,"line_start":423,"line_end":423,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125727,"byte_end":125738,"line_start":434,"line_end":434,"column_start":12,"column_end":23},"name":"into_analog","qualname":"<Pin<MODE, P, N>>::into_analog","value":"pub fn into_analog(Self) -> Pin<Analog, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as an analog input pin\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as an analog input pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125659,"byte_end":125715,"line_start":433,"line_end":433,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125994,"byte_end":126006,"line_start":442,"line_end":442,"column_start":12,"column_end":24},"name":"into_dynamic","qualname":"<Pin<MODE, P, N>>::into_dynamic","value":"pub fn into_dynamic(Self) -> DynamicPin<, >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin as a pin that can change between input\n and output without changing the type. It starts out\n as a floating input\n","sig":null,"attributes":[{"value":"/ Configures the pin as a pin that can change between input","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125833,"byte_end":125894,"line_start":439,"line_end":439,"column_start":5,"column_end":66}},{"value":"/ and output without changing the type. It starts out","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125899,"byte_end":125954,"line_start":440,"line_end":440,"column_start":5,"column_end":60}},{"value":"/ as a floating input","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":125959,"byte_end":125982,"line_start":441,"line_end":441,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":127628,"byte_end":127647,"line_start":496,"line_end":496,"column_start":12,"column_end":31},"name":"with_floating_input","qualname":"<Pin<MODE, P, N>>::with_floating_input","value":"pub fn with_floating_input<R,\n                           impl FnOnce(&mut Pin<Input<Floating>, P, N>) -> R: FnOnce(&mut Pin<Input<Floating>,\n                                                                                              ,\n                                                                                              >)\n                           ->\n                           R>(&mut Self,\n                              impl FnOnce(&mut Pin<Input<Floating>, P, N>) -> R)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as a floating input.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as a floating input.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":127432,"byte_end":127488,"line_start":492,"line_end":492,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":127493,"byte_end":127496,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":127501,"byte_end":127575,"line_start":494,"line_end":494,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":127580,"byte_end":127616,"line_start":495,"line_end":495,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":127982,"byte_end":128002,"line_start":507,"line_end":507,"column_start":12,"column_end":32},"name":"with_pull_down_input","qualname":"<Pin<MODE, P, N>>::with_pull_down_input","value":"pub fn with_pull_down_input<R,\n                            impl FnOnce(&mut Pin<Input<PullDown>, P, N>) -> R: FnOnce(&mut Pin<Input<PullDown>,\n                                                                                               ,\n                                                                                               >)\n                            ->\n                            R>(&mut Self,\n                               impl FnOnce(&mut Pin<Input<PullDown>, P, N>) -> R)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as a pulled-down input.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as a pulled-down input.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":127783,"byte_end":127842,"line_start":503,"line_end":503,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":127847,"byte_end":127850,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":127855,"byte_end":127929,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":127934,"byte_end":127970,"line_start":506,"line_end":506,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128335,"byte_end":128353,"line_start":518,"line_end":518,"column_start":12,"column_end":30},"name":"with_pull_up_input","qualname":"<Pin<MODE, P, N>>::with_pull_up_input","value":"pub fn with_pull_up_input<R,\n                          impl FnOnce(&mut Pin<Input<PullUp>, P, N>) -> R: FnOnce(&mut Pin<Input<PullUp>,\n                                                                                           ,\n                                                                                           >)\n                          ->\n                          R>(&mut Self,\n                             impl FnOnce(&mut Pin<Input<PullUp>, P, N>) -> R)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as a pulled-up input.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as a pulled-up input.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128138,"byte_end":128195,"line_start":514,"line_end":514,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128200,"byte_end":128203,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128208,"byte_end":128282,"line_start":516,"line_end":516,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128287,"byte_end":128323,"line_start":517,"line_end":517,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128680,"byte_end":128691,"line_start":529,"line_end":529,"column_start":12,"column_end":23},"name":"with_analog","qualname":"<Pin<MODE, P, N>>::with_analog","value":"pub fn with_analog<R,\n                   impl FnOnce(&mut Pin<Analog, P, N>) -> R: FnOnce(&mut Pin<Analog,\n                                                                             ,\n                                                                             >)\n                   -> R>(&mut Self, impl FnOnce(&mut Pin<Analog, P, N>) -> R)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as an analog pin.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as an analog pin.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128487,"byte_end":128540,"line_start":525,"line_end":525,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128545,"byte_end":128548,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128553,"byte_end":128627,"line_start":527,"line_end":527,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128632,"byte_end":128668,"line_start":528,"line_end":528,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129128,"byte_end":129150,"line_start":539,"line_end":539,"column_start":12,"column_end":34},"name":"with_open_drain_output","qualname":"<Pin<MODE, P, N>>::with_open_drain_output","value":"pub fn with_open_drain_output<R,\n                              impl FnOnce(&mut Pin<Output<OpenDrain>, P, N>) -> R: FnOnce(&mut Pin<Output<OpenDrain>,\n                                                                                                   ,\n                                                                                                   >)\n                              ->\n                              R>(&mut Self,\n                                 impl FnOnce(&mut Pin<Output<OpenDrain>, P, N>) -> R)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as an open drain output.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as an open drain output.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128795,"byte_end":128855,"line_start":533,"line_end":533,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128860,"byte_end":128863,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128868,"byte_end":128942,"line_start":535,"line_end":535,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128947,"byte_end":128983,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/ The value of the pin after conversion is undefined. If you","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":128988,"byte_end":129050,"line_start":537,"line_end":537,"column_start":5,"column_end":67}},{"value":"/ want to control it, use `with_open_drain_output_in_state`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129055,"byte_end":129116,"line_start":538,"line_end":538,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129651,"byte_end":129682,"line_start":553,"line_end":553,"column_start":12,"column_end":43},"name":"with_open_drain_output_in_state","qualname":"<Pin<MODE, P, N>>::with_open_drain_output_in_state","value":"pub fn with_open_drain_output_in_state<R,\n                                       impl FnOnce(&mut Pin<Output<OpenDrain>, P, N>) -> R: FnOnce(&mut Pin<Output<OpenDrain>,\n                                                                                                            ,\n                                                                                                            >)\n                                       ->\n                                       R>(&mut Self, PinState,\n                                          impl FnOnce(&mut Pin<Output<OpenDrain>, P, N>) -> R)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as an open drain output .","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as an open drain output .","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129288,"byte_end":129349,"line_start":546,"line_end":546,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129354,"byte_end":129357,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129362,"byte_end":129436,"line_start":548,"line_end":548,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129441,"byte_end":129477,"line_start":549,"line_end":549,"column_start":5,"column_end":41}},{"value":"/ Note that the new state is set slightly before conversion","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129482,"byte_end":129543,"line_start":550,"line_end":550,"column_start":5,"column_end":66}},{"value":"/ happens. This can cause a short output glitch if switching","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129548,"byte_end":129610,"line_start":551,"line_end":551,"column_start":5,"column_end":67}},{"value":"/ between output modes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129615,"byte_end":129639,"line_start":552,"line_end":552,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130207,"byte_end":130228,"line_start":568,"line_end":568,"column_start":12,"column_end":33},"name":"with_push_pull_output","qualname":"<Pin<MODE, P, N>>::with_push_pull_output","value":"pub fn with_push_pull_output<R,\n                             impl FnOnce(&mut Pin<Output<PushPull>, P, N>) -> R: FnOnce(&mut Pin<Output<PushPull>,\n                                                                                                 ,\n                                                                                                 >)\n                             ->\n                             R>(&mut Self,\n                                impl FnOnce(&mut Pin<Output<PushPull>, P, N>) -> R)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as a push-pull output.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as a push-pull output.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129877,"byte_end":129935,"line_start":562,"line_end":562,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129940,"byte_end":129943,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":129948,"byte_end":130022,"line_start":564,"line_end":564,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130027,"byte_end":130063,"line_start":565,"line_end":565,"column_start":5,"column_end":41}},{"value":"/ The value of the pin after conversion is undefined. If you","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130068,"byte_end":130130,"line_start":566,"line_end":566,"column_start":5,"column_end":67}},{"value":"/ want to control it, use `with_push_pull_output_in_state`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130135,"byte_end":130195,"line_start":567,"line_end":567,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130725,"byte_end":130755,"line_start":582,"line_end":582,"column_start":12,"column_end":42},"name":"with_push_pull_output_in_state","qualname":"<Pin<MODE, P, N>>::with_push_pull_output_in_state","value":"pub fn with_push_pull_output_in_state<R,\n                                      impl FnOnce(&mut Pin<Output<PushPull>, P, N>) -> R: FnOnce(&mut Pin<Output<PushPull>,\n                                                                                                          ,\n                                                                                                          >)\n                                      ->\n                                      R>(&mut Self, PinState,\n                                         impl FnOnce(&mut Pin<Output<PushPull>, P, N>) -> R)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as a push-pull output.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as a push-pull output.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130365,"byte_end":130423,"line_start":575,"line_end":575,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130428,"byte_end":130431,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130436,"byte_end":130510,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130515,"byte_end":130551,"line_start":578,"line_end":578,"column_start":5,"column_end":41}},{"value":"/ Note that the new state is set slightly before conversion","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130556,"byte_end":130617,"line_start":579,"line_end":579,"column_start":5,"column_end":66}},{"value":"/ happens. This can cause a short output glitch if switching","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130622,"byte_end":130684,"line_start":580,"line_end":580,"column_start":5,"column_end":67}},{"value":"/ between output modes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":130689,"byte_end":130713,"line_start":581,"line_end":581,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":537},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131319,"byte_end":131326,"line_start":605,"line_end":605,"column_start":11,"column_end":18},"name":"PinMode","qualname":"::gpio::convert::PinMode","value":"PinMode: crate::Sealed","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540}],"decl_id":null,"docs":" Marker trait for valid pin modes (type state).","sig":null,"attributes":[{"value":"/ Marker trait for valid pin modes (type state).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131206,"byte_end":131256,"line_start":602,"line_end":602,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131257,"byte_end":131260,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ It can not be implemented by outside types.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131261,"byte_end":131308,"line_start":604,"line_end":604,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":538},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131487,"byte_end":131492,"line_start":610,"line_end":610,"column_start":11,"column_end":16},"name":"PUPDR","qualname":"::gpio::convert::PinMode::PUPDR","value":"u32","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":539},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131528,"byte_end":131533,"line_start":612,"line_end":612,"column_start":11,"column_end":16},"name":"MODER","qualname":"::gpio::convert::PinMode::MODER","value":"u32","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":540},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131569,"byte_end":131575,"line_start":614,"line_end":614,"column_start":11,"column_end":17},"name":"OTYPER","qualname":"::gpio::convert::PinMode::OTYPER","value":"Option<u32>","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":572},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":132522,"byte_end":132527,"line_start":3,"line_end":3,"column_start":10,"column_end":15},"name":"PEPin","qualname":"::gpio::partially_erased::PEPin","value":"PartiallyErasedPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":575},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":132759,"byte_end":132777,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"PartiallyErasedPin","qualname":"::gpio::partially_erased::PartiallyErasedPin","value":"PartiallyErasedPin {  }","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"decl_id":null,"docs":" Partially erased pin","sig":null,"attributes":[{"value":"/ Partially erased pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":132581,"byte_end":132605,"line_start":5,"line_end":5,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":132606,"byte_end":132609,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ - `MODE` is one of the pin modes (see [Modes](crate::gpio#modes) section).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":132610,"byte_end":132688,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ - `P` is port name: `A` for GPIOA, `B` for GPIOB, etc.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":132689,"byte_end":132747,"line_start":8,"line_end":8,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":133986,"byte_end":133994,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"set_high","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::set_high","value":"pub fn set_high(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":133957,"byte_end":133974,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":134184,"byte_end":134191,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"set_low","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::set_low","value":"pub fn set_low(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":134155,"byte_end":134172,"line_start":67,"line_end":67,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":134442,"byte_end":134451,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"get_state","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::get_state","value":"pub fn get_state(&Self) -> PinState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":134413,"byte_end":134430,"line_start":77,"line_end":77,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":134624,"byte_end":134633,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"set_state","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::set_state","value":"pub fn set_state(&mut Self, PinState)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":134595,"byte_end":134612,"line_start":86,"line_end":86,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":134828,"byte_end":134839,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"is_set_high","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::is_set_high","value":"pub fn is_set_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":134799,"byte_end":134816,"line_start":94,"line_end":94,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":134924,"byte_end":134934,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"is_set_low","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::is_set_low","value":"pub fn is_set_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":134895,"byte_end":134912,"line_start":99,"line_end":99,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135127,"byte_end":135133,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::toggle","value":"pub fn toggle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135098,"byte_end":135115,"line_start":105,"line_end":105,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135365,"byte_end":135372,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"is_high","qualname":"<PartiallyErasedPin<Output<OpenDrain>, P>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135336,"byte_end":135353,"line_start":116,"line_end":116,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135453,"byte_end":135459,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"is_low","qualname":"<PartiallyErasedPin<Output<OpenDrain>, P>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135424,"byte_end":135441,"line_start":121,"line_end":121,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135717,"byte_end":135724,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"is_high","qualname":"<PartiallyErasedPin<Input<MODE>, P>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135688,"byte_end":135705,"line_start":129,"line_end":129,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135805,"byte_end":135811,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"is_low","qualname":"<PartiallyErasedPin<Input<MODE>, P>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135776,"byte_end":135793,"line_start":134,"line_end":134,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":624},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":135997,"byte_end":136001,"line_start":3,"line_end":3,"column_start":10,"column_end":14},"name":"EPin","qualname":"::gpio::erased::EPin","value":"ErasedPin<MODE>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":626},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":136141,"byte_end":136150,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"ErasedPin","qualname":"::gpio::erased::ErasedPin","value":"ErasedPin {  }","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"decl_id":null,"docs":" Fully erased pin","sig":null,"attributes":[{"value":"/ Fully erased pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":136028,"byte_end":136048,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":136049,"byte_end":136052,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `MODE` is one of the pin modes (see [Modes](crate::gpio#modes) section).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":136053,"byte_end":136129,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":138214,"byte_end":138222,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"set_high","qualname":"<ErasedPin<Output<MODE>>>::set_high","value":"pub fn set_high(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":138185,"byte_end":138202,"line_start":81,"line_end":81,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":138413,"byte_end":138420,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"set_low","qualname":"<ErasedPin<Output<MODE>>>::set_low","value":"pub fn set_low(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":138384,"byte_end":138401,"line_start":87,"line_end":87,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":138672,"byte_end":138681,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"get_state","qualname":"<ErasedPin<Output<MODE>>>::get_state","value":"pub fn get_state(&Self) -> PinState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":138643,"byte_end":138660,"line_start":97,"line_end":97,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":138854,"byte_end":138863,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"set_state","qualname":"<ErasedPin<Output<MODE>>>::set_state","value":"pub fn set_state(&mut Self, PinState)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":138825,"byte_end":138842,"line_start":106,"line_end":106,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139058,"byte_end":139069,"line_start":115,"line_end":115,"column_start":12,"column_end":23},"name":"is_set_high","qualname":"<ErasedPin<Output<MODE>>>::is_set_high","value":"pub fn is_set_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139029,"byte_end":139046,"line_start":114,"line_end":114,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139154,"byte_end":139164,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"is_set_low","qualname":"<ErasedPin<Output<MODE>>>::is_set_low","value":"pub fn is_set_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139125,"byte_end":139142,"line_start":119,"line_end":119,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139289,"byte_end":139295,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"toggle","qualname":"<ErasedPin<Output<MODE>>>::toggle","value":"pub fn toggle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139260,"byte_end":139277,"line_start":124,"line_end":124,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139500,"byte_end":139507,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"is_high","qualname":"<ErasedPin<Output<OpenDrain>>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139471,"byte_end":139488,"line_start":135,"line_end":135,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139588,"byte_end":139594,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"is_low","qualname":"<ErasedPin<Output<OpenDrain>>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139559,"byte_end":139576,"line_start":140,"line_end":140,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139757,"byte_end":139764,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"is_high","qualname":"<ErasedPin<Input<MODE>>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139728,"byte_end":139745,"line_start":147,"line_end":147,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139845,"byte_end":139851,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"is_low","qualname":"<ErasedPin<Input<MODE>>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139816,"byte_end":139833,"line_start":152,"line_end":152,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140108,"byte_end":140118,"line_start":7,"line_end":7,"column_start":12,"column_end":22},"name":"DynamicPin","qualname":"::gpio::dynamic::DynamicPin","value":"DynamicPin {  }","parent":null,"children":[{"krate":0,"index":673}],"decl_id":null,"docs":" Pin type with dynamic mode","sig":null,"attributes":[{"value":"/ Pin type with dynamic mode","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":139960,"byte_end":139990,"line_start":3,"line_end":3,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":139991,"byte_end":139994,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - `P` is port name: `A` for GPIOA, `B` for GPIOB, etc.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":139995,"byte_end":140053,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/ - `N` is pin number: from `0` to `15`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140054,"byte_end":140096,"line_start":6,"line_end":6,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":675},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140280,"byte_end":140293,"line_start":14,"line_end":14,"column_start":5,"column_end":18},"name":"InputFloating","qualname":"::gpio::dynamic::Dynamic::InputFloating","value":"Dynamic::InputFloating","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":677},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140299,"byte_end":140310,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"InputPullUp","qualname":"::gpio::dynamic::Dynamic::InputPullUp","value":"Dynamic::InputPullUp","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":679},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140316,"byte_end":140329,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"InputPullDown","qualname":"::gpio::dynamic::Dynamic::InputPullDown","value":"Dynamic::InputPullDown","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":681},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140335,"byte_end":140349,"line_start":17,"line_end":17,"column_start":5,"column_end":19},"name":"OutputPushPull","qualname":"::gpio::dynamic::Dynamic::OutputPushPull","value":"Dynamic::OutputPushPull","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":683},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140355,"byte_end":140370,"line_start":18,"line_end":18,"column_start":5,"column_end":20},"name":"OutputOpenDrain","qualname":"::gpio::dynamic::Dynamic::OutputOpenDrain","value":"Dynamic::OutputOpenDrain","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":674},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140266,"byte_end":140273,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"Dynamic","qualname":"::gpio::dynamic::Dynamic","value":"pub enum Dynamic {\n    InputFloating,\n    InputPullUp,\n    InputPullDown,\n    OutputPushPull,\n    OutputOpenDrain,\n}","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683}],"decl_id":null,"docs":" Tracks the current pin state for dynamic pins\n","sig":null,"attributes":[{"value":"/ Tracks the current pin state for dynamic pins","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140207,"byte_end":140256,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5577},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140431,"byte_end":140444,"line_start":23,"line_end":23,"column_start":5,"column_end":18},"name":"IncorrectMode","qualname":"::gpio::dynamic::PinModeError::IncorrectMode","value":"PinModeError::IncorrectMode","parent":{"krate":0,"index":5576},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5576},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140412,"byte_end":140424,"line_start":22,"line_end":22,"column_start":10,"column_end":22},"name":"PinModeError","qualname":"::gpio::dynamic::PinModeError","value":"pub enum PinModeError { IncorrectMode, }","parent":null,"children":[{"krate":0,"index":5577}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140475,"byte_end":140483,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"is_input","qualname":"<Dynamic>::is_input","value":"pub fn is_input(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140693,"byte_end":140702,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"is_output","qualname":"<Dynamic>::is_output","value":"pub fn is_output(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":141017,"byte_end":141020,"line_start":47,"line_end":47,"column_start":18,"column_end":21},"name":"new","qualname":"<DynamicPin<P, N>>::new","value":"pub const fn new(Dynamic) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":141100,"byte_end":141118,"line_start":52,"line_end":52,"column_start":12,"column_end":30},"name":"make_pull_up_input","qualname":"<DynamicPin<P, N>>::make_pull_up_input","value":"pub fn make_pull_up_input(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":141079,"byte_end":141088,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":141335,"byte_end":141355,"line_start":58,"line_end":58,"column_start":12,"column_end":32},"name":"make_pull_down_input","qualname":"<DynamicPin<P, N>>::make_pull_down_input","value":"pub fn make_pull_down_input(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":141314,"byte_end":141323,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":141576,"byte_end":141595,"line_start":64,"line_end":64,"column_start":12,"column_end":31},"name":"make_floating_input","qualname":"<DynamicPin<P, N>>::make_floating_input","value":"pub fn make_floating_input(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":141555,"byte_end":141564,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":141815,"byte_end":141836,"line_start":70,"line_end":70,"column_start":12,"column_end":33},"name":"make_push_pull_output","qualname":"<DynamicPin<P, N>>::make_push_pull_output","value":"pub fn make_push_pull_output(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":141794,"byte_end":141803,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":142059,"byte_end":142089,"line_start":76,"line_end":76,"column_start":12,"column_end":42},"name":"make_push_pull_output_in_state","qualname":"<DynamicPin<P, N>>::make_push_pull_output_in_state","value":"pub fn make_push_pull_output_in_state(&mut Self, PinState)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":142038,"byte_end":142047,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":142343,"byte_end":142365,"line_start":82,"line_end":82,"column_start":12,"column_end":34},"name":"make_open_drain_output","qualname":"<DynamicPin<P, N>>::make_open_drain_output","value":"pub fn make_open_drain_output(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":142322,"byte_end":142331,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":142590,"byte_end":142621,"line_start":88,"line_end":88,"column_start":12,"column_end":43},"name":"make_open_drain_output_in_state","qualname":"<DynamicPin<P, N>>::make_open_drain_output_in_state","value":"pub fn make_open_drain_output_in_state(&mut Self, PinState)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":142569,"byte_end":142578,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":142864,"byte_end":142872,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"set_high","qualname":"<DynamicPin<P, N>>::set_high","value":"pub fn set_high(&mut Self) -> Result<(), PinModeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":143125,"byte_end":143132,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"set_low","qualname":"<DynamicPin<P, N>>::set_low","value":"pub fn set_low(&mut Self) -> Result<(), PinModeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":143385,"byte_end":143392,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"is_high","qualname":"<DynamicPin<P, N>>::is_high","value":"pub fn is_high(&Self) -> Result<bool, PinModeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":143483,"byte_end":143489,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"is_low","qualname":"<DynamicPin<P, N>>::is_low","value":"pub fn is_low(&Self) -> Result<bool, PinModeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5584},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74935,"byte_end":74940,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"NoPin","qualname":"::gpio::NoPin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filler pin type\n","sig":null,"attributes":[{"value":"/ A filler pin type","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74831,"byte_end":74852,"line_start":79,"line_end":79,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":1122},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75034,"byte_end":75041,"line_start":85,"line_end":85,"column_start":11,"column_end":18},"name":"GpioExt","qualname":"::gpio::GpioExt","value":"GpioExt","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124}],"decl_id":null,"docs":" Extension trait to split a GPIO peripheral in independent pins and registers\n","sig":null,"attributes":[{"value":"/ Extension trait to split a GPIO peripheral in independent pins and registers","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":74943,"byte_end":75023,"line_start":84,"line_end":84,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1123},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75094,"byte_end":75099,"line_start":87,"line_end":87,"column_start":10,"column_end":15},"name":"Parts","qualname":"::gpio::GpioExt::Parts","value":"type Parts;","parent":{"krate":0,"index":1122},"children":[],"decl_id":null,"docs":" The parts to split the GPIO into\n","sig":null,"attributes":[{"value":"/ The parts to split the GPIO into","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75048,"byte_end":75084,"line_start":86,"line_end":86,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75175,"byte_end":75180,"line_start":90,"line_end":90,"column_start":8,"column_end":13},"name":"split","qualname":"::gpio::GpioExt::split","value":"pub fn split(Self) -> Self::Parts","parent":{"krate":0,"index":1122},"children":[],"decl_id":null,"docs":" Splits the GPIO block into independent pins and registers\n","sig":null,"attributes":[{"value":"/ Splits the GPIO block into independent pins and registers","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75106,"byte_end":75167,"line_start":89,"line_end":89,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1125},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75216,"byte_end":75222,"line_start":93,"line_end":93,"column_start":11,"column_end":17},"name":"PinExt","qualname":"::gpio::PinExt","value":"PinExt","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1126},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75234,"byte_end":75238,"line_start":94,"line_end":94,"column_start":10,"column_end":14},"name":"Mode","qualname":"::gpio::PinExt::Mode","value":"type Mode;","parent":{"krate":0,"index":1125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75273,"byte_end":75279,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"pin_id","qualname":"::gpio::PinExt::pin_id","value":"pub fn pin_id(&Self) -> u8","parent":{"krate":0,"index":1125},"children":[],"decl_id":null,"docs":" Return pin number\n","sig":null,"attributes":[{"value":"/ Return pin number","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75244,"byte_end":75265,"line_start":95,"line_end":95,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75328,"byte_end":75335,"line_start":98,"line_end":98,"column_start":8,"column_end":15},"name":"port_id","qualname":"::gpio::PinExt::port_id","value":"pub fn port_id(&Self) -> u8","parent":{"krate":0,"index":1125},"children":[],"decl_id":null,"docs":" Return port number\n","sig":null,"attributes":[{"value":"/ Return port number","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75298,"byte_end":75320,"line_start":97,"line_end":97,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1129},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75401,"byte_end":75410,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"name":"Alternate","qualname":"::gpio::Alternate","value":"","parent":null,"children":[],"decl_id":null,"docs":" Some alternate mode (type state)\n","sig":null,"attributes":[{"value":"/ Some alternate mode (type state)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75353,"byte_end":75389,"line_start":101,"line_end":101,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1134},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75492,"byte_end":75497,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"Input","qualname":"::gpio::Input","value":"Input {  }","parent":null,"children":[{"krate":0,"index":1136}],"decl_id":null,"docs":" Input mode (type state)\n","sig":null,"attributes":[{"value":"/ Input mode (type state)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75453,"byte_end":75480,"line_start":104,"line_end":104,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1137},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75582,"byte_end":75590,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"Floating","qualname":"::gpio::Floating","value":"","parent":null,"children":[],"decl_id":null,"docs":" Floating input (type state)\n","sig":null,"attributes":[{"value":"/ Floating input (type state)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75539,"byte_end":75570,"line_start":109,"line_end":109,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1139},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75639,"byte_end":75647,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"PullDown","qualname":"::gpio::PullDown","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled down input (type state)\n","sig":null,"attributes":[{"value":"/ Pulled down input (type state)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75593,"byte_end":75627,"line_start":112,"line_end":112,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1141},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75694,"byte_end":75700,"line_start":116,"line_end":116,"column_start":12,"column_end":18},"name":"PullUp","qualname":"::gpio::PullUp","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled up input (type state)\n","sig":null,"attributes":[{"value":"/ Pulled up input (type state)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75650,"byte_end":75682,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1143},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75758,"byte_end":75767,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"OpenDrain","qualname":"::gpio::OpenDrain","value":"","parent":null,"children":[],"decl_id":null,"docs":" Open drain input or output (type state)\n","sig":null,"attributes":[{"value":"/ Open drain input or output (type state)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75703,"byte_end":75746,"line_start":118,"line_end":118,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1145},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75810,"byte_end":75816,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"Output","qualname":"::gpio::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":1147}],"decl_id":null,"docs":" Output mode (type state)\n","sig":null,"attributes":[{"value":"/ Output mode (type state)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75770,"byte_end":75798,"line_start":121,"line_end":121,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1148},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75903,"byte_end":75911,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"PushPull","qualname":"::gpio::PushPull","value":"","parent":null,"children":[],"decl_id":null,"docs":" Push pull output (type state)\n","sig":null,"attributes":[{"value":"/ Push pull output (type state)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75858,"byte_end":75891,"line_start":126,"line_end":126,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1150},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75954,"byte_end":75960,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"Analog","qualname":"::gpio::Analog","value":"","parent":null,"children":[],"decl_id":null,"docs":" Analog mode (type state)\n","sig":null,"attributes":[{"value":"/ Analog mode (type state)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75914,"byte_end":75942,"line_start":129,"line_end":129,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1152},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":75972,"byte_end":75980,"line_start":132,"line_end":132,"column_start":10,"column_end":18},"name":"Debugger","qualname":"::gpio::Debugger","value":"Alternate<PushPull, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5589},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76157,"byte_end":76160,"line_start":138,"line_end":138,"column_start":5,"column_end":8},"name":"Low","qualname":"::gpio::Speed::Low","value":"Speed::Low","parent":{"krate":0,"index":5588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5592},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76170,"byte_end":76176,"line_start":139,"line_end":139,"column_start":5,"column_end":11},"name":"Medium","qualname":"::gpio::Speed::Medium","value":"Speed::Medium","parent":{"krate":0,"index":5588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5595},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76186,"byte_end":76190,"line_start":140,"line_end":140,"column_start":5,"column_end":9},"name":"High","qualname":"::gpio::Speed::High","value":"Speed::High","parent":{"krate":0,"index":5588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5598},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76200,"byte_end":76208,"line_start":141,"line_end":141,"column_start":5,"column_end":13},"name":"VeryHigh","qualname":"::gpio::Speed::VeryHigh","value":"Speed::VeryHigh","parent":{"krate":0,"index":5588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5588},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76145,"byte_end":76150,"line_start":137,"line_end":137,"column_start":10,"column_end":15},"name":"Speed","qualname":"::gpio::Speed","value":"pub enum Speed { Low = , Medium = , High = , VeryHigh = , }","parent":null,"children":[{"krate":0,"index":5589},{"krate":0,"index":5592},{"krate":0,"index":5595},{"krate":0,"index":5598}],"decl_id":null,"docs":" GPIO Pin speed selection\n","sig":null,"attributes":[{"value":"/ GPIO Pin speed selection","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76008,"byte_end":76036,"line_start":134,"line_end":134,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5613},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76336,"byte_end":76342,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"Rising","qualname":"::gpio::Edge::Rising","value":"Edge::Rising","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5615},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76348,"byte_end":76355,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"Falling","qualname":"::gpio::Edge::Falling","value":"Edge::Falling","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5617},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76361,"byte_end":76374,"line_start":149,"line_end":149,"column_start":5,"column_end":18},"name":"RisingFalling","qualname":"::gpio::Edge::RisingFalling","value":"Edge::RisingFalling","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5612},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76325,"byte_end":76329,"line_start":146,"line_end":146,"column_start":10,"column_end":14},"name":"Edge","qualname":"::gpio::Edge","value":"pub enum Edge { Rising, Falling, RisingFalling, }","parent":null,"children":[{"krate":0,"index":5613},{"krate":0,"index":5615},{"krate":0,"index":5617}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1155},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76469,"byte_end":76482,"line_start":154,"line_end":154,"column_start":15,"column_end":28},"name":"Interruptable","qualname":"::gpio::sealed::Interruptable","value":"Interruptable","parent":null,"children":[],"decl_id":null,"docs":" Marker trait that show if `ExtiPin` can be implemented\n","sig":null,"attributes":[{"value":"/ Marker trait that show if `ExtiPin` can be implemented","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76396,"byte_end":76454,"line_start":153,"line_end":153,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":1163},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76643,"byte_end":76650,"line_start":162,"line_end":162,"column_start":11,"column_end":18},"name":"ExtiPin","qualname":"::gpio::ExtiPin","value":"ExtiPin","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169}],"decl_id":null,"docs":" External Interrupt Pin\n","sig":null,"attributes":[{"value":"/ External Interrupt Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76606,"byte_end":76632,"line_start":161,"line_end":161,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76660,"byte_end":76681,"line_start":163,"line_end":163,"column_start":8,"column_end":29},"name":"make_interrupt_source","qualname":"::gpio::ExtiPin::make_interrupt_source","value":"pub fn make_interrupt_source(&mut Self, &mut SysCfg)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76722,"byte_end":76737,"line_start":164,"line_end":164,"column_start":8,"column_end":23},"name":"trigger_on_edge","qualname":"::gpio::ExtiPin::trigger_on_edge","value":"pub fn trigger_on_edge(&mut Self, &mut EXTI, Edge)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76787,"byte_end":76803,"line_start":165,"line_end":165,"column_start":8,"column_end":24},"name":"enable_interrupt","qualname":"::gpio::ExtiPin::enable_interrupt","value":"pub fn enable_interrupt(&mut Self, &mut EXTI)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76840,"byte_end":76857,"line_start":166,"line_end":166,"column_start":8,"column_end":25},"name":"disable_interrupt","qualname":"::gpio::ExtiPin::disable_interrupt","value":"pub fn disable_interrupt(&mut Self, &mut EXTI)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76894,"byte_end":76921,"line_start":167,"line_end":167,"column_start":8,"column_end":35},"name":"clear_interrupt_pending_bit","qualname":"::gpio::ExtiPin::clear_interrupt_pending_bit","value":"pub fn clear_interrupt_pending_bit(&mut Self)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76941,"byte_end":76956,"line_start":168,"line_end":168,"column_start":8,"column_end":23},"name":"check_interrupt","qualname":"::gpio::ExtiPin::check_interrupt","value":"pub fn check_interrupt(&Self) -> bool","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":80195,"byte_end":80198,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"name":"Pin","qualname":"::gpio::Pin","value":"Pin {  }","parent":null,"children":[{"krate":0,"index":1195}],"decl_id":null,"docs":" Generic pin type","sig":null,"attributes":[{"value":"/ Generic pin type","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":79978,"byte_end":79998,"line_start":260,"line_end":260,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":79999,"byte_end":80002,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ - `MODE` is one of the pin modes (see [Modes](crate::gpio#modes) section).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":80003,"byte_end":80081,"line_start":262,"line_end":262,"column_start":1,"column_end":79}},{"value":"/ - `P` is port name: `A` for GPIOA, `B` for GPIOB, etc.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":80082,"byte_end":80140,"line_start":263,"line_end":263,"column_start":1,"column_end":59}},{"value":"/ - `N` is pin number: from `0` to `15`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":80141,"byte_end":80183,"line_start":264,"line_end":264,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":81278,"byte_end":81287,"line_start":307,"line_end":307,"column_start":12,"column_end":21},"name":"set_speed","qualname":"<Pin<Output<MODE>, P, N>>::set_speed","value":"pub fn set_speed(Self, Speed) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set pin speed\n","sig":null,"attributes":[{"value":"/ Set pin speed","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":81249,"byte_end":81266,"line_start":306,"line_end":306,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":81682,"byte_end":81698,"line_start":322,"line_end":322,"column_start":12,"column_end":28},"name":"internal_pull_up","qualname":"<Pin<Output<OpenDrain>, P, N>>::internal_pull_up","value":"pub fn internal_pull_up(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables / disables the internal pull up\n","sig":null,"attributes":[{"value":"/ Enables / disables the internal pull up","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":81627,"byte_end":81670,"line_start":321,"line_end":321,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":82063,"byte_end":82081,"line_start":335,"line_end":335,"column_start":12,"column_end":30},"name":"internal_pull_down","qualname":"<Pin<Output<OpenDrain>, P, N>>::internal_pull_down","value":"pub fn internal_pull_down(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables / disables the internal pull down\n","sig":null,"attributes":[{"value":"/ Enables / disables the internal pull down","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":82006,"byte_end":82051,"line_start":334,"line_end":334,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":82502,"byte_end":82511,"line_start":350,"line_end":350,"column_start":12,"column_end":21},"name":"set_speed","qualname":"<Pin<Alternate<PushPull, A>, P, N>>::set_speed","value":"pub fn set_speed(Self, Speed) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set pin speed\n","sig":null,"attributes":[{"value":"/ Set pin speed","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":82473,"byte_end":82490,"line_start":349,"line_end":349,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":82840,"byte_end":82856,"line_start":363,"line_end":363,"column_start":12,"column_end":28},"name":"internal_pull_up","qualname":"<Pin<Alternate<PushPull, A>, P, N>>::internal_pull_up","value":"pub fn internal_pull_up(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables / disables the internal pull up\n","sig":null,"attributes":[{"value":"/ Enables / disables the internal pull up","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":82785,"byte_end":82828,"line_start":362,"line_end":362,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":83221,"byte_end":83239,"line_start":376,"line_end":376,"column_start":12,"column_end":30},"name":"internal_pull_down","qualname":"<Pin<Alternate<PushPull, A>, P, N>>::internal_pull_down","value":"pub fn internal_pull_down(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables / disables the internal pull down\n","sig":null,"attributes":[{"value":"/ Enables / disables the internal pull down","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":83164,"byte_end":83209,"line_start":375,"line_end":375,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":83700,"byte_end":83714,"line_start":391,"line_end":391,"column_start":12,"column_end":26},"name":"set_open_drain","qualname":"<Pin<Alternate<PushPull, A>, P, N>>::set_open_drain","value":"pub fn set_open_drain(Self) -> Pin<Alternate<OpenDrain, >, , >","parent":null,"children":[],"decl_id":null,"docs":" Turns pin alternate configuration pin into open drain\n","sig":null,"attributes":[{"value":"/ Turns pin alternate configuration pin into open drain","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":83631,"byte_end":83688,"line_start":390,"line_end":390,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84220,"byte_end":84232,"line_start":408,"line_end":408,"column_start":12,"column_end":24},"name":"erase_number","qualname":"<Pin<MODE, P, N>>::erase_number","value":"pub fn erase_number(Self) -> PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":" Erases the pin number from the type","sig":null,"attributes":[{"value":"/ Erases the pin number from the type","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84028,"byte_end":84067,"line_start":404,"line_end":404,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84072,"byte_end":84075,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This is useful when you want to collect the pins into an array where you","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84080,"byte_end":84156,"line_start":406,"line_end":406,"column_start":5,"column_end":81}},{"value":"/ need all the elements to have the same type","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84161,"byte_end":84208,"line_start":407,"line_end":407,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84497,"byte_end":84502,"line_start":416,"line_end":416,"column_start":12,"column_end":17},"name":"erase","qualname":"<Pin<MODE, P, N>>::erase","value":"pub fn erase(Self) -> EPin<MODE>","parent":null,"children":[],"decl_id":null,"docs":" Erases the pin number and the port from the type","sig":null,"attributes":[{"value":"/ Erases the pin number and the port from the type","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84292,"byte_end":84344,"line_start":412,"line_end":412,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84349,"byte_end":84352,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ This is useful when you want to collect the pins into an array where you","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84357,"byte_end":84433,"line_start":414,"line_end":414,"column_start":5,"column_end":81}},{"value":"/ need all the elements to have the same type","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84438,"byte_end":84485,"line_start":415,"line_end":415,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":85914,"byte_end":85922,"line_start":457,"line_end":457,"column_start":12,"column_end":20},"name":"set_high","qualname":"<Pin<Output<MODE>, P, N>>::set_high","value":"pub fn set_high(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":85885,"byte_end":85902,"line_start":456,"line_end":456,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86001,"byte_end":86008,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"set_low","qualname":"<Pin<Output<MODE>, P, N>>::set_low","value":"pub fn set_low(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":85972,"byte_end":85989,"line_start":461,"line_end":461,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86086,"byte_end":86095,"line_start":467,"line_end":467,"column_start":12,"column_end":21},"name":"get_state","qualname":"<Pin<Output<MODE>, P, N>>::get_state","value":"pub fn get_state(&Self) -> PinState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86057,"byte_end":86074,"line_start":466,"line_end":466,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86268,"byte_end":86277,"line_start":476,"line_end":476,"column_start":12,"column_end":21},"name":"set_state","qualname":"<Pin<Output<MODE>, P, N>>::set_state","value":"pub fn set_state(&mut Self, PinState)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86239,"byte_end":86256,"line_start":475,"line_end":475,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86472,"byte_end":86483,"line_start":484,"line_end":484,"column_start":12,"column_end":23},"name":"is_set_high","qualname":"<Pin<Output<MODE>, P, N>>::is_set_high","value":"pub fn is_set_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86443,"byte_end":86460,"line_start":483,"line_end":483,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86568,"byte_end":86578,"line_start":489,"line_end":489,"column_start":12,"column_end":22},"name":"is_set_low","qualname":"<Pin<Output<MODE>, P, N>>::is_set_low","value":"pub fn is_set_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86539,"byte_end":86556,"line_start":488,"line_end":488,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86663,"byte_end":86669,"line_start":494,"line_end":494,"column_start":12,"column_end":18},"name":"toggle","qualname":"<Pin<Output<MODE>, P, N>>::toggle","value":"pub fn toggle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86634,"byte_end":86651,"line_start":493,"line_end":493,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86902,"byte_end":86909,"line_start":505,"line_end":505,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Pin<Output<OpenDrain>, P, N>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86873,"byte_end":86890,"line_start":504,"line_end":504,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86990,"byte_end":86996,"line_start":510,"line_end":510,"column_start":12,"column_end":18},"name":"is_low","qualname":"<Pin<Output<OpenDrain>, P, N>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86961,"byte_end":86978,"line_start":509,"line_end":509,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87143,"byte_end":87150,"line_start":517,"line_end":517,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Pin<Input<MODE>, P, N>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87114,"byte_end":87131,"line_start":516,"line_end":516,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87231,"byte_end":87237,"line_start":522,"line_end":522,"column_start":12,"column_end":18},"name":"is_low","qualname":"<Pin<Input<MODE>, P, N>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87202,"byte_end":87219,"line_start":521,"line_end":521,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":5630},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88729,"byte_end":88734,"line_start":579,"line_end":579,"column_start":14,"column_end":19},"name":"gpioa","qualname":"::gpio::gpioa","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5635},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5642},{"krate":0,"index":5645},{"krate":0,"index":5646},{"krate":0,"index":5647},{"krate":0,"index":5649},{"krate":0,"index":5652},{"krate":0,"index":5669},{"krate":0,"index":5672},{"krate":0,"index":5675},{"krate":0,"index":5679},{"krate":0,"index":5683},{"krate":0,"index":5687},{"krate":0,"index":5691},{"krate":0,"index":5695},{"krate":0,"index":5699},{"krate":0,"index":5703},{"krate":0,"index":5707},{"krate":0,"index":5711},{"krate":0,"index":5715},{"krate":0,"index":5719},{"krate":0,"index":5723},{"krate":0,"index":5727},{"krate":0,"index":5731},{"krate":0,"index":5735}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87460,"byte_end":87468,"line_start":531,"line_end":531,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":5653},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88762,"byte_end":88765,"line_start":580,"line_end":580,"column_start":11,"column_end":14},"name":"pa0","qualname":"::gpio::gpioa::Parts::pa0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 0_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5654},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88798,"byte_end":88801,"line_start":581,"line_end":581,"column_start":11,"column_end":14},"name":"pa1","qualname":"::gpio::gpioa::Parts::pa1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 1_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5655},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88834,"byte_end":88837,"line_start":582,"line_end":582,"column_start":11,"column_end":14},"name":"pa2","qualname":"::gpio::gpioa::Parts::pa2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 2_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5656},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88870,"byte_end":88873,"line_start":583,"line_end":583,"column_start":11,"column_end":14},"name":"pa3","qualname":"::gpio::gpioa::Parts::pa3","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 3_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5657},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88906,"byte_end":88909,"line_start":584,"line_end":584,"column_start":11,"column_end":14},"name":"pa4","qualname":"::gpio::gpioa::Parts::pa4","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 4_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5658},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88942,"byte_end":88945,"line_start":585,"line_end":585,"column_start":11,"column_end":14},"name":"pa5","qualname":"::gpio::gpioa::Parts::pa5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 5_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5659},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88978,"byte_end":88981,"line_start":586,"line_end":586,"column_start":11,"column_end":14},"name":"pa6","qualname":"::gpio::gpioa::Parts::pa6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 6_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5660},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89014,"byte_end":89017,"line_start":587,"line_end":587,"column_start":11,"column_end":14},"name":"pa7","qualname":"::gpio::gpioa::Parts::pa7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 7_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5661},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89050,"byte_end":89053,"line_start":588,"line_end":588,"column_start":11,"column_end":14},"name":"pa8","qualname":"::gpio::gpioa::Parts::pa8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 8_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5662},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89086,"byte_end":89089,"line_start":589,"line_end":589,"column_start":11,"column_end":14},"name":"pa9","qualname":"::gpio::gpioa::Parts::pa9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 9_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5663},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89123,"byte_end":89127,"line_start":590,"line_end":590,"column_start":12,"column_end":16},"name":"pa10","qualname":"::gpio::gpioa::Parts::pa10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 10_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5664},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89162,"byte_end":89166,"line_start":591,"line_end":591,"column_start":12,"column_end":16},"name":"pa11","qualname":"::gpio::gpioa::Parts::pa11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 11_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5665},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89201,"byte_end":89205,"line_start":592,"line_end":592,"column_start":12,"column_end":16},"name":"pa12","qualname":"::gpio::gpioa::Parts::pa12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 12_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5666},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89240,"byte_end":89244,"line_start":593,"line_end":593,"column_start":12,"column_end":16},"name":"pa13","qualname":"::gpio::gpioa::Parts::pa13","value":"gpio::Pin<gpio::Alternate<gpio::PushPull, 0_u8>, 'A', 13_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5667},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89311,"byte_end":89315,"line_start":594,"line_end":594,"column_start":12,"column_end":16},"name":"pa14","qualname":"::gpio::gpioa::Parts::pa14","value":"gpio::Pin<gpio::Alternate<gpio::PushPull, 0_u8>, 'A', 14_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5668},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89369,"byte_end":89373,"line_start":595,"line_end":595,"column_start":12,"column_end":16},"name":"pa15","qualname":"::gpio::gpioa::Parts::pa15","value":"gpio::Pin<gpio::Alternate<gpio::PushPull, 0_u8>, 'A', 15_u8>","parent":{"krate":0,"index":5652},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":5672},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88745,"byte_end":88748,"line_start":579,"line_end":579,"column_start":30,"column_end":33},"name":"PAn","qualname":"::gpio::gpioa::PAn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5675},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88756,"byte_end":88759,"line_start":580,"line_end":580,"column_start":5,"column_end":8},"name":"PA0","qualname":"::gpio::gpioa::PA0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5679},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88792,"byte_end":88795,"line_start":581,"line_end":581,"column_start":5,"column_end":8},"name":"PA1","qualname":"::gpio::gpioa::PA1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5683},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88828,"byte_end":88831,"line_start":582,"line_end":582,"column_start":5,"column_end":8},"name":"PA2","qualname":"::gpio::gpioa::PA2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5687},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88864,"byte_end":88867,"line_start":583,"line_end":583,"column_start":5,"column_end":8},"name":"PA3","qualname":"::gpio::gpioa::PA3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5691},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88900,"byte_end":88903,"line_start":584,"line_end":584,"column_start":5,"column_end":8},"name":"PA4","qualname":"::gpio::gpioa::PA4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5695},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88936,"byte_end":88939,"line_start":585,"line_end":585,"column_start":5,"column_end":8},"name":"PA5","qualname":"::gpio::gpioa::PA5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5699},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":88972,"byte_end":88975,"line_start":586,"line_end":586,"column_start":5,"column_end":8},"name":"PA6","qualname":"::gpio::gpioa::PA6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5703},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89008,"byte_end":89011,"line_start":587,"line_end":587,"column_start":5,"column_end":8},"name":"PA7","qualname":"::gpio::gpioa::PA7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5707},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89044,"byte_end":89047,"line_start":588,"line_end":588,"column_start":5,"column_end":8},"name":"PA8","qualname":"::gpio::gpioa::PA8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5711},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89080,"byte_end":89083,"line_start":589,"line_end":589,"column_start":5,"column_end":8},"name":"PA9","qualname":"::gpio::gpioa::PA9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5715},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89116,"byte_end":89120,"line_start":590,"line_end":590,"column_start":5,"column_end":9},"name":"PA10","qualname":"::gpio::gpioa::PA10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5719},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89155,"byte_end":89159,"line_start":591,"line_end":591,"column_start":5,"column_end":9},"name":"PA11","qualname":"::gpio::gpioa::PA11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5723},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89194,"byte_end":89198,"line_start":592,"line_end":592,"column_start":5,"column_end":9},"name":"PA12","qualname":"::gpio::gpioa::PA12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5727},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89233,"byte_end":89237,"line_start":593,"line_end":593,"column_start":5,"column_end":9},"name":"PA13","qualname":"::gpio::gpioa::PA13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5731},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89304,"byte_end":89308,"line_start":594,"line_end":594,"column_start":5,"column_end":9},"name":"PA14","qualname":"::gpio::gpioa::PA14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5735},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89362,"byte_end":89366,"line_start":595,"line_end":595,"column_start":5,"column_end":9},"name":"PA15","qualname":"::gpio::gpioa::PA15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5788},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89431,"byte_end":89436,"line_start":598,"line_end":598,"column_start":14,"column_end":19},"name":"gpiob","qualname":"::gpio::gpiob","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":5789},{"krate":0,"index":5790},{"krate":0,"index":5793},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5800},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5807},{"krate":0,"index":5810},{"krate":0,"index":5827},{"krate":0,"index":5830},{"krate":0,"index":5833},{"krate":0,"index":5837},{"krate":0,"index":5841},{"krate":0,"index":5845},{"krate":0,"index":5849},{"krate":0,"index":5853},{"krate":0,"index":5857},{"krate":0,"index":5861},{"krate":0,"index":5865},{"krate":0,"index":5869},{"krate":0,"index":5873},{"krate":0,"index":5877},{"krate":0,"index":5881},{"krate":0,"index":5885},{"krate":0,"index":5889},{"krate":0,"index":5893}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87460,"byte_end":87468,"line_start":531,"line_end":531,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":5811},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89464,"byte_end":89467,"line_start":599,"line_end":599,"column_start":11,"column_end":14},"name":"pb0","qualname":"::gpio::gpiob::Parts::pb0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 0_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5812},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89500,"byte_end":89503,"line_start":600,"line_end":600,"column_start":11,"column_end":14},"name":"pb1","qualname":"::gpio::gpiob::Parts::pb1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 1_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5813},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89536,"byte_end":89539,"line_start":601,"line_end":601,"column_start":11,"column_end":14},"name":"pb2","qualname":"::gpio::gpiob::Parts::pb2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 2_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5814},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89572,"byte_end":89575,"line_start":602,"line_end":602,"column_start":11,"column_end":14},"name":"pb3","qualname":"::gpio::gpiob::Parts::pb3","value":"gpio::Pin<gpio::Alternate<gpio::PushPull, 0_u8>, 'B', 3_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5815},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89631,"byte_end":89634,"line_start":603,"line_end":603,"column_start":11,"column_end":14},"name":"pb4","qualname":"::gpio::gpiob::Parts::pb4","value":"gpio::Pin<gpio::Alternate<gpio::PushPull, 0_u8>, 'B', 4_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5816},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89684,"byte_end":89687,"line_start":604,"line_end":604,"column_start":11,"column_end":14},"name":"pb5","qualname":"::gpio::gpiob::Parts::pb5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 5_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5817},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89720,"byte_end":89723,"line_start":605,"line_end":605,"column_start":11,"column_end":14},"name":"pb6","qualname":"::gpio::gpiob::Parts::pb6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 6_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5818},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89756,"byte_end":89759,"line_start":606,"line_end":606,"column_start":11,"column_end":14},"name":"pb7","qualname":"::gpio::gpiob::Parts::pb7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 7_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5819},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89792,"byte_end":89795,"line_start":607,"line_end":607,"column_start":11,"column_end":14},"name":"pb8","qualname":"::gpio::gpiob::Parts::pb8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 8_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5820},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89828,"byte_end":89831,"line_start":608,"line_end":608,"column_start":11,"column_end":14},"name":"pb9","qualname":"::gpio::gpiob::Parts::pb9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 9_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5821},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89865,"byte_end":89869,"line_start":609,"line_end":609,"column_start":12,"column_end":16},"name":"pb10","qualname":"::gpio::gpiob::Parts::pb10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 10_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5822},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89904,"byte_end":89908,"line_start":610,"line_end":610,"column_start":12,"column_end":16},"name":"pb11","qualname":"::gpio::gpiob::Parts::pb11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 11_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5823},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89943,"byte_end":89947,"line_start":611,"line_end":611,"column_start":12,"column_end":16},"name":"pb12","qualname":"::gpio::gpiob::Parts::pb12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 12_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5824},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89982,"byte_end":89986,"line_start":612,"line_end":612,"column_start":12,"column_end":16},"name":"pb13","qualname":"::gpio::gpiob::Parts::pb13","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 13_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5825},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90021,"byte_end":90025,"line_start":613,"line_end":613,"column_start":12,"column_end":16},"name":"pb14","qualname":"::gpio::gpiob::Parts::pb14","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 14_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5826},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90060,"byte_end":90064,"line_start":614,"line_end":614,"column_start":12,"column_end":16},"name":"pb15","qualname":"::gpio::gpiob::Parts::pb15","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 15_u8>","parent":{"krate":0,"index":5810},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":5830},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89447,"byte_end":89450,"line_start":598,"line_end":598,"column_start":30,"column_end":33},"name":"PBn","qualname":"::gpio::gpiob::PBn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5833},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89458,"byte_end":89461,"line_start":599,"line_end":599,"column_start":5,"column_end":8},"name":"PB0","qualname":"::gpio::gpiob::PB0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5837},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89494,"byte_end":89497,"line_start":600,"line_end":600,"column_start":5,"column_end":8},"name":"PB1","qualname":"::gpio::gpiob::PB1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5841},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89530,"byte_end":89533,"line_start":601,"line_end":601,"column_start":5,"column_end":8},"name":"PB2","qualname":"::gpio::gpiob::PB2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5845},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89566,"byte_end":89569,"line_start":602,"line_end":602,"column_start":5,"column_end":8},"name":"PB3","qualname":"::gpio::gpiob::PB3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5849},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89625,"byte_end":89628,"line_start":603,"line_end":603,"column_start":5,"column_end":8},"name":"PB4","qualname":"::gpio::gpiob::PB4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5853},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89678,"byte_end":89681,"line_start":604,"line_end":604,"column_start":5,"column_end":8},"name":"PB5","qualname":"::gpio::gpiob::PB5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5857},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89714,"byte_end":89717,"line_start":605,"line_end":605,"column_start":5,"column_end":8},"name":"PB6","qualname":"::gpio::gpiob::PB6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5861},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89750,"byte_end":89753,"line_start":606,"line_end":606,"column_start":5,"column_end":8},"name":"PB7","qualname":"::gpio::gpiob::PB7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5865},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89786,"byte_end":89789,"line_start":607,"line_end":607,"column_start":5,"column_end":8},"name":"PB8","qualname":"::gpio::gpiob::PB8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5869},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89822,"byte_end":89825,"line_start":608,"line_end":608,"column_start":5,"column_end":8},"name":"PB9","qualname":"::gpio::gpiob::PB9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5873},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89858,"byte_end":89862,"line_start":609,"line_end":609,"column_start":5,"column_end":9},"name":"PB10","qualname":"::gpio::gpiob::PB10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5877},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89897,"byte_end":89901,"line_start":610,"line_end":610,"column_start":5,"column_end":9},"name":"PB11","qualname":"::gpio::gpiob::PB11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5881},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89936,"byte_end":89940,"line_start":611,"line_end":611,"column_start":5,"column_end":9},"name":"PB12","qualname":"::gpio::gpiob::PB12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5885},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":89975,"byte_end":89979,"line_start":612,"line_end":612,"column_start":5,"column_end":9},"name":"PB13","qualname":"::gpio::gpiob::PB13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5889},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90014,"byte_end":90018,"line_start":613,"line_end":613,"column_start":5,"column_end":9},"name":"PB14","qualname":"::gpio::gpiob::PB14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5893},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90053,"byte_end":90057,"line_start":614,"line_end":614,"column_start":5,"column_end":9},"name":"PB15","qualname":"::gpio::gpiob::PB15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5946},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90106,"byte_end":90111,"line_start":617,"line_end":617,"column_start":14,"column_end":19},"name":"gpioc","qualname":"::gpio::gpioc","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":5947},{"krate":0,"index":5948},{"krate":0,"index":5951},{"krate":0,"index":5954},{"krate":0,"index":5955},{"krate":0,"index":5958},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5965},{"krate":0,"index":5968},{"krate":0,"index":5985},{"krate":0,"index":5988},{"krate":0,"index":5991},{"krate":0,"index":5995},{"krate":0,"index":5999},{"krate":0,"index":6003},{"krate":0,"index":6007},{"krate":0,"index":6011},{"krate":0,"index":6015},{"krate":0,"index":6019},{"krate":0,"index":6023},{"krate":0,"index":6027},{"krate":0,"index":6031},{"krate":0,"index":6035},{"krate":0,"index":6039},{"krate":0,"index":6043},{"krate":0,"index":6047},{"krate":0,"index":6051}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87460,"byte_end":87468,"line_start":531,"line_end":531,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":5969},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90139,"byte_end":90142,"line_start":618,"line_end":618,"column_start":11,"column_end":14},"name":"pc0","qualname":"::gpio::gpioc::Parts::pc0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 0_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5970},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90175,"byte_end":90178,"line_start":619,"line_end":619,"column_start":11,"column_end":14},"name":"pc1","qualname":"::gpio::gpioc::Parts::pc1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 1_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5971},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90211,"byte_end":90214,"line_start":620,"line_end":620,"column_start":11,"column_end":14},"name":"pc2","qualname":"::gpio::gpioc::Parts::pc2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 2_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5972},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90247,"byte_end":90250,"line_start":621,"line_end":621,"column_start":11,"column_end":14},"name":"pc3","qualname":"::gpio::gpioc::Parts::pc3","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 3_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5973},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90283,"byte_end":90286,"line_start":622,"line_end":622,"column_start":11,"column_end":14},"name":"pc4","qualname":"::gpio::gpioc::Parts::pc4","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 4_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5974},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90319,"byte_end":90322,"line_start":623,"line_end":623,"column_start":11,"column_end":14},"name":"pc5","qualname":"::gpio::gpioc::Parts::pc5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 5_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5975},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90355,"byte_end":90358,"line_start":624,"line_end":624,"column_start":11,"column_end":14},"name":"pc6","qualname":"::gpio::gpioc::Parts::pc6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 6_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5976},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90391,"byte_end":90394,"line_start":625,"line_end":625,"column_start":11,"column_end":14},"name":"pc7","qualname":"::gpio::gpioc::Parts::pc7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 7_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5977},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90427,"byte_end":90430,"line_start":626,"line_end":626,"column_start":11,"column_end":14},"name":"pc8","qualname":"::gpio::gpioc::Parts::pc8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 8_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5978},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90463,"byte_end":90466,"line_start":627,"line_end":627,"column_start":11,"column_end":14},"name":"pc9","qualname":"::gpio::gpioc::Parts::pc9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 9_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5979},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90500,"byte_end":90504,"line_start":628,"line_end":628,"column_start":12,"column_end":16},"name":"pc10","qualname":"::gpio::gpioc::Parts::pc10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 10_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5980},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90539,"byte_end":90543,"line_start":629,"line_end":629,"column_start":12,"column_end":16},"name":"pc11","qualname":"::gpio::gpioc::Parts::pc11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 11_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5981},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90578,"byte_end":90582,"line_start":630,"line_end":630,"column_start":12,"column_end":16},"name":"pc12","qualname":"::gpio::gpioc::Parts::pc12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 12_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5982},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90617,"byte_end":90621,"line_start":631,"line_end":631,"column_start":12,"column_end":16},"name":"pc13","qualname":"::gpio::gpioc::Parts::pc13","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 13_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5983},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90656,"byte_end":90660,"line_start":632,"line_end":632,"column_start":12,"column_end":16},"name":"pc14","qualname":"::gpio::gpioc::Parts::pc14","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 14_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5984},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90695,"byte_end":90699,"line_start":633,"line_end":633,"column_start":12,"column_end":16},"name":"pc15","qualname":"::gpio::gpioc::Parts::pc15","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 15_u8>","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":5988},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90122,"byte_end":90125,"line_start":617,"line_end":617,"column_start":30,"column_end":33},"name":"PCn","qualname":"::gpio::gpioc::PCn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5991},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90133,"byte_end":90136,"line_start":618,"line_end":618,"column_start":5,"column_end":8},"name":"PC0","qualname":"::gpio::gpioc::PC0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5995},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90169,"byte_end":90172,"line_start":619,"line_end":619,"column_start":5,"column_end":8},"name":"PC1","qualname":"::gpio::gpioc::PC1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5999},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90205,"byte_end":90208,"line_start":620,"line_end":620,"column_start":5,"column_end":8},"name":"PC2","qualname":"::gpio::gpioc::PC2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6003},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90241,"byte_end":90244,"line_start":621,"line_end":621,"column_start":5,"column_end":8},"name":"PC3","qualname":"::gpio::gpioc::PC3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6007},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90277,"byte_end":90280,"line_start":622,"line_end":622,"column_start":5,"column_end":8},"name":"PC4","qualname":"::gpio::gpioc::PC4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6011},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90313,"byte_end":90316,"line_start":623,"line_end":623,"column_start":5,"column_end":8},"name":"PC5","qualname":"::gpio::gpioc::PC5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6015},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90349,"byte_end":90352,"line_start":624,"line_end":624,"column_start":5,"column_end":8},"name":"PC6","qualname":"::gpio::gpioc::PC6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6019},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90385,"byte_end":90388,"line_start":625,"line_end":625,"column_start":5,"column_end":8},"name":"PC7","qualname":"::gpio::gpioc::PC7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6023},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90421,"byte_end":90424,"line_start":626,"line_end":626,"column_start":5,"column_end":8},"name":"PC8","qualname":"::gpio::gpioc::PC8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6027},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90457,"byte_end":90460,"line_start":627,"line_end":627,"column_start":5,"column_end":8},"name":"PC9","qualname":"::gpio::gpioc::PC9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6031},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90493,"byte_end":90497,"line_start":628,"line_end":628,"column_start":5,"column_end":9},"name":"PC10","qualname":"::gpio::gpioc::PC10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6035},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90532,"byte_end":90536,"line_start":629,"line_end":629,"column_start":5,"column_end":9},"name":"PC11","qualname":"::gpio::gpioc::PC11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6039},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90571,"byte_end":90575,"line_start":630,"line_end":630,"column_start":5,"column_end":9},"name":"PC12","qualname":"::gpio::gpioc::PC12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6043},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90610,"byte_end":90614,"line_start":631,"line_end":631,"column_start":5,"column_end":9},"name":"PC13","qualname":"::gpio::gpioc::PC13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6047},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90649,"byte_end":90653,"line_start":632,"line_end":632,"column_start":5,"column_end":9},"name":"PC14","qualname":"::gpio::gpioc::PC14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6051},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90688,"byte_end":90692,"line_start":633,"line_end":633,"column_start":5,"column_end":9},"name":"PC15","qualname":"::gpio::gpioc::PC15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6104},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90767,"byte_end":90772,"line_start":637,"line_end":637,"column_start":14,"column_end":19},"name":"gpiod","qualname":"::gpio::gpiod","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6109},{"krate":0,"index":6112},{"krate":0,"index":6113},{"krate":0,"index":6116},{"krate":0,"index":6119},{"krate":0,"index":6120},{"krate":0,"index":6121},{"krate":0,"index":6123},{"krate":0,"index":6126},{"krate":0,"index":6143},{"krate":0,"index":6146},{"krate":0,"index":6149},{"krate":0,"index":6153},{"krate":0,"index":6157},{"krate":0,"index":6161},{"krate":0,"index":6165},{"krate":0,"index":6169},{"krate":0,"index":6173},{"krate":0,"index":6177},{"krate":0,"index":6181},{"krate":0,"index":6185},{"krate":0,"index":6189},{"krate":0,"index":6193},{"krate":0,"index":6197},{"krate":0,"index":6201},{"krate":0,"index":6205},{"krate":0,"index":6209}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87460,"byte_end":87468,"line_start":531,"line_end":531,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":6127},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90800,"byte_end":90803,"line_start":638,"line_end":638,"column_start":11,"column_end":14},"name":"pd0","qualname":"::gpio::gpiod::Parts::pd0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 0_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6128},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90836,"byte_end":90839,"line_start":639,"line_end":639,"column_start":11,"column_end":14},"name":"pd1","qualname":"::gpio::gpiod::Parts::pd1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 1_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6129},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90872,"byte_end":90875,"line_start":640,"line_end":640,"column_start":11,"column_end":14},"name":"pd2","qualname":"::gpio::gpiod::Parts::pd2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 2_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6130},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90908,"byte_end":90911,"line_start":641,"line_end":641,"column_start":11,"column_end":14},"name":"pd3","qualname":"::gpio::gpiod::Parts::pd3","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 3_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6131},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90944,"byte_end":90947,"line_start":642,"line_end":642,"column_start":11,"column_end":14},"name":"pd4","qualname":"::gpio::gpiod::Parts::pd4","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 4_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6132},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90980,"byte_end":90983,"line_start":643,"line_end":643,"column_start":11,"column_end":14},"name":"pd5","qualname":"::gpio::gpiod::Parts::pd5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 5_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6133},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91016,"byte_end":91019,"line_start":644,"line_end":644,"column_start":11,"column_end":14},"name":"pd6","qualname":"::gpio::gpiod::Parts::pd6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 6_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6134},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91052,"byte_end":91055,"line_start":645,"line_end":645,"column_start":11,"column_end":14},"name":"pd7","qualname":"::gpio::gpiod::Parts::pd7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 7_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6135},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91088,"byte_end":91091,"line_start":646,"line_end":646,"column_start":11,"column_end":14},"name":"pd8","qualname":"::gpio::gpiod::Parts::pd8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 8_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6136},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91124,"byte_end":91127,"line_start":647,"line_end":647,"column_start":11,"column_end":14},"name":"pd9","qualname":"::gpio::gpiod::Parts::pd9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 9_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6137},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91161,"byte_end":91165,"line_start":648,"line_end":648,"column_start":12,"column_end":16},"name":"pd10","qualname":"::gpio::gpiod::Parts::pd10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 10_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6138},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91200,"byte_end":91204,"line_start":649,"line_end":649,"column_start":12,"column_end":16},"name":"pd11","qualname":"::gpio::gpiod::Parts::pd11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 11_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6139},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91239,"byte_end":91243,"line_start":650,"line_end":650,"column_start":12,"column_end":16},"name":"pd12","qualname":"::gpio::gpiod::Parts::pd12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 12_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6140},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91278,"byte_end":91282,"line_start":651,"line_end":651,"column_start":12,"column_end":16},"name":"pd13","qualname":"::gpio::gpiod::Parts::pd13","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 13_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6141},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91317,"byte_end":91321,"line_start":652,"line_end":652,"column_start":12,"column_end":16},"name":"pd14","qualname":"::gpio::gpiod::Parts::pd14","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 14_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6142},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91356,"byte_end":91360,"line_start":653,"line_end":653,"column_start":12,"column_end":16},"name":"pd15","qualname":"::gpio::gpiod::Parts::pd15","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 15_u8>","parent":{"krate":0,"index":6126},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":6146},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90783,"byte_end":90786,"line_start":637,"line_end":637,"column_start":30,"column_end":33},"name":"PDn","qualname":"::gpio::gpiod::PDn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6149},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90794,"byte_end":90797,"line_start":638,"line_end":638,"column_start":5,"column_end":8},"name":"PD0","qualname":"::gpio::gpiod::PD0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6153},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90830,"byte_end":90833,"line_start":639,"line_end":639,"column_start":5,"column_end":8},"name":"PD1","qualname":"::gpio::gpiod::PD1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6157},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90866,"byte_end":90869,"line_start":640,"line_end":640,"column_start":5,"column_end":8},"name":"PD2","qualname":"::gpio::gpiod::PD2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6161},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90902,"byte_end":90905,"line_start":641,"line_end":641,"column_start":5,"column_end":8},"name":"PD3","qualname":"::gpio::gpiod::PD3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6165},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90938,"byte_end":90941,"line_start":642,"line_end":642,"column_start":5,"column_end":8},"name":"PD4","qualname":"::gpio::gpiod::PD4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6169},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":90974,"byte_end":90977,"line_start":643,"line_end":643,"column_start":5,"column_end":8},"name":"PD5","qualname":"::gpio::gpiod::PD5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6173},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91010,"byte_end":91013,"line_start":644,"line_end":644,"column_start":5,"column_end":8},"name":"PD6","qualname":"::gpio::gpiod::PD6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6177},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91046,"byte_end":91049,"line_start":645,"line_end":645,"column_start":5,"column_end":8},"name":"PD7","qualname":"::gpio::gpiod::PD7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6181},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91082,"byte_end":91085,"line_start":646,"line_end":646,"column_start":5,"column_end":8},"name":"PD8","qualname":"::gpio::gpiod::PD8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6185},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91118,"byte_end":91121,"line_start":647,"line_end":647,"column_start":5,"column_end":8},"name":"PD9","qualname":"::gpio::gpiod::PD9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6189},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91154,"byte_end":91158,"line_start":648,"line_end":648,"column_start":5,"column_end":9},"name":"PD10","qualname":"::gpio::gpiod::PD10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6193},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91193,"byte_end":91197,"line_start":649,"line_end":649,"column_start":5,"column_end":9},"name":"PD11","qualname":"::gpio::gpiod::PD11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6197},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91232,"byte_end":91236,"line_start":650,"line_end":650,"column_start":5,"column_end":9},"name":"PD12","qualname":"::gpio::gpiod::PD12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6201},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91271,"byte_end":91275,"line_start":651,"line_end":651,"column_start":5,"column_end":9},"name":"PD13","qualname":"::gpio::gpiod::PD13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6205},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91310,"byte_end":91314,"line_start":652,"line_end":652,"column_start":5,"column_end":9},"name":"PD14","qualname":"::gpio::gpiod::PD14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6209},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91349,"byte_end":91353,"line_start":653,"line_end":653,"column_start":5,"column_end":9},"name":"PD15","qualname":"::gpio::gpiod::PD15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6262},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91428,"byte_end":91433,"line_start":657,"line_end":657,"column_start":14,"column_end":19},"name":"gpioe","qualname":"::gpio::gpioe","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":6263},{"krate":0,"index":6264},{"krate":0,"index":6267},{"krate":0,"index":6270},{"krate":0,"index":6271},{"krate":0,"index":6274},{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6281},{"krate":0,"index":6284},{"krate":0,"index":6301},{"krate":0,"index":6304},{"krate":0,"index":6307},{"krate":0,"index":6311},{"krate":0,"index":6315},{"krate":0,"index":6319},{"krate":0,"index":6323},{"krate":0,"index":6327},{"krate":0,"index":6331},{"krate":0,"index":6335},{"krate":0,"index":6339},{"krate":0,"index":6343},{"krate":0,"index":6347},{"krate":0,"index":6351},{"krate":0,"index":6355},{"krate":0,"index":6359},{"krate":0,"index":6363},{"krate":0,"index":6367}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87460,"byte_end":87468,"line_start":531,"line_end":531,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":6285},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91461,"byte_end":91464,"line_start":658,"line_end":658,"column_start":11,"column_end":14},"name":"pe0","qualname":"::gpio::gpioe::Parts::pe0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 0_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6286},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91497,"byte_end":91500,"line_start":659,"line_end":659,"column_start":11,"column_end":14},"name":"pe1","qualname":"::gpio::gpioe::Parts::pe1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 1_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6287},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91533,"byte_end":91536,"line_start":660,"line_end":660,"column_start":11,"column_end":14},"name":"pe2","qualname":"::gpio::gpioe::Parts::pe2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 2_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6288},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91569,"byte_end":91572,"line_start":661,"line_end":661,"column_start":11,"column_end":14},"name":"pe3","qualname":"::gpio::gpioe::Parts::pe3","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 3_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6289},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91605,"byte_end":91608,"line_start":662,"line_end":662,"column_start":11,"column_end":14},"name":"pe4","qualname":"::gpio::gpioe::Parts::pe4","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 4_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6290},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91641,"byte_end":91644,"line_start":663,"line_end":663,"column_start":11,"column_end":14},"name":"pe5","qualname":"::gpio::gpioe::Parts::pe5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 5_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6291},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91677,"byte_end":91680,"line_start":664,"line_end":664,"column_start":11,"column_end":14},"name":"pe6","qualname":"::gpio::gpioe::Parts::pe6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 6_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6292},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91713,"byte_end":91716,"line_start":665,"line_end":665,"column_start":11,"column_end":14},"name":"pe7","qualname":"::gpio::gpioe::Parts::pe7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 7_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6293},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91749,"byte_end":91752,"line_start":666,"line_end":666,"column_start":11,"column_end":14},"name":"pe8","qualname":"::gpio::gpioe::Parts::pe8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 8_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6294},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91785,"byte_end":91788,"line_start":667,"line_end":667,"column_start":11,"column_end":14},"name":"pe9","qualname":"::gpio::gpioe::Parts::pe9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 9_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6295},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91822,"byte_end":91826,"line_start":668,"line_end":668,"column_start":12,"column_end":16},"name":"pe10","qualname":"::gpio::gpioe::Parts::pe10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 10_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6296},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91861,"byte_end":91865,"line_start":669,"line_end":669,"column_start":12,"column_end":16},"name":"pe11","qualname":"::gpio::gpioe::Parts::pe11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 11_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6297},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91900,"byte_end":91904,"line_start":670,"line_end":670,"column_start":12,"column_end":16},"name":"pe12","qualname":"::gpio::gpioe::Parts::pe12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 12_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6298},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91939,"byte_end":91943,"line_start":671,"line_end":671,"column_start":12,"column_end":16},"name":"pe13","qualname":"::gpio::gpioe::Parts::pe13","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 13_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6299},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91978,"byte_end":91982,"line_start":672,"line_end":672,"column_start":12,"column_end":16},"name":"pe14","qualname":"::gpio::gpioe::Parts::pe14","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 14_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6300},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":92017,"byte_end":92021,"line_start":673,"line_end":673,"column_start":12,"column_end":16},"name":"pe15","qualname":"::gpio::gpioe::Parts::pe15","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 15_u8>","parent":{"krate":0,"index":6284},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":6304},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91444,"byte_end":91447,"line_start":657,"line_end":657,"column_start":30,"column_end":33},"name":"PEn","qualname":"::gpio::gpioe::PEn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6307},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91455,"byte_end":91458,"line_start":658,"line_end":658,"column_start":5,"column_end":8},"name":"PE0","qualname":"::gpio::gpioe::PE0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6311},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91491,"byte_end":91494,"line_start":659,"line_end":659,"column_start":5,"column_end":8},"name":"PE1","qualname":"::gpio::gpioe::PE1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6315},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91527,"byte_end":91530,"line_start":660,"line_end":660,"column_start":5,"column_end":8},"name":"PE2","qualname":"::gpio::gpioe::PE2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6319},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91563,"byte_end":91566,"line_start":661,"line_end":661,"column_start":5,"column_end":8},"name":"PE3","qualname":"::gpio::gpioe::PE3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6323},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91599,"byte_end":91602,"line_start":662,"line_end":662,"column_start":5,"column_end":8},"name":"PE4","qualname":"::gpio::gpioe::PE4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6327},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91635,"byte_end":91638,"line_start":663,"line_end":663,"column_start":5,"column_end":8},"name":"PE5","qualname":"::gpio::gpioe::PE5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6331},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91671,"byte_end":91674,"line_start":664,"line_end":664,"column_start":5,"column_end":8},"name":"PE6","qualname":"::gpio::gpioe::PE6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6335},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91707,"byte_end":91710,"line_start":665,"line_end":665,"column_start":5,"column_end":8},"name":"PE7","qualname":"::gpio::gpioe::PE7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6339},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91743,"byte_end":91746,"line_start":666,"line_end":666,"column_start":5,"column_end":8},"name":"PE8","qualname":"::gpio::gpioe::PE8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6343},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91779,"byte_end":91782,"line_start":667,"line_end":667,"column_start":5,"column_end":8},"name":"PE9","qualname":"::gpio::gpioe::PE9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6347},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91815,"byte_end":91819,"line_start":668,"line_end":668,"column_start":5,"column_end":9},"name":"PE10","qualname":"::gpio::gpioe::PE10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6351},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91854,"byte_end":91858,"line_start":669,"line_end":669,"column_start":5,"column_end":9},"name":"PE11","qualname":"::gpio::gpioe::PE11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6355},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91893,"byte_end":91897,"line_start":670,"line_end":670,"column_start":5,"column_end":9},"name":"PE12","qualname":"::gpio::gpioe::PE12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6359},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91932,"byte_end":91936,"line_start":671,"line_end":671,"column_start":5,"column_end":9},"name":"PE13","qualname":"::gpio::gpioe::PE13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6363},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":91971,"byte_end":91975,"line_start":672,"line_end":672,"column_start":5,"column_end":9},"name":"PE14","qualname":"::gpio::gpioe::PE14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6367},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":92010,"byte_end":92014,"line_start":673,"line_end":673,"column_start":5,"column_end":9},"name":"PE15","qualname":"::gpio::gpioe::PE15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6420},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93420,"byte_end":93425,"line_start":717,"line_end":717,"column_start":14,"column_end":19},"name":"gpioh","qualname":"::gpio::gpioh","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","parent":null,"children":[{"krate":0,"index":6421},{"krate":0,"index":6422},{"krate":0,"index":6425},{"krate":0,"index":6428},{"krate":0,"index":6429},{"krate":0,"index":6432},{"krate":0,"index":6435},{"krate":0,"index":6436},{"krate":0,"index":6437},{"krate":0,"index":6439},{"krate":0,"index":6442},{"krate":0,"index":6459},{"krate":0,"index":6462},{"krate":0,"index":6465},{"krate":0,"index":6469},{"krate":0,"index":6473},{"krate":0,"index":6477},{"krate":0,"index":6481},{"krate":0,"index":6485},{"krate":0,"index":6489},{"krate":0,"index":6493},{"krate":0,"index":6497},{"krate":0,"index":6501},{"krate":0,"index":6505},{"krate":0,"index":6509},{"krate":0,"index":6513},{"krate":0,"index":6517},{"krate":0,"index":6521},{"krate":0,"index":6525}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87460,"byte_end":87468,"line_start":531,"line_end":531,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":6443},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93453,"byte_end":93456,"line_start":718,"line_end":718,"column_start":11,"column_end":14},"name":"ph0","qualname":"::gpio::gpioh::Parts::ph0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 0_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6444},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93489,"byte_end":93492,"line_start":719,"line_end":719,"column_start":11,"column_end":14},"name":"ph1","qualname":"::gpio::gpioh::Parts::ph1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 1_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6445},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93525,"byte_end":93528,"line_start":720,"line_end":720,"column_start":11,"column_end":14},"name":"ph2","qualname":"::gpio::gpioh::Parts::ph2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 2_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6446},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93561,"byte_end":93564,"line_start":721,"line_end":721,"column_start":11,"column_end":14},"name":"ph3","qualname":"::gpio::gpioh::Parts::ph3","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 3_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6447},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93597,"byte_end":93600,"line_start":722,"line_end":722,"column_start":11,"column_end":14},"name":"ph4","qualname":"::gpio::gpioh::Parts::ph4","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 4_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6448},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93633,"byte_end":93636,"line_start":723,"line_end":723,"column_start":11,"column_end":14},"name":"ph5","qualname":"::gpio::gpioh::Parts::ph5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 5_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6449},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93669,"byte_end":93672,"line_start":724,"line_end":724,"column_start":11,"column_end":14},"name":"ph6","qualname":"::gpio::gpioh::Parts::ph6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 6_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6450},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93705,"byte_end":93708,"line_start":725,"line_end":725,"column_start":11,"column_end":14},"name":"ph7","qualname":"::gpio::gpioh::Parts::ph7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 7_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6451},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93741,"byte_end":93744,"line_start":726,"line_end":726,"column_start":11,"column_end":14},"name":"ph8","qualname":"::gpio::gpioh::Parts::ph8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 8_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6452},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93777,"byte_end":93780,"line_start":727,"line_end":727,"column_start":11,"column_end":14},"name":"ph9","qualname":"::gpio::gpioh::Parts::ph9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 9_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6453},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93814,"byte_end":93818,"line_start":728,"line_end":728,"column_start":12,"column_end":16},"name":"ph10","qualname":"::gpio::gpioh::Parts::ph10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 10_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6454},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93853,"byte_end":93857,"line_start":729,"line_end":729,"column_start":12,"column_end":16},"name":"ph11","qualname":"::gpio::gpioh::Parts::ph11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 11_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6455},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93892,"byte_end":93896,"line_start":730,"line_end":730,"column_start":12,"column_end":16},"name":"ph12","qualname":"::gpio::gpioh::Parts::ph12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 12_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6456},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93931,"byte_end":93935,"line_start":731,"line_end":731,"column_start":12,"column_end":16},"name":"ph13","qualname":"::gpio::gpioh::Parts::ph13","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 13_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6457},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93970,"byte_end":93974,"line_start":732,"line_end":732,"column_start":12,"column_end":16},"name":"ph14","qualname":"::gpio::gpioh::Parts::ph14","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 14_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":6458},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":94009,"byte_end":94013,"line_start":733,"line_end":733,"column_start":12,"column_end":16},"name":"ph15","qualname":"::gpio::gpioh::Parts::ph15","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 15_u8>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87753,"byte_end":87760,"line_start":542,"line_end":542,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":6462},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93436,"byte_end":93439,"line_start":717,"line_end":717,"column_start":30,"column_end":33},"name":"PHn","qualname":"::gpio::gpioh::PHn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6465},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93447,"byte_end":93450,"line_start":718,"line_end":718,"column_start":5,"column_end":8},"name":"PH0","qualname":"::gpio::gpioh::PH0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6469},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93483,"byte_end":93486,"line_start":719,"line_end":719,"column_start":5,"column_end":8},"name":"PH1","qualname":"::gpio::gpioh::PH1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6473},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93519,"byte_end":93522,"line_start":720,"line_end":720,"column_start":5,"column_end":8},"name":"PH2","qualname":"::gpio::gpioh::PH2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6477},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93555,"byte_end":93558,"line_start":721,"line_end":721,"column_start":5,"column_end":8},"name":"PH3","qualname":"::gpio::gpioh::PH3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6481},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93591,"byte_end":93594,"line_start":722,"line_end":722,"column_start":5,"column_end":8},"name":"PH4","qualname":"::gpio::gpioh::PH4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6485},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93627,"byte_end":93630,"line_start":723,"line_end":723,"column_start":5,"column_end":8},"name":"PH5","qualname":"::gpio::gpioh::PH5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6489},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93663,"byte_end":93666,"line_start":724,"line_end":724,"column_start":5,"column_end":8},"name":"PH6","qualname":"::gpio::gpioh::PH6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6493},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93699,"byte_end":93702,"line_start":725,"line_end":725,"column_start":5,"column_end":8},"name":"PH7","qualname":"::gpio::gpioh::PH7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6497},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93735,"byte_end":93738,"line_start":726,"line_end":726,"column_start":5,"column_end":8},"name":"PH8","qualname":"::gpio::gpioh::PH8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6501},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93771,"byte_end":93774,"line_start":727,"line_end":727,"column_start":5,"column_end":8},"name":"PH9","qualname":"::gpio::gpioh::PH9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6505},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93807,"byte_end":93811,"line_start":728,"line_end":728,"column_start":5,"column_end":9},"name":"PH10","qualname":"::gpio::gpioh::PH10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6509},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93846,"byte_end":93850,"line_start":729,"line_end":729,"column_start":5,"column_end":9},"name":"PH11","qualname":"::gpio::gpioh::PH11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6513},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93885,"byte_end":93889,"line_start":730,"line_end":730,"column_start":5,"column_end":9},"name":"PH12","qualname":"::gpio::gpioh::PH12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6517},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93924,"byte_end":93928,"line_start":731,"line_end":731,"column_start":5,"column_end":9},"name":"PH13","qualname":"::gpio::gpioh::PH13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6521},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":93963,"byte_end":93967,"line_start":732,"line_end":732,"column_start":5,"column_end":9},"name":"PH14","qualname":"::gpio::gpioh::PH14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6525},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":94002,"byte_end":94006,"line_start":733,"line_end":733,"column_start":5,"column_end":9},"name":"PH15","qualname":"::gpio::gpioh::PH15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1288},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"i2c","qualname":"::i2c","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","parent":null,"children":[{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1296},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1387},{"krate":0,"index":6578},{"krate":0,"index":6583},{"krate":0,"index":6585},{"krate":0,"index":6586},{"krate":0,"index":6588},{"krate":0,"index":6589},{"krate":0,"index":6591},{"krate":0,"index":6597},{"krate":0,"index":6599},{"krate":0,"index":6600},{"krate":0,"index":1430},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1451},{"krate":0,"index":1459},{"krate":0,"index":6603},{"krate":0,"index":6617},{"krate":0,"index":6619},{"krate":0,"index":6620},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6626},{"krate":0,"index":6627},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1479},{"krate":0,"index":1484},{"krate":0,"index":1490}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4328,"byte_end":4363,"line_start":125,"line_end":125,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6579},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":161841,"byte_end":161850,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"Ratio2to1","qualname":"::i2c::DutyCycle::Ratio2to1","value":"DutyCycle::Ratio2to1","parent":{"krate":0,"index":6578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6581},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":161856,"byte_end":161866,"line_start":18,"line_end":18,"column_start":5,"column_end":15},"name":"Ratio16to9","qualname":"::i2c::DutyCycle::Ratio16to9","value":"DutyCycle::Ratio16to9","parent":{"krate":0,"index":6578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6578},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":161825,"byte_end":161834,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"DutyCycle","qualname":"::i2c::DutyCycle","value":"pub enum DutyCycle { Ratio2to1, Ratio16to9, }","parent":null,"children":[{"krate":0,"index":6579},{"krate":0,"index":6581}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6592},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":161919,"byte_end":161927,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Standard","qualname":"::i2c::Mode::Standard","value":"Mode::Standard { frequency }","parent":{"krate":0,"index":6591},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6594},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":161967,"byte_end":161971,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Fast","qualname":"::i2c::Mode::Fast","value":"Mode::Fast { frequency, duty_cycle }","parent":{"krate":0,"index":6591},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6591},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":161908,"byte_end":161912,"line_start":22,"line_end":22,"column_start":10,"column_end":14},"name":"Mode","qualname":"::i2c::Mode","value":"pub enum Mode {\n    Standard {\n        frequency: Hertz,\n    },\n    Fast {\n        frequency: Hertz,\n        duty_cycle: DutyCycle,\n    },\n}","parent":null,"children":[{"krate":0,"index":6592},{"krate":0,"index":6594}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162064,"byte_end":162072,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"standard","qualname":"<Mode>::standard","value":"pub fn standard(Hertz) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162156,"byte_end":162160,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"fast","qualname":"<Mode>::fast","value":"pub fn fast(Hertz, DutyCycle) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162308,"byte_end":162321,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"get_frequency","qualname":"<Mode>::get_frequency","value":"pub fn get_frequency(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162851,"byte_end":162854,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"I2c","qualname":"::i2c::I2c","value":"I2c {  }","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"decl_id":null,"docs":" I2C abstraction\n","sig":null,"attributes":[{"value":"/ I2C abstraction","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162820,"byte_end":162839,"line_start":66,"line_end":66,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1441},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162922,"byte_end":162925,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"Scl","qualname":"::i2c::Scl","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1444},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162968,"byte_end":162971,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"Sda","qualname":"::i2c::Sda","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1447},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163014,"byte_end":163018,"line_start":77,"line_end":77,"column_start":11,"column_end":15},"name":"Pins","qualname":"::i2c::Pins","value":"Pins<I2C>","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1450}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163033,"byte_end":163045,"line_start":78,"line_end":78,"column_start":8,"column_end":20},"name":"set_alt_mode","qualname":"::i2c::Pins::set_alt_mode","value":"pub fn set_alt_mode(&mut Self)","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163065,"byte_end":163077,"line_start":79,"line_end":79,"column_start":8,"column_end":20},"name":"restore_mode","qualname":"::i2c::Pins::restore_mode","value":"pub fn restore_mode(&mut Self)","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6604},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163668,"byte_end":163675,"line_start":102,"line_end":102,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::i2c::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":6603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6606},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163681,"byte_end":163694,"line_start":103,"line_end":103,"column_start":5,"column_end":18},"name":"NoAcknowledge","qualname":"::i2c::Error::NoAcknowledge","value":"Error::NoAcknowledge(NoAcknowledgeSource)","parent":{"krate":0,"index":6603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6609},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163721,"byte_end":163728,"line_start":104,"line_end":104,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::i2c::Error::Timeout","value":"Error::Timeout","parent":{"krate":0,"index":6603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6611},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163830,"byte_end":163833,"line_start":106,"line_end":106,"column_start":5,"column_end":8},"name":"Bus","qualname":"::i2c::Error::Bus","value":"Error::Bus","parent":{"krate":0,"index":6603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6613},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163839,"byte_end":163842,"line_start":107,"line_end":107,"column_start":5,"column_end":8},"name":"Crc","qualname":"::i2c::Error::Crc","value":"Error::Crc","parent":{"krate":0,"index":6603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6615},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163848,"byte_end":163863,"line_start":108,"line_end":108,"column_start":5,"column_end":20},"name":"ArbitrationLoss","qualname":"::i2c::Error::ArbitrationLoss","value":"Error::ArbitrationLoss","parent":{"krate":0,"index":6603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6603},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163656,"byte_end":163661,"line_start":101,"line_end":101,"column_start":10,"column_end":15},"name":"Error","qualname":"::i2c::Error","value":"pub enum Error {\n    Overrun,\n    NoAcknowledge(NoAcknowledgeSource),\n    Timeout,\n    Bus,\n    Crc,\n    ArbitrationLoss,\n}","parent":null,"children":[{"krate":0,"index":6604},{"krate":0,"index":6606},{"krate":0,"index":6609},{"krate":0,"index":6611},{"krate":0,"index":6613},{"krate":0,"index":6615}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163629,"byte_end":163646,"line_start":100,"line_end":100,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":1465},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164391,"byte_end":164399,"line_start":130,"line_end":130,"column_start":11,"column_end":19},"name":"Instance","qualname":"::i2c::Instance","value":"Instance: crate::Sealed + Deref<Target = i2c1::RegisterBlock> + Enable + Reset","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1467},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164514,"byte_end":164518,"line_start":133,"line_end":133,"column_start":10,"column_end":14},"name":"I2c1","qualname":"::i2c::I2c1","value":"I2c<pac::I2C1, PINS>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1470},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164589,"byte_end":164593,"line_start":135,"line_end":135,"column_start":10,"column_end":14},"name":"I2c2","qualname":"::i2c::I2c2","value":"I2c<pac::I2C2, PINS>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1473},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164715,"byte_end":164719,"line_start":140,"line_end":140,"column_start":10,"column_end":14},"name":"I2c3","qualname":"::i2c::I2c3","value":"I2c<pac::I2C3, PINS>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"i2c3\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164681,"byte_end":164705,"line_start":139,"line_end":139,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1475},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164761,"byte_end":164767,"line_start":142,"line_end":142,"column_start":11,"column_end":17},"name":"I2cExt","qualname":"::i2c::I2cExt","value":"I2cExt: Sized + Instance","parent":null,"children":[{"krate":0,"index":1476}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164795,"byte_end":164798,"line_start":143,"line_end":143,"column_start":8,"column_end":11},"name":"i2c","qualname":"::i2c::I2cExt::i2c","value":"pub fn i2c<PINS: Pins<Self>,\n           impl Into<Mode>: Into<Mode>>(Self, PINS, impl Into<Mode>, &Clocks)\n-> I2c<Self, PINS>","parent":{"krate":0,"index":1475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":165263,"byte_end":165266,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"new","qualname":"<I2c<I2C, PINS>>::new","value":"pub fn new<impl Into<Mode>: Into<Mode>>(I2C, PINS, impl Into<Mode>, &Clocks)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":165750,"byte_end":165757,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"release","qualname":"<I2c<I2C, PINS>>::release","value":"pub fn release(Self) -> (I2C, PINS)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":172232,"byte_end":172236,"line_start":383,"line_end":383,"column_start":12,"column_end":16},"name":"read","qualname":"<I2c<I2C, PINS>>::read","value":"pub fn read(&mut Self, u8, &mut [u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":174048,"byte_end":174053,"line_start":439,"line_end":439,"column_start":12,"column_end":17},"name":"write","qualname":"<I2c<I2C, PINS>>::write","value":"pub fn write(&mut Self, u8, &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":174432,"byte_end":174442,"line_start":452,"line_end":452,"column_start":12,"column_end":22},"name":"write_iter","qualname":"<I2c<I2C, PINS>>::write_iter","value":"pub fn write_iter<B>(&mut Self, u8, B) -> Result<(), Error> where\nB: IntoIterator<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":174866,"byte_end":174876,"line_start":468,"line_end":468,"column_start":12,"column_end":22},"name":"write_read","qualname":"<I2c<I2C, PINS>>::write_read","value":"pub fn write_read(&mut Self, u8, &[u8], &mut [u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":175060,"byte_end":175075,"line_start":473,"line_end":473,"column_start":12,"column_end":27},"name":"write_iter_read","qualname":"<I2c<I2C, PINS>>::write_iter_read","value":"pub fn write_iter_read<B>(&mut Self, u8, B, &mut [u8]) -> Result<(), Error>\nwhere B: IntoIterator<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1528},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"i2s","qualname":"::i2s","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":1562},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1576},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1599},{"krate":0,"index":6629},{"krate":0,"index":6631},{"krate":0,"index":6632},{"krate":0,"index":6634},{"krate":0,"index":6636},{"krate":0,"index":6637},{"krate":0,"index":6639},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6644},{"krate":0,"index":6646},{"krate":0,"index":6647},{"krate":0,"index":6649},{"krate":0,"index":6651},{"krate":0,"index":6652},{"krate":0,"index":1604},{"krate":0,"index":1610}],"decl_id":null,"docs":" I2S (inter-IC Sound) communication using SPI peripherals","sig":null,"attributes":[{"value":"cfg(all(feature = \"device-selected\"))","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4377,"byte_end":4417,"line_start":127,"line_end":127,"column_start":1,"column_end":41}},{"value":"/ I2S (inter-IC Sound) communication using SPI peripherals","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179165,"byte_end":179225,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179226,"byte_end":179229,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available if the `i2s` feature is enabled.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179230,"byte_end":179296,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1565},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179831,"byte_end":179833,"line_start":23,"line_end":23,"column_start":10,"column_end":12},"name":"Sd","qualname":"::i2s::Sd","value":"spi::Mosi","parent":null,"children":[],"decl_id":null,"docs":" A pin that can be used as SD (serial data)","sig":null,"attributes":[{"value":"/ A pin that can be used as SD (serial data)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179730,"byte_end":179776,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179777,"byte_end":179780,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Each MOSI pin can also be used as SD","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179781,"byte_end":179821,"line_start":22,"line_end":22,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1566},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179922,"byte_end":179924,"line_start":26,"line_end":26,"column_start":10,"column_end":12},"name":"Ws","qualname":"::i2s::Ws","value":"spi::Nss","parent":null,"children":[],"decl_id":null,"docs":" A pin that can be used as WS (word select, left/right clock)\n","sig":null,"attributes":[{"value":"/ A pin that can be used as WS (word select, left/right clock)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179848,"byte_end":179912,"line_start":25,"line_end":25,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":1567},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180036,"byte_end":180038,"line_start":31,"line_end":31,"column_start":10,"column_end":12},"name":"Ck","qualname":"::i2s::Ck","value":"spi::Sck","parent":null,"children":[],"decl_id":null,"docs":" A pin that can be used as CK (bit clock)","sig":null,"attributes":[{"value":"/ A pin that can be used as CK (bit clock)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179938,"byte_end":179982,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179983,"byte_end":179986,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Each SCK pin can also be used as CK","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":179987,"byte_end":180026,"line_start":30,"line_end":30,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1568},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180119,"byte_end":180122,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"Mck","qualname":"::i2s::Mck","value":"","parent":null,"children":[],"decl_id":null,"docs":" A pin that can be used as MCK (master clock output)\n","sig":null,"attributes":[{"value":"/ A pin that can be used as MCK (master clock output)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180052,"byte_end":180107,"line_start":33,"line_end":33,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1571},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180218,"byte_end":180231,"line_start":38,"line_end":38,"column_start":10,"column_end":23},"name":"NoMasterClock","qualname":"::i2s::NoMasterClock","value":"NoPin","parent":null,"children":[],"decl_id":null,"docs":" A placeholder for when the MCLK pin is not needed\n","sig":null,"attributes":[{"value":"/ A placeholder for when the MCLK pin is not needed","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180155,"byte_end":180208,"line_start":37,"line_end":37,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1572},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180390,"byte_end":180394,"line_start":43,"line_end":43,"column_start":11,"column_end":15},"name":"Pins","qualname":"::i2s::Pins","value":"Pins<SPI>","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575}],"decl_id":null,"docs":" A set of pins configured for I2S communication: (WS, CK, MCLK, SD)","sig":null,"attributes":[{"value":"/ A set of pins configured for I2S communication: (WS, CK, MCLK, SD)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180242,"byte_end":180312,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180313,"byte_end":180316,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ NoMasterClock can be used instead of the master clock pin.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180317,"byte_end":180379,"line_start":42,"line_end":42,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180409,"byte_end":180421,"line_start":44,"line_end":44,"column_start":8,"column_end":20},"name":"set_alt_mode","qualname":"::i2s::Pins::set_alt_mode","value":"pub fn set_alt_mode(&mut Self)","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180441,"byte_end":180453,"line_start":45,"line_end":45,"column_start":8,"column_end":20},"name":"restore_mode","qualname":"::i2s::Pins::restore_mode","value":"pub fn restore_mode(&mut Self)","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1588},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":181226,"byte_end":181234,"line_start":70,"line_end":70,"column_start":11,"column_end":19},"name":"Instance","qualname":"::i2s::Instance","value":"Instance: I2sFreq + rcc::Enable + rcc::Reset","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1589},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":181285,"byte_end":181292,"line_start":72,"line_end":72,"column_start":11,"column_end":18},"name":"I2sFreq","qualname":"::i2s::I2sFreq","value":"I2sFreq","parent":null,"children":[{"krate":0,"index":1590}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":181302,"byte_end":181310,"line_start":73,"line_end":73,"column_start":8,"column_end":16},"name":"i2s_freq","qualname":"::i2s::I2sFreq::i2s_freq","value":"pub fn i2s_freq(&Clocks) -> Hertz","parent":{"krate":0,"index":1589},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1592},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182472,"byte_end":182478,"line_start":105,"line_end":105,"column_start":11,"column_end":17},"name":"I2sExt","qualname":"::i2s::I2sExt","value":"I2sExt: Sized + Instance","parent":null,"children":[{"krate":0,"index":1593}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182506,"byte_end":182509,"line_start":106,"line_end":106,"column_start":8,"column_end":11},"name":"i2s","qualname":"::i2s::I2sExt::i2s","value":"pub fn i2s<PINS: Pins<Self>>(Self, PINS, &Clocks) -> I2s<Self, PINS>","parent":{"krate":0,"index":1592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":183296,"byte_end":183299,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"new","qualname":"<I2s<SPI, PINS>>::new","value":"pub fn new(SPI, PINS, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an I2s object around an SPI peripheral and pins","sig":null,"attributes":[{"value":"/ Creates an I2s object around an SPI peripheral and pins","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182837,"byte_end":182896,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182901,"byte_end":182904,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This function enables and resets the SPI peripheral, but does not configure it.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182909,"byte_end":182992,"line_start":122,"line_end":122,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182997,"byte_end":183000,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The returned I2s object implements [stm32_i2s_v12x::Instance], so it can be used","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":183005,"byte_end":183089,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/ to configure the peripheral and communicate.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":183094,"byte_end":183142,"line_start":125,"line_end":125,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":183147,"byte_end":183150,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":183155,"byte_end":183167,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":183172,"byte_end":183175,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function panics if the I2S clock input (from the I2S PLL or similar)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":183180,"byte_end":183257,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ is not configured.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":183262,"byte_end":183284,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":183816,"byte_end":183823,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"release","qualname":"<I2s<SPI, PINS>>::release","value":"pub fn release(Self) -> (SPI, PINS)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6629},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":184218,"byte_end":184222,"line_start":162,"line_end":162,"column_start":17,"column_end":21},"name":"I2s1","qualname":"::i2s::I2s1","value":"I2s<pac::SPI1, PINS>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6634},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":184579,"byte_end":184583,"line_start":178,"line_end":178,"column_start":17,"column_end":21},"name":"I2s2","qualname":"::i2s::I2s2","value":"I2s<pac::SPI2, PINS>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6639},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":185168,"byte_end":185172,"line_start":202,"line_end":202,"column_start":17,"column_end":21},"name":"I2s3","qualname":"::i2s::I2s3","value":"I2s<pac::SPI3, PINS>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6644},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":185391,"byte_end":185395,"line_start":212,"line_end":212,"column_start":17,"column_end":21},"name":"I2s4","qualname":"::i2s::I2s4","value":"I2s<pac::SPI4, PINS>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6649},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":185600,"byte_end":185604,"line_start":217,"line_end":217,"column_start":17,"column_end":21},"name":"I2s5","qualname":"::i2s::I2s5","value":"I2s<pac::SPI5, PINS>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1604},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":185795,"byte_end":185798,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"I2s","qualname":"::i2s::I2s","value":"I2s {  }","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609}],"decl_id":null,"docs":" An I2s wrapper around an SPI object and pins\n","sig":null,"attributes":[{"value":"/ An I2s wrapper around an SPI object and pins","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":185735,"byte_end":185783,"line_start":221,"line_end":221,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":186122,"byte_end":186133,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"input_clock","qualname":"<I2s<I, PINS>>::input_clock","value":"pub fn input_clock(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the clock signal that the SPI peripheral is receiving from the\n I2S PLL or similar source\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the clock signal that the SPI peripheral is receiving from the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":185985,"byte_end":186076,"line_start":230,"line_end":230,"column_start":5,"column_end":96}},{"value":"/ I2S PLL or similar source","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":186081,"byte_end":186110,"line_start":231,"line_end":231,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":1614},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"otg_fs","qualname":"::otg_fs","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1635},{"krate":0,"index":1638},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1665}],"decl_id":null,"docs":" USB OTG full-speed peripheral","sig":null,"attributes":[{"value":"cfg(all(feature = \"device-selected\", feature = \"usb_fs\", feature =\n          \"otg-fs\"))","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4431,"byte_end":4511,"line_start":129,"line_end":129,"column_start":1,"column_end":81}},{"value":"/ USB OTG full-speed peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187299,"byte_end":187332,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187333,"byte_end":187336,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Requires the `usb_fs` feature.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187337,"byte_end":187371,"line_start":3,"line_end":3,"column_start":1,"column_end":35}},{"value":"/ Only one of the `usb_fs`/`usb_hs` features can be selected at the same time.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187372,"byte_end":187452,"line_start":4,"line_end":4,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1647},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187670,"byte_end":187673,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"USB","qualname":"::otg_fs::USB","value":"USB { usb_global, usb_device, usb_pwrclk, pin_dm, pin_dp, hclk }","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1655}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1648},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187684,"byte_end":187694,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"usb_global","qualname":"::otg_fs::USB::usb_global","value":"stm32f4::stm32f411::OTG_FS_GLOBAL","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1649},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187724,"byte_end":187734,"line_start":17,"line_end":17,"column_start":9,"column_end":19},"name":"usb_device","qualname":"::otg_fs::USB::usb_device","value":"stm32f4::stm32f411::OTG_FS_DEVICE","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1650},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187764,"byte_end":187774,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"name":"usb_pwrclk","qualname":"::otg_fs::USB::usb_pwrclk","value":"stm32f4::stm32f411::OTG_FS_PWRCLK","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1651},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187804,"byte_end":187810,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"pin_dm","qualname":"::otg_fs::USB::pin_dm","value":"gpio::Pin<gpio::Alternate<gpio::PushPull, 10_u8>, 'A', 11_u8>","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1653},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187851,"byte_end":187857,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"name":"pin_dp","qualname":"::otg_fs::USB::pin_dp","value":"gpio::Pin<gpio::Alternate<gpio::PushPull, 10_u8>, 'A', 12_u8>","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1655},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187898,"byte_end":187902,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"hclk","qualname":"::otg_fs::USB::hclk","value":"fugit::Rate<u32, 1_u32, 1_u32>","parent":{"krate":0,"index":1647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1665},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":189082,"byte_end":189092,"line_start":70,"line_end":70,"column_start":10,"column_end":20},"name":"UsbBusType","qualname":"::otg_fs::UsbBusType","value":"UsbBus<USB>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1666},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dma","qualname":"::dma","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","parent":null,"children":[{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1704},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":7169},{"krate":0,"index":7180},{"krate":0,"index":7182},{"krate":0,"index":1854},{"krate":0,"index":7186},{"krate":0,"index":7193},{"krate":0,"index":7195},{"krate":0,"index":7197},{"krate":0,"index":7198},{"krate":0,"index":7199},{"krate":0,"index":7201},{"krate":0,"index":7203},{"krate":0,"index":7205},{"krate":0,"index":7207},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":7208},{"krate":0,"index":7211},{"krate":0,"index":7214},{"krate":0,"index":7217},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":7219},{"krate":0,"index":7221},{"krate":0,"index":7223},{"krate":0,"index":7225},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1874},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":7226},{"krate":0,"index":7241},{"krate":0,"index":7243},{"krate":0,"index":7245},{"krate":0,"index":1883},{"krate":0,"index":7246},{"krate":0,"index":7251},{"krate":0,"index":7253},{"krate":0,"index":7255},{"krate":0,"index":7256},{"krate":0,"index":7257},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1892},{"krate":0,"index":1896},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1924},{"krate":0,"index":1927},{"krate":0,"index":1930},{"krate":0,"index":1933},{"krate":0,"index":1936},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":2031},{"krate":0,"index":7259},{"krate":0,"index":7279},{"krate":0,"index":7299},{"krate":0,"index":7319},{"krate":0,"index":7339},{"krate":0,"index":7359},{"krate":0,"index":7379},{"krate":0,"index":7399},{"krate":0,"index":7419},{"krate":0,"index":7422},{"krate":0,"index":7426},{"krate":0,"index":7431},{"krate":0,"index":2032},{"krate":0,"index":7434},{"krate":0,"index":7436},{"krate":0,"index":7438},{"krate":0,"index":7440},{"krate":0,"index":7442},{"krate":0,"index":7444},{"krate":0,"index":7446},{"krate":0,"index":7448},{"krate":0,"index":7450},{"krate":0,"index":7452},{"krate":0,"index":7454},{"krate":0,"index":7456},{"krate":0,"index":7458},{"krate":0,"index":7460},{"krate":0,"index":7462},{"krate":0,"index":7464},{"krate":0,"index":2033},{"krate":0,"index":2059},{"krate":0,"index":2071},{"krate":0,"index":2082},{"krate":0,"index":2088},{"krate":0,"index":2099},{"krate":0,"index":2110},{"krate":0,"index":2132}],"decl_id":null,"docs":" Direct Memory Access.","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4726,"byte_end":4761,"line_start":141,"line_end":141,"column_start":1,"column_end":36}},{"value":"/ Direct Memory Access.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189109,"byte_end":189134,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189135,"byte_end":189138,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [Transfer::init](struct.Transfer.html#method.init) is only implemented for valid combinations of","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189139,"byte_end":189239,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"/ peripheral-stream-channel-direction, providing compile time checking.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189240,"byte_end":189313,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189314,"byte_end":189317,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module implements Memory To Memory, Peripheral To Memory and Memory to Peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189318,"byte_end":189408,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ transfers, double buffering is supported only for Peripheral To Memory and Memory to Peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189409,"byte_end":189508,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ transfers.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189509,"byte_end":189523,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":1714},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::dma::traits","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1727},{"krate":0,"index":1730},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1748},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1764},{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1813},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":6654},{"krate":0,"index":6658},{"krate":0,"index":6662},{"krate":0,"index":6666},{"krate":0,"index":6670},{"krate":0,"index":6674},{"krate":0,"index":6678},{"krate":0,"index":6682},{"krate":0,"index":6686},{"krate":0,"index":6690},{"krate":0,"index":6694},{"krate":0,"index":6698},{"krate":0,"index":1821},{"krate":0,"index":6702},{"krate":0,"index":6704},{"krate":0,"index":6706},{"krate":0,"index":6708},{"krate":0,"index":6710},{"krate":0,"index":6712},{"krate":0,"index":6714},{"krate":0,"index":6716},{"krate":0,"index":6718},{"krate":0,"index":6720},{"krate":0,"index":6722},{"krate":0,"index":6724},{"krate":0,"index":6726},{"krate":0,"index":6728},{"krate":0,"index":6730},{"krate":0,"index":6732},{"krate":0,"index":6734},{"krate":0,"index":6736},{"krate":0,"index":6738},{"krate":0,"index":6740},{"krate":0,"index":6742},{"krate":0,"index":6744},{"krate":0,"index":6746},{"krate":0,"index":6748},{"krate":0,"index":6750},{"krate":0,"index":6752},{"krate":0,"index":6754},{"krate":0,"index":6756},{"krate":0,"index":6758},{"krate":0,"index":6760},{"krate":0,"index":6762},{"krate":0,"index":6764},{"krate":0,"index":6766},{"krate":0,"index":6768},{"krate":0,"index":6770},{"krate":0,"index":6772},{"krate":0,"index":6775},{"krate":0,"index":6778},{"krate":0,"index":6781},{"krate":0,"index":6784},{"krate":0,"index":6787},{"krate":0,"index":6790},{"krate":0,"index":6793},{"krate":0,"index":6796},{"krate":0,"index":6799},{"krate":0,"index":6802},{"krate":0,"index":6805},{"krate":0,"index":6808},{"krate":0,"index":6811},{"krate":0,"index":6814},{"krate":0,"index":6816},{"krate":0,"index":6818},{"krate":0,"index":6820},{"krate":0,"index":6822},{"krate":0,"index":6825},{"krate":0,"index":6827},{"krate":0,"index":6829},{"krate":0,"index":6831},{"krate":0,"index":6833},{"krate":0,"index":6835},{"krate":0,"index":6837},{"krate":0,"index":6839},{"krate":0,"index":6841},{"krate":0,"index":6843},{"krate":0,"index":6845},{"krate":0,"index":6847},{"krate":0,"index":6849},{"krate":0,"index":6851},{"krate":0,"index":6853},{"krate":0,"index":6855},{"krate":0,"index":6857},{"krate":0,"index":6859},{"krate":0,"index":6861},{"krate":0,"index":6863},{"krate":0,"index":6865},{"krate":0,"index":6867},{"krate":0,"index":6869},{"krate":0,"index":6871},{"krate":0,"index":6873},{"krate":0,"index":6875},{"krate":0,"index":6877},{"krate":0,"index":6879},{"krate":0,"index":6881},{"krate":0,"index":6883},{"krate":0,"index":6885},{"krate":0,"index":6887},{"krate":0,"index":6889},{"krate":0,"index":6891},{"krate":0,"index":6893},{"krate":0,"index":6895},{"krate":0,"index":6897},{"krate":0,"index":6899},{"krate":0,"index":6901},{"krate":0,"index":6903},{"krate":0,"index":6905},{"krate":0,"index":6907},{"krate":0,"index":6909},{"krate":0,"index":6911},{"krate":0,"index":6913},{"krate":0,"index":6915},{"krate":0,"index":6917},{"krate":0,"index":6919},{"krate":0,"index":6921},{"krate":0,"index":6923},{"krate":0,"index":6925},{"krate":0,"index":6927},{"krate":0,"index":6929},{"krate":0,"index":6931},{"krate":0,"index":6933},{"krate":0,"index":6935},{"krate":0,"index":6937},{"krate":0,"index":6939},{"krate":0,"index":6941},{"krate":0,"index":6943},{"krate":0,"index":6945},{"krate":0,"index":6947},{"krate":0,"index":6949},{"krate":0,"index":6951},{"krate":0,"index":6953},{"krate":0,"index":6955},{"krate":0,"index":6957},{"krate":0,"index":6959},{"krate":0,"index":6961},{"krate":0,"index":6963},{"krate":0,"index":6965},{"krate":0,"index":6967},{"krate":0,"index":6969},{"krate":0,"index":6971},{"krate":0,"index":6973},{"krate":0,"index":6975},{"krate":0,"index":6977},{"krate":0,"index":6979},{"krate":0,"index":6981},{"krate":0,"index":6983},{"krate":0,"index":6985},{"krate":0,"index":6987},{"krate":0,"index":6989},{"krate":0,"index":6991},{"krate":0,"index":6993},{"krate":0,"index":6995},{"krate":0,"index":6997},{"krate":0,"index":6999},{"krate":0,"index":7001},{"krate":0,"index":7003},{"krate":0,"index":7005},{"krate":0,"index":7007},{"krate":0,"index":7009},{"krate":0,"index":7011},{"krate":0,"index":7013},{"krate":0,"index":7015},{"krate":0,"index":7017},{"krate":0,"index":7019},{"krate":0,"index":7021},{"krate":0,"index":7024},{"krate":0,"index":7027},{"krate":0,"index":7030},{"krate":0,"index":7033},{"krate":0,"index":7036},{"krate":0,"index":7039},{"krate":0,"index":7042},{"krate":0,"index":7045},{"krate":0,"index":7048},{"krate":0,"index":7051},{"krate":0,"index":7054},{"krate":0,"index":7057},{"krate":0,"index":7060},{"krate":0,"index":7063},{"krate":0,"index":7066},{"krate":0,"index":7069},{"krate":0,"index":7072},{"krate":0,"index":7075},{"krate":0,"index":7077},{"krate":0,"index":7079},{"krate":0,"index":7081},{"krate":0,"index":7083},{"krate":0,"index":7085},{"krate":0,"index":7087},{"krate":0,"index":7089},{"krate":0,"index":7091},{"krate":0,"index":7093},{"krate":0,"index":7095},{"krate":0,"index":7098},{"krate":0,"index":7101},{"krate":0,"index":7103},{"krate":0,"index":7105},{"krate":0,"index":7107},{"krate":0,"index":7109},{"krate":0,"index":7111},{"krate":0,"index":7113},{"krate":0,"index":7115},{"krate":0,"index":7117},{"krate":0,"index":7119},{"krate":0,"index":7122},{"krate":0,"index":7124},{"krate":0,"index":7126},{"krate":0,"index":7128},{"krate":0,"index":7130},{"krate":0,"index":7132},{"krate":0,"index":7134},{"krate":0,"index":7136},{"krate":0,"index":7138},{"krate":0,"index":7140},{"krate":0,"index":7142},{"krate":0,"index":7144},{"krate":0,"index":7146},{"krate":0,"index":7148},{"krate":0,"index":7150},{"krate":0,"index":7152},{"krate":0,"index":7154},{"krate":0,"index":7156},{"krate":0,"index":7158},{"krate":0,"index":7160},{"krate":0,"index":7162},{"krate":0,"index":7165},{"krate":0,"index":7167}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1740},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":245984,"byte_end":245988,"line_start":11,"line_end":11,"column_start":15,"column_end":19},"name":"Bits","qualname":"::dma::traits::sealed::Bits","value":"Bits<T>","parent":null,"children":[{"krate":0,"index":1742}],"decl_id":null,"docs":" Converts value to bits for setting a register value.\n","sig":null,"attributes":[{"value":"/ Converts value to bits for setting a register value.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":245913,"byte_end":245969,"line_start":10,"line_end":10,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246040,"byte_end":246044,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"bits","qualname":"::dma::traits::sealed::Bits::bits","value":"pub fn bits(Self) -> T","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Returns the bit value.\n","sig":null,"attributes":[{"value":"/ Returns the bit value.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246002,"byte_end":246028,"line_start":12,"line_end":12,"column_start":9,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":1743},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246077,"byte_end":246083,"line_start":15,"line_end":15,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::dma::traits::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1751},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246208,"byte_end":246226,"line_start":20,"line_end":20,"column_start":11,"column_end":29},"name":"SafePeripheralRead","qualname":"::dma::traits::SafePeripheralRead","value":"SafePeripheralRead","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for structs which can be safely accessed with shared reference\n","sig":null,"attributes":[{"value":"/ Marker trait for structs which can be safely accessed with shared reference","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246118,"byte_end":246197,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":1752},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246286,"byte_end":246295,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"name":"StreamISR","qualname":"::dma::traits::StreamISR","value":"StreamISR: Sealed","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763}],"decl_id":null,"docs":" Trait for DMA stream interrupt handling.\n","sig":null,"attributes":[{"value":"/ Trait for DMA stream interrupt handling.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246231,"byte_end":246275,"line_start":22,"line_end":22,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246362,"byte_end":246378,"line_start":25,"line_end":25,"column_start":8,"column_end":24},"name":"clear_interrupts","qualname":"::dma::traits::StreamISR::clear_interrupts","value":"pub fn clear_interrupts(&mut Self)","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Clear all interrupts for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear all interrupts for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246310,"byte_end":246354,"line_start":24,"line_end":24,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246468,"byte_end":246501,"line_start":28,"line_end":28,"column_start":8,"column_end":41},"name":"clear_transfer_complete_interrupt","qualname":"::dma::traits::StreamISR::clear_transfer_complete_interrupt","value":"pub fn clear_transfer_complete_interrupt(&mut Self)","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Clear transfer complete interrupt (tcif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear transfer complete interrupt (tcif) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246396,"byte_end":246460,"line_start":27,"line_end":27,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246587,"byte_end":246616,"line_start":31,"line_end":31,"column_start":8,"column_end":37},"name":"clear_half_transfer_interrupt","qualname":"::dma::traits::StreamISR::clear_half_transfer_interrupt","value":"pub fn clear_half_transfer_interrupt(&mut Self)","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Clear half transfer interrupt (htif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear half transfer interrupt (htif) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246519,"byte_end":246579,"line_start":30,"line_end":30,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246703,"byte_end":246733,"line_start":34,"line_end":34,"column_start":8,"column_end":38},"name":"clear_transfer_error_interrupt","qualname":"::dma::traits::StreamISR::clear_transfer_error_interrupt","value":"pub fn clear_transfer_error_interrupt(&mut Self)","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Clear transfer error interrupt (teif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear transfer error interrupt (teif) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246634,"byte_end":246695,"line_start":33,"line_end":33,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246824,"byte_end":246857,"line_start":37,"line_end":37,"column_start":8,"column_end":41},"name":"clear_direct_mode_error_interrupt","qualname":"::dma::traits::StreamISR::clear_direct_mode_error_interrupt","value":"pub fn clear_direct_mode_error_interrupt(&mut Self)","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Clear direct mode error interrupt (dmeif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear direct mode error interrupt (dmeif) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246751,"byte_end":246816,"line_start":36,"line_end":36,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246940,"byte_end":246966,"line_start":40,"line_end":40,"column_start":8,"column_end":34},"name":"clear_fifo_error_interrupt","qualname":"::dma::traits::StreamISR::clear_fifo_error_interrupt","value":"pub fn clear_fifo_error_interrupt(&mut Self)","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Clear fifo error interrupt (feif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear fifo error interrupt (feif) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246875,"byte_end":246932,"line_start":39,"line_end":39,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247023,"byte_end":247049,"line_start":43,"line_end":43,"column_start":8,"column_end":34},"name":"get_transfer_complete_flag","qualname":"::dma::traits::StreamISR::get_transfer_complete_flag","value":"pub fn get_transfer_complete_flag() -> bool","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Get transfer complete flag.\n","sig":null,"attributes":[{"value":"/ Get transfer complete flag.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246984,"byte_end":247015,"line_start":42,"line_end":42,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247101,"byte_end":247123,"line_start":46,"line_end":46,"column_start":8,"column_end":30},"name":"get_half_transfer_flag","qualname":"::dma::traits::StreamISR::get_half_transfer_flag","value":"pub fn get_half_transfer_flag() -> bool","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Get half transfer flag.\n","sig":null,"attributes":[{"value":"/ Get half transfer flag.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247066,"byte_end":247093,"line_start":45,"line_end":45,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247175,"byte_end":247198,"line_start":49,"line_end":49,"column_start":8,"column_end":31},"name":"get_transfer_error_flag","qualname":"::dma::traits::StreamISR::get_transfer_error_flag","value":"pub fn get_transfer_error_flag() -> bool","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Get transfer error flag\n","sig":null,"attributes":[{"value":"/ Get transfer error flag","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247140,"byte_end":247167,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247246,"byte_end":247265,"line_start":52,"line_end":52,"column_start":8,"column_end":27},"name":"get_fifo_error_flag","qualname":"::dma::traits::StreamISR::get_fifo_error_flag","value":"pub fn get_fifo_error_flag() -> bool","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Get fifo error flag\n","sig":null,"attributes":[{"value":"/ Get fifo error flag","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247215,"byte_end":247238,"line_start":51,"line_end":51,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247320,"byte_end":247346,"line_start":55,"line_end":55,"column_start":8,"column_end":34},"name":"get_direct_mode_error_flag","qualname":"::dma::traits::StreamISR::get_direct_mode_error_flag","value":"pub fn get_direct_mode_error_flag() -> bool","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Get direct mode error flag\n","sig":null,"attributes":[{"value":"/ Get direct mode error flag","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247282,"byte_end":247312,"line_start":54,"line_end":54,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":1764},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247404,"byte_end":247410,"line_start":59,"line_end":59,"column_start":11,"column_end":17},"name":"Stream","qualname":"::dma::traits::Stream","value":"Stream: StreamISR + Sealed","parent":null,"children":[{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798}],"decl_id":null,"docs":" Trait for DMA streams types.\n","sig":null,"attributes":[{"value":"/ Trait for DMA streams types.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247361,"byte_end":247393,"line_start":58,"line_end":58,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":1765},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247482,"byte_end":247488,"line_start":61,"line_end":61,"column_start":11,"column_end":17},"name":"NUMBER","qualname":"::dma::traits::Stream::NUMBER","value":"usize","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Number of the register stream.\n","sig":null,"attributes":[{"value":"/ Number of the register stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247437,"byte_end":247471,"line_start":60,"line_end":60,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247565,"byte_end":247587,"line_start":63,"line_end":63,"column_start":8,"column_end":30},"name":"set_peripheral_address","qualname":"::dma::traits::Stream::set_peripheral_address","value":"pub fn set_peripheral_address(&mut Self, u32)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set the peripheral address (par) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the peripheral address (par) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247501,"byte_end":247557,"line_start":62,"line_end":62,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247678,"byte_end":247696,"line_start":66,"line_end":66,"column_start":8,"column_end":26},"name":"set_memory_address","qualname":"::dma::traits::Stream::set_memory_address","value":"pub fn set_memory_address(&mut Self, u32)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set the memory address (m0ar) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the memory address (m0ar) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247617,"byte_end":247670,"line_start":65,"line_end":65,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247787,"byte_end":247805,"line_start":69,"line_end":69,"column_start":8,"column_end":26},"name":"get_memory_address","qualname":"::dma::traits::Stream::get_memory_address","value":"pub fn get_memory_address(&Self) -> u32","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Get the memory address (m0ar) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Get the memory address (m0ar) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247726,"byte_end":247779,"line_start":68,"line_end":68,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247894,"byte_end":247926,"line_start":72,"line_end":72,"column_start":8,"column_end":40},"name":"set_memory_double_buffer_address","qualname":"::dma::traits::Stream::set_memory_double_buffer_address","value":"pub fn set_memory_double_buffer_address(&mut Self, u32)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set the double buffer address (m1ar) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the double buffer address (m1ar) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247826,"byte_end":247886,"line_start":71,"line_end":71,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248024,"byte_end":248056,"line_start":75,"line_end":75,"column_start":8,"column_end":40},"name":"get_memory_double_buffer_address","qualname":"::dma::traits::Stream::get_memory_double_buffer_address","value":"pub fn get_memory_double_buffer_address(&Self) -> u32","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Get the double buffer address (m1ar) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Get the double buffer address (m1ar) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247956,"byte_end":248016,"line_start":74,"line_end":74,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248142,"byte_end":248165,"line_start":78,"line_end":78,"column_start":8,"column_end":31},"name":"set_number_of_transfers","qualname":"::dma::traits::Stream::set_number_of_transfers","value":"pub fn set_number_of_transfers(&mut Self, u16)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set the number of transfers (ndt) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the number of transfers (ndt) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248077,"byte_end":248134,"line_start":77,"line_end":77,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248260,"byte_end":248283,"line_start":81,"line_end":81,"column_start":8,"column_end":31},"name":"get_number_of_transfers","qualname":"::dma::traits::Stream::get_number_of_transfers","value":"pub fn get_number_of_transfers() -> u16","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Get the number of transfers (ndt) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Get the number of transfers (ndt) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248195,"byte_end":248252,"line_start":80,"line_end":80,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248446,"byte_end":248452,"line_start":88,"line_end":88,"column_start":15,"column_end":21},"name":"enable","qualname":"::dma::traits::Stream::enable","value":"pub unsafe fn enable(&mut Self)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Enable the DMA stream.","sig":null,"attributes":[{"value":"/ Enable the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248299,"byte_end":248325,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248330,"byte_end":248333,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248338,"byte_end":248350,"line_start":85,"line_end":85,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248355,"byte_end":248358,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The user must ensure that all registers are properly configured.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248363,"byte_end":248431,"line_start":87,"line_end":87,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248518,"byte_end":248528,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"is_enabled","qualname":"::dma::traits::Stream::is_enabled","value":"pub fn is_enabled() -> bool","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Returns the state of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Returns the state of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248470,"byte_end":248510,"line_start":90,"line_end":90,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248872,"byte_end":248879,"line_start":98,"line_end":98,"column_start":8,"column_end":15},"name":"disable","qualname":"::dma::traits::Stream::disable","value":"pub fn disable(&mut Self)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Disable the DMA stream.","sig":null,"attributes":[{"value":"/ Disable the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248545,"byte_end":248572,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248577,"byte_end":248580,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Disabling the stream during an on-going transfer needs to be performed in a certain way to","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248585,"byte_end":248679,"line_start":95,"line_end":95,"column_start":5,"column_end":99}},{"value":"/ prevent problems if the stream is to be re-enabled shortly after, because of that, this","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248684,"byte_end":248775,"line_start":96,"line_end":96,"column_start":5,"column_end":96}},{"value":"/ method will also clear all the stream's interrupt flags if the stream is active.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248780,"byte_end":248864,"line_start":97,"line_end":97,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248956,"byte_end":248967,"line_start":101,"line_end":101,"column_start":8,"column_end":19},"name":"set_channel","qualname":"::dma::traits::Stream::set_channel","value":"pub fn set_channel<const C: u8>(&mut Self) where ChannelX<>: Channel","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set the channel for the (chsel) the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the channel for the (chsel) the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":248897,"byte_end":248948,"line_start":100,"line_end":100,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249086,"byte_end":249098,"line_start":106,"line_end":106,"column_start":8,"column_end":20},"name":"set_priority","qualname":"::dma::traits::Stream::set_priority","value":"pub fn set_priority(&mut Self, config::Priority)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set the priority (pl) the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the priority (pl) the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249037,"byte_end":249078,"line_start":105,"line_end":105,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249412,"byte_end":249427,"line_start":116,"line_end":116,"column_start":15,"column_end":30},"name":"set_memory_size","qualname":"::dma::traits::Stream::set_memory_size","value":"pub unsafe fn set_memory_size(&mut Self, u8)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set the memory size (msize) for the DMA stream.","sig":null,"attributes":[{"value":"/ Set the memory size (msize) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249144,"byte_end":249195,"line_start":108,"line_end":108,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249200,"byte_end":249203,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249208,"byte_end":249220,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/ This must have the same alignment of the buffer used in the transfer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249225,"byte_end":249298,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ Valid values:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249303,"byte_end":249320,"line_start":112,"line_end":112,"column_start":5,"column_end":22}},{"value":"/     * 0 -> byte","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249325,"byte_end":249344,"line_start":113,"line_end":113,"column_start":5,"column_end":24}},{"value":"/     * 1 -> half word","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249349,"byte_end":249373,"line_start":114,"line_end":114,"column_start":5,"column_end":29}},{"value":"/     * 2 -> word","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249378,"byte_end":249397,"line_start":115,"line_end":115,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249743,"byte_end":249762,"line_start":126,"line_end":126,"column_start":15,"column_end":34},"name":"set_peripheral_size","qualname":"::dma::traits::Stream::set_peripheral_size","value":"pub unsafe fn set_peripheral_size(&mut Self, u8)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set the peripheral memory size (psize) for the DMA stream.","sig":null,"attributes":[{"value":"/ Set the peripheral memory size (psize) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249455,"byte_end":249517,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249522,"byte_end":249525,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249530,"byte_end":249542,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/ This must have the same alignment of the peripheral data used in the transfer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249547,"byte_end":249629,"line_start":121,"line_end":121,"column_start":5,"column_end":87}},{"value":"/ Valid values:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249634,"byte_end":249651,"line_start":122,"line_end":122,"column_start":5,"column_end":22}},{"value":"/     * 0 -> byte","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249656,"byte_end":249675,"line_start":123,"line_end":123,"column_start":5,"column_end":24}},{"value":"/     * 1 -> half word","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249680,"byte_end":249704,"line_start":124,"line_end":124,"column_start":5,"column_end":29}},{"value":"/     * 2 -> word","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249709,"byte_end":249728,"line_start":125,"line_end":125,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249860,"byte_end":249880,"line_start":129,"line_end":129,"column_start":8,"column_end":28},"name":"set_memory_increment","qualname":"::dma::traits::Stream::set_memory_increment","value":"pub fn set_memory_increment(&mut Self, bool)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Enable/disable memory increment (minc) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable memory increment (minc) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249790,"byte_end":249852,"line_start":128,"line_end":128,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249989,"byte_end":250013,"line_start":132,"line_end":132,"column_start":8,"column_end":32},"name":"set_peripheral_increment","qualname":"::dma::traits::Stream::set_peripheral_increment","value":"pub fn set_peripheral_increment(&mut Self, bool)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Enable/disable peripheral increment (pinc) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable peripheral increment (pinc) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":249915,"byte_end":249981,"line_start":131,"line_end":131,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250102,"byte_end":250115,"line_start":135,"line_end":135,"column_start":8,"column_end":21},"name":"set_direction","qualname":"::dma::traits::Stream::set_direction","value":"pub fn set_direction<D: Direction>(&mut Self, D)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set the direction (dir) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the direction (dir) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250048,"byte_end":250094,"line_start":134,"line_end":134,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250248,"byte_end":250269,"line_start":138,"line_end":138,"column_start":8,"column_end":29},"name":"set_interrupts_enable","qualname":"::dma::traits::Stream::set_interrupts_enable","value":"pub fn set_interrupts_enable(&mut Self, bool, bool, bool, bool)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Convenience method to configure the 4 common interrupts for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Convenience method to configure the 4 common interrupts for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250161,"byte_end":250240,"line_start":137,"line_end":137,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250647,"byte_end":250668,"line_start":149,"line_end":149,"column_start":8,"column_end":29},"name":"get_interrupts_enable","qualname":"::dma::traits::Stream::get_interrupts_enable","value":"pub fn get_interrupts_enable() -> (bool, bool, bool, bool)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Convenience method to get the value of the 4 common interrupts for the DMA stream.\n The order of the returns are: `transfer_complete`, `half_transfer`, `transfer_error` and\n `direct_mode_error`.\n","sig":null,"attributes":[{"value":"/ Convenience method to get the value of the 4 common interrupts for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250427,"byte_end":250513,"line_start":146,"line_end":146,"column_start":5,"column_end":91}},{"value":"/ The order of the returns are: `transfer_complete`, `half_transfer`, `transfer_error` and","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250518,"byte_end":250610,"line_start":147,"line_end":147,"column_start":5,"column_end":97}},{"value":"/ `direct_mode_error`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250615,"byte_end":250639,"line_start":148,"line_end":148,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250789,"byte_end":250827,"line_start":152,"line_end":152,"column_start":8,"column_end":46},"name":"set_transfer_complete_interrupt_enable","qualname":"::dma::traits::Stream::set_transfer_complete_interrupt_enable","value":"pub fn set_transfer_complete_interrupt_enable(&mut Self, bool)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Enable/disable the transfer complete interrupt (tcie) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the transfer complete interrupt (tcie) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250705,"byte_end":250781,"line_start":151,"line_end":151,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250960,"byte_end":250994,"line_start":155,"line_end":155,"column_start":8,"column_end":42},"name":"set_half_transfer_interrupt_enable","qualname":"::dma::traits::Stream::set_half_transfer_interrupt_enable","value":"pub fn set_half_transfer_interrupt_enable(&mut Self, bool)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Enable/disable the half transfer interrupt (htie) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the half transfer interrupt (htie) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":250880,"byte_end":250952,"line_start":154,"line_end":154,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251124,"byte_end":251159,"line_start":158,"line_end":158,"column_start":8,"column_end":43},"name":"set_transfer_error_interrupt_enable","qualname":"::dma::traits::Stream::set_transfer_error_interrupt_enable","value":"pub fn set_transfer_error_interrupt_enable(&mut Self, bool)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Enable/disable the transfer error interrupt (teie) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the transfer error interrupt (teie) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251043,"byte_end":251116,"line_start":157,"line_end":157,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251294,"byte_end":251332,"line_start":161,"line_end":161,"column_start":8,"column_end":46},"name":"set_direct_mode_error_interrupt_enable","qualname":"::dma::traits::Stream::set_direct_mode_error_interrupt_enable","value":"pub fn set_direct_mode_error_interrupt_enable(&mut Self, bool)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Enable/disable the direct mode error interrupt (dmeie) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the direct mode error interrupt (dmeie) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251209,"byte_end":251286,"line_start":160,"line_end":160,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251462,"byte_end":251493,"line_start":164,"line_end":164,"column_start":8,"column_end":39},"name":"set_fifo_error_interrupt_enable","qualname":"::dma::traits::Stream::set_fifo_error_interrupt_enable","value":"pub fn set_fifo_error_interrupt_enable(&mut Self, bool)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Enable/disable the fifo error interrupt (feie) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the fifo error interrupt (feie) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251385,"byte_end":251454,"line_start":163,"line_end":163,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251608,"byte_end":251625,"line_start":167,"line_end":167,"column_start":8,"column_end":25},"name":"set_double_buffer","qualname":"::dma::traits::Stream::set_double_buffer","value":"pub fn set_double_buffer(&mut Self, bool)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Enable/disable the double buffer (dbm) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the double buffer (dbm) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251539,"byte_end":251600,"line_start":166,"line_end":166,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251727,"byte_end":251745,"line_start":170,"line_end":170,"column_start":8,"column_end":26},"name":"set_fifo_threshold","qualname":"::dma::traits::Stream::set_fifo_threshold","value":"pub fn set_fifo_threshold(&mut Self, config::FifoThreshold)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set the fifo threshold (fcr.fth) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the fifo threshold (fcr.fth) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251664,"byte_end":251719,"line_start":169,"line_end":169,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251864,"byte_end":251879,"line_start":173,"line_end":173,"column_start":8,"column_end":23},"name":"set_fifo_enable","qualname":"::dma::traits::Stream::set_fifo_enable","value":"pub fn set_fifo_enable(&mut Self, bool)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Enable/disable the fifo (dmdis) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the fifo (dmdis) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251802,"byte_end":251856,"line_start":172,"line_end":172,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251977,"byte_end":251993,"line_start":176,"line_end":176,"column_start":8,"column_end":24},"name":"set_memory_burst","qualname":"::dma::traits::Stream::set_memory_burst","value":"pub fn set_memory_burst(&mut Self, config::BurstMode)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set memory burst mode (mburst) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set memory burst mode (mburst) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":251916,"byte_end":251969,"line_start":175,"line_end":175,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252109,"byte_end":252129,"line_start":179,"line_end":179,"column_start":8,"column_end":28},"name":"set_peripheral_burst","qualname":"::dma::traits::Stream::set_peripheral_burst","value":"pub fn set_peripheral_burst(&mut Self, config::BurstMode)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Set peripheral burst mode (pburst) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set peripheral burst mode (pburst) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252044,"byte_end":252101,"line_start":178,"line_end":178,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252246,"byte_end":252256,"line_start":182,"line_end":182,"column_start":8,"column_end":18},"name":"fifo_level","qualname":"::dma::traits::Stream::fifo_level","value":"pub fn fifo_level() -> FifoLevel","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Get the current fifo level (fs) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Get the current fifo level (fs) of the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252184,"byte_end":252238,"line_start":181,"line_end":181,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252338,"byte_end":252352,"line_start":185,"line_end":185,"column_start":8,"column_end":22},"name":"current_buffer","qualname":"::dma::traits::Stream::current_buffer","value":"pub fn current_buffer() -> CurrentBuffer","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Get which buffer is currently in use by the DMA.\n","sig":null,"attributes":[{"value":"/ Get which buffer is currently in use by the DMA.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252278,"byte_end":252330,"line_start":184,"line_end":184,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":1799},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252405,"byte_end":252414,"line_start":189,"line_end":189,"column_start":11,"column_end":20},"name":"Direction","qualname":"::dma::traits::Direction","value":"Direction: Bits<u8>","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801}],"decl_id":null,"docs":" DMA direction.\n","sig":null,"attributes":[{"value":"/ DMA direction.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252376,"byte_end":252394,"line_start":188,"line_end":188,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252478,"byte_end":252481,"line_start":191,"line_end":191,"column_start":8,"column_end":11},"name":"new","qualname":"::dma::traits::Direction::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" Creates a new instance of the type.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of the type.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252431,"byte_end":252470,"line_start":190,"line_end":190,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252549,"byte_end":252558,"line_start":194,"line_end":194,"column_start":8,"column_end":17},"name":"direction","qualname":"::dma::traits::Direction::direction","value":"pub fn direction() -> DmaDirection","parent":{"krate":0,"index":1799},"children":[],"decl_id":null,"docs":" Returns the `DmaDirection` of the type.\n","sig":null,"attributes":[{"value":"/ Returns the `DmaDirection` of the type.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252498,"byte_end":252541,"line_start":193,"line_end":193,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":1802},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252777,"byte_end":252788,"line_start":203,"line_end":203,"column_start":18,"column_end":29},"name":"PeriAddress","qualname":"::dma::traits::PeriAddress","value":"PeriAddress","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1804}],"decl_id":null,"docs":" Get an address and memory size the DMA can use.","sig":null,"attributes":[{"value":"/ Get an address and memory size the DMA can use.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252581,"byte_end":252632,"line_start":197,"line_end":197,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252633,"byte_end":252636,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252637,"byte_end":252649,"line_start":199,"line_end":199,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252650,"byte_end":252653,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ Both the memory size and the address must be correct for the specific peripheral and for the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252654,"byte_end":252750,"line_start":201,"line_end":201,"column_start":1,"column_end":97}},{"value":"/ DMA.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252751,"byte_end":252759,"line_start":202,"line_end":202,"column_start":1,"column_end":9}}]},{"kind":"Type","id":{"krate":0,"index":1803},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252839,"byte_end":252846,"line_start":205,"line_end":205,"column_start":10,"column_end":17},"name":"MemSize","qualname":"::dma::traits::PeriAddress::MemSize","value":"type MemSize;","parent":{"krate":0,"index":1802},"children":[],"decl_id":null,"docs":" Memory size of the peripheral.\n","sig":null,"attributes":[{"value":"/ Memory size of the peripheral.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252795,"byte_end":252829,"line_start":204,"line_end":204,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252914,"byte_end":252921,"line_start":208,"line_end":208,"column_start":8,"column_end":15},"name":"address","qualname":"::dma::traits::PeriAddress::address","value":"pub fn address(&Self) -> u32","parent":{"krate":0,"index":1802},"children":[],"decl_id":null,"docs":" Returns the address to be used by the DMA stream.\n","sig":null,"attributes":[{"value":"/ Returns the address to be used by the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252853,"byte_end":252906,"line_start":207,"line_end":207,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1808},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253822,"byte_end":253838,"line_start":246,"line_end":246,"column_start":10,"column_end":26},"name":"DMARegisterBlock","qualname":"::dma::traits::DMARegisterBlock","value":"pac::dma1::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Type alias to a DMA RegisterBlock.\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"stm32f411\", feature = \"stm32f413\", feature = \"stm32f423\",\n          feature = \"stm32f410\"))","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253652,"byte_end":253773,"line_start":239,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ Type alias to a DMA RegisterBlock.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253774,"byte_end":253812,"line_start":245,"line_end":245,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1809},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253937,"byte_end":253945,"line_start":249,"line_end":249,"column_start":11,"column_end":19},"name":"Instance","qualname":"::dma::traits::Instance","value":"Instance: Deref<Target = DMARegisterBlock> + Sealed","parent":null,"children":[{"krate":0,"index":1810}],"decl_id":null,"docs":" Trait that represents an instance of a DMA peripheral.\n","sig":null,"attributes":[{"value":"/ Trait that represents an instance of a DMA peripheral.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253868,"byte_end":253926,"line_start":248,"line_end":248,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254044,"byte_end":254047,"line_start":251,"line_end":251,"column_start":8,"column_end":11},"name":"ptr","qualname":"::dma::traits::Instance::ptr","value":"pub fn ptr() -> *const DMARegisterBlock","parent":{"krate":0,"index":1809},"children":[],"decl_id":null,"docs":" Gives a pointer to the RegisterBlock.\n","sig":null,"attributes":[{"value":"/ Gives a pointer to the RegisterBlock.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253995,"byte_end":254036,"line_start":250,"line_end":250,"column_start":5,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":1816},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254824,"byte_end":254831,"line_start":287,"line_end":287,"column_start":11,"column_end":18},"name":"Channel","qualname":"::dma::traits::Channel","value":"Channel","parent":null,"children":[],"decl_id":null,"docs":" A channel that can be configured on a DMA stream.\n","sig":null,"attributes":[{"value":"/ A channel that can be configured on a DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254760,"byte_end":254813,"line_start":286,"line_end":286,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1817},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":255060,"byte_end":255066,"line_start":294,"line_end":294,"column_start":18,"column_end":24},"name":"DMASet","qualname":"::dma::traits::DMASet","value":"DMASet<STREAM, DIRECTION, const CHANNEL: u8>","parent":null,"children":[],"decl_id":null,"docs":" Trait to mark a set of Stream, Channel and Direction for a Peripheral as correct together.","sig":null,"attributes":[{"value":"/ Trait to mark a set of Stream, Channel and Direction for a Peripheral as correct together.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254836,"byte_end":254930,"line_start":289,"line_end":289,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254931,"byte_end":254934,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254935,"byte_end":254947,"line_start":291,"line_end":291,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254948,"byte_end":254951,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ Memory corruption might occur if this trait is implemented for an invalid combination.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254952,"byte_end":255042,"line_start":293,"line_end":293,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":6654},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":255123,"byte_end":255127,"line_start":296,"line_end":296,"column_start":15,"column_end":19},"name":"CCR1","qualname":"::dma::traits::CCR1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254402,"byte_end":254487,"line_start":271,"line_end":271,"column_start":13,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":6662},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":255129,"byte_end":255133,"line_start":296,"line_end":296,"column_start":21,"column_end":25},"name":"CCR2","qualname":"::dma::traits::CCR2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254402,"byte_end":254487,"line_start":271,"line_end":271,"column_start":13,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":6670},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":255135,"byte_end":255139,"line_start":296,"line_end":296,"column_start":27,"column_end":31},"name":"CCR3","qualname":"::dma::traits::CCR3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254402,"byte_end":254487,"line_start":271,"line_end":271,"column_start":13,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":6678},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":255141,"byte_end":255145,"line_start":296,"line_end":296,"column_start":33,"column_end":37},"name":"CCR4","qualname":"::dma::traits::CCR4","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254402,"byte_end":254487,"line_start":271,"line_end":271,"column_start":13,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":6686},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":255147,"byte_end":255151,"line_start":296,"line_end":296,"column_start":39,"column_end":43},"name":"DMAR","qualname":"::dma::traits::DMAR","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254402,"byte_end":254487,"line_start":271,"line_end":271,"column_start":13,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":6694},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":255153,"byte_end":255156,"line_start":296,"line_end":296,"column_start":45,"column_end":48},"name":"ARR","qualname":"::dma::traits::ARR","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254402,"byte_end":254487,"line_start":271,"line_end":271,"column_start":13,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7171},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190026,"byte_end":190034,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::dma::DMAError::NotReady","value":"DMAError::NotReady(T)","parent":{"krate":0,"index":7169},"children":[],"decl_id":null,"docs":" DMA not ready to change buffers.\n","sig":null,"attributes":[{"value":"/ DMA not ready to change buffers.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189985,"byte_end":190021,"line_start":32,"line_end":32,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7174},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190125,"byte_end":190136,"line_start":35,"line_end":35,"column_start":5,"column_end":16},"name":"SmallBuffer","qualname":"::dma::DMAError::SmallBuffer","value":"DMAError::SmallBuffer(T)","parent":{"krate":0,"index":7169},"children":[],"decl_id":null,"docs":" The user provided a buffer that is not big enough while double buffering.\n","sig":null,"attributes":[{"value":"/ The user provided a buffer that is not big enough while double buffering.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190043,"byte_end":190120,"line_start":34,"line_end":34,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7177},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190209,"byte_end":190216,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::dma::DMAError::Overrun","value":"DMAError::Overrun(T)","parent":{"krate":0,"index":7169},"children":[],"decl_id":null,"docs":" Overrun during a double buffering or circular transfer.\n","sig":null,"attributes":[{"value":"/ Overrun during a double buffering or circular transfer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190145,"byte_end":190204,"line_start":36,"line_end":36,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":7169},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189967,"byte_end":189975,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"name":"DMAError","qualname":"::dma::DMAError","value":"pub enum DMAError<T> { NotReady(T), SmallBuffer(T), Overrun(T), }","parent":null,"children":[{"krate":0,"index":7171},{"krate":0,"index":7174},{"krate":0,"index":7177}],"decl_id":null,"docs":" Errors.\n","sig":null,"attributes":[{"value":"/ Errors.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189925,"byte_end":189936,"line_start":29,"line_end":29,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7187},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190970,"byte_end":190984,"line_start":57,"line_end":57,"column_start":5,"column_end":19},"name":"MemoryToMemory","qualname":"::dma::DmaDirection::MemoryToMemory","value":"DmaDirection::MemoryToMemory","parent":{"krate":0,"index":7186},"children":[],"decl_id":null,"docs":" Memory to Memory transfer.\n","sig":null,"attributes":[{"value":"/ Memory to Memory transfer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190935,"byte_end":190965,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7189},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191029,"byte_end":191047,"line_start":59,"line_end":59,"column_start":5,"column_end":23},"name":"PeripheralToMemory","qualname":"::dma::DmaDirection::PeripheralToMemory","value":"DmaDirection::PeripheralToMemory","parent":{"krate":0,"index":7186},"children":[],"decl_id":null,"docs":" Peripheral to Memory transfer.\n","sig":null,"attributes":[{"value":"/ Peripheral to Memory transfer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190990,"byte_end":191024,"line_start":58,"line_end":58,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7191},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191092,"byte_end":191110,"line_start":61,"line_end":61,"column_start":5,"column_end":23},"name":"MemoryToPeripheral","qualname":"::dma::DmaDirection::MemoryToPeripheral","value":"DmaDirection::MemoryToPeripheral","parent":{"krate":0,"index":7186},"children":[],"decl_id":null,"docs":" Memory to Peripheral transfer.\n","sig":null,"attributes":[{"value":"/ Memory to Peripheral transfer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191053,"byte_end":191087,"line_start":60,"line_end":60,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":7186},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190916,"byte_end":190928,"line_start":55,"line_end":55,"column_start":10,"column_end":22},"name":"DmaDirection","qualname":"::dma::DmaDirection","value":"pub enum DmaDirection {\n    MemoryToMemory,\n    PeripheralToMemory,\n    MemoryToPeripheral,\n}","parent":null,"children":[{"krate":0,"index":7187},{"krate":0,"index":7189},{"krate":0,"index":7191}],"decl_id":null,"docs":" Possible DMA's directions.\n","sig":null,"attributes":[{"value":"/ Possible DMA's directions.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190835,"byte_end":190865,"line_start":53,"line_end":53,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7201},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191204,"byte_end":191222,"line_start":66,"line_end":66,"column_start":12,"column_end":30},"name":"PeripheralToMemory","qualname":"::dma::PeripheralToMemory","value":"","parent":null,"children":[],"decl_id":null,"docs":" DMA from a peripheral to a memory location.\n","sig":null,"attributes":[{"value":"/ DMA from a peripheral to a memory location.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191115,"byte_end":191162,"line_start":64,"line_end":64,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":7208},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191638,"byte_end":191652,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"MemoryToMemory","qualname":"::dma::MemoryToMemory","value":"MemoryToMemory {  }","parent":null,"children":[{"krate":0,"index":7210}],"decl_id":null,"docs":" DMA from one memory location to another memory location.\n","sig":null,"attributes":[{"value":"/ DMA from one memory location to another memory location.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191536,"byte_end":191596,"line_start":85,"line_end":85,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7219},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192097,"byte_end":192115,"line_start":110,"line_end":110,"column_start":12,"column_end":30},"name":"MemoryToPeripheral","qualname":"::dma::MemoryToPeripheral","value":"","parent":null,"children":[],"decl_id":null,"docs":" DMA from a memory location to a peripheral.\n","sig":null,"attributes":[{"value":"/ DMA from a memory location to a peripheral.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192008,"byte_end":192055,"line_start":108,"line_end":108,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7227},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192946,"byte_end":192961,"line_start":153,"line_end":153,"column_start":5,"column_end":20},"name":"GtZeroLtQuarter","qualname":"::dma::FifoLevel::GtZeroLtQuarter","value":"FifoLevel::GtZeroLtQuarter","parent":{"krate":0,"index":7226},"children":[],"decl_id":null,"docs":" 0 < fifo_level < 1/4.\n","sig":null,"attributes":[{"value":"/ 0 < fifo_level < 1/4.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192916,"byte_end":192941,"line_start":152,"line_end":152,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7229},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193000,"byte_end":193016,"line_start":155,"line_end":155,"column_start":5,"column_end":21},"name":"GteQuarterLtHalf","qualname":"::dma::FifoLevel::GteQuarterLtHalf","value":"FifoLevel::GteQuarterLtHalf","parent":{"krate":0,"index":7226},"children":[],"decl_id":null,"docs":" 1/4 <= fifo_level < 1/2.\n","sig":null,"attributes":[{"value":"/ 1/4 <= fifo_level < 1/2.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192967,"byte_end":192995,"line_start":154,"line_end":154,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7231},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193055,"byte_end":193076,"line_start":157,"line_end":157,"column_start":5,"column_end":26},"name":"GteHalfLtThreeQuarter","qualname":"::dma::FifoLevel::GteHalfLtThreeQuarter","value":"FifoLevel::GteHalfLtThreeQuarter","parent":{"krate":0,"index":7226},"children":[],"decl_id":null,"docs":" 1/2 <= fifo_level < 3/4.\n","sig":null,"attributes":[{"value":"/ 1/2 <= fifo_level < 3/4.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193022,"byte_end":193050,"line_start":156,"line_end":156,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7233},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193116,"byte_end":193137,"line_start":159,"line_end":159,"column_start":5,"column_end":26},"name":"GteThreeQuarterLtFull","qualname":"::dma::FifoLevel::GteThreeQuarterLtFull","value":"FifoLevel::GteThreeQuarterLtFull","parent":{"krate":0,"index":7226},"children":[],"decl_id":null,"docs":" 3/4 <= fifo_level < full.\n","sig":null,"attributes":[{"value":"/ 3/4 <= fifo_level < full.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193082,"byte_end":193111,"line_start":158,"line_end":158,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7235},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193166,"byte_end":193171,"line_start":161,"line_end":161,"column_start":5,"column_end":10},"name":"Empty","qualname":"::dma::FifoLevel::Empty","value":"FifoLevel::Empty","parent":{"krate":0,"index":7226},"children":[],"decl_id":null,"docs":" Fifo is empty.\n","sig":null,"attributes":[{"value":"/ Fifo is empty.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193143,"byte_end":193161,"line_start":160,"line_end":160,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7237},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193199,"byte_end":193203,"line_start":163,"line_end":163,"column_start":5,"column_end":9},"name":"Full","qualname":"::dma::FifoLevel::Full","value":"FifoLevel::Full","parent":{"krate":0,"index":7226},"children":[],"decl_id":null,"docs":" Fifo is full.\n","sig":null,"attributes":[{"value":"/ Fifo is full.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193177,"byte_end":193194,"line_start":162,"line_end":162,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7239},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193232,"byte_end":193239,"line_start":165,"line_end":165,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::dma::FifoLevel::Invalid","value":"FifoLevel::Invalid","parent":{"krate":0,"index":7226},"children":[],"decl_id":null,"docs":" Invalid value.\n","sig":null,"attributes":[{"value":"/ Invalid value.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193209,"byte_end":193227,"line_start":164,"line_end":164,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":7226},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192900,"byte_end":192909,"line_start":151,"line_end":151,"column_start":10,"column_end":19},"name":"FifoLevel","qualname":"::dma::FifoLevel","value":"pub enum FifoLevel {\n    GtZeroLtQuarter,\n    GteQuarterLtHalf,\n    GteHalfLtThreeQuarter,\n    GteThreeQuarterLtFull,\n    Empty,\n    Full,\n    Invalid,\n}","parent":null,"children":[{"krate":0,"index":7227},{"krate":0,"index":7229},{"krate":0,"index":7231},{"krate":0,"index":7233},{"krate":0,"index":7235},{"krate":0,"index":7237},{"krate":0,"index":7239}],"decl_id":null,"docs":" How full the DMA stream's fifo is.\n","sig":null,"attributes":[{"value":"/ How full the DMA stream's fifo is.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192822,"byte_end":192860,"line_start":149,"line_end":149,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7247},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193792,"byte_end":193803,"line_start":186,"line_end":186,"column_start":5,"column_end":16},"name":"FirstBuffer","qualname":"::dma::CurrentBuffer::FirstBuffer","value":"CurrentBuffer::FirstBuffer","parent":{"krate":0,"index":7246},"children":[],"decl_id":null,"docs":" The first buffer (m0ar) is in use.\n","sig":null,"attributes":[{"value":"/ The first buffer (m0ar) is in use.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193749,"byte_end":193787,"line_start":185,"line_end":185,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7249},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193853,"byte_end":193865,"line_start":188,"line_end":188,"column_start":5,"column_end":17},"name":"DoubleBuffer","qualname":"::dma::CurrentBuffer::DoubleBuffer","value":"CurrentBuffer::DoubleBuffer","parent":{"krate":0,"index":7246},"children":[],"decl_id":null,"docs":" The second buffer (m1ar) is in use.\n","sig":null,"attributes":[{"value":"/ The second buffer (m1ar) is in use.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193809,"byte_end":193848,"line_start":187,"line_end":187,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":7246},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193729,"byte_end":193742,"line_start":184,"line_end":184,"column_start":10,"column_end":23},"name":"CurrentBuffer","qualname":"::dma::CurrentBuffer","value":"pub enum CurrentBuffer { FirstBuffer, DoubleBuffer, }","parent":null,"children":[{"krate":0,"index":7247},{"krate":0,"index":7249}],"decl_id":null,"docs":" Which DMA buffer is in use.\n","sig":null,"attributes":[{"value":"/ Which DMA buffer is in use.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193647,"byte_end":193678,"line_start":182,"line_end":182,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1888},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":194176,"byte_end":194183,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"StreamX","qualname":"::dma::StreamX","value":"StreamX {  }","parent":null,"children":[{"krate":0,"index":1891}],"decl_id":null,"docs":" Stream on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream on the DMA controller.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":194131,"byte_end":194164,"line_start":203,"line_end":203,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":1900},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":194965,"byte_end":194972,"line_start":238,"line_end":238,"column_start":10,"column_end":17},"name":"Stream0","qualname":"::dma::Stream0","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 0 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 0 on the DMA controller.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":194920,"byte_end":194955,"line_start":237,"line_end":237,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1903},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195042,"byte_end":195049,"line_start":240,"line_end":240,"column_start":10,"column_end":17},"name":"Stream1","qualname":"::dma::Stream1","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 1 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 1 on the DMA controller.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":194997,"byte_end":195032,"line_start":239,"line_end":239,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1906},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195119,"byte_end":195126,"line_start":242,"line_end":242,"column_start":10,"column_end":17},"name":"Stream2","qualname":"::dma::Stream2","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 2 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 2 on the DMA controller.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195074,"byte_end":195109,"line_start":241,"line_end":241,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1909},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195196,"byte_end":195203,"line_start":244,"line_end":244,"column_start":10,"column_end":17},"name":"Stream3","qualname":"::dma::Stream3","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 3 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 3 on the DMA controller.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195151,"byte_end":195186,"line_start":243,"line_end":243,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1912},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195273,"byte_end":195280,"line_start":246,"line_end":246,"column_start":10,"column_end":17},"name":"Stream4","qualname":"::dma::Stream4","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 4 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 4 on the DMA controller.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195228,"byte_end":195263,"line_start":245,"line_end":245,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1915},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195350,"byte_end":195357,"line_start":248,"line_end":248,"column_start":10,"column_end":17},"name":"Stream5","qualname":"::dma::Stream5","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 5 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 5 on the DMA controller.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195305,"byte_end":195340,"line_start":247,"line_end":247,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1918},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195427,"byte_end":195434,"line_start":250,"line_end":250,"column_start":10,"column_end":17},"name":"Stream6","qualname":"::dma::Stream6","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 6 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 6 on the DMA controller.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195382,"byte_end":195417,"line_start":249,"line_end":249,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1921},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195504,"byte_end":195511,"line_start":252,"line_end":252,"column_start":10,"column_end":17},"name":"Stream7","qualname":"::dma::Stream7","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 7 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 7 on the DMA controller.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195459,"byte_end":195494,"line_start":251,"line_end":251,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1948},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195913,"byte_end":195925,"line_start":264,"line_end":264,"column_start":12,"column_end":24},"name":"StreamsTuple","qualname":"::dma::StreamsTuple","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alias for a tuple with all DMA streams.\n","sig":null,"attributes":[{"value":"/ Alias for a tuple with all DMA streams.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195858,"byte_end":195901,"line_start":263,"line_end":263,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1951},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195936,"byte_end":195955,"line_start":265,"line_end":265,"column_start":5,"column_end":24},"name":"0","qualname":"::dma::StreamsTuple::0","value":"dma::StreamX<DMA, 0_u8>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1953},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195961,"byte_end":195980,"line_start":266,"line_end":266,"column_start":5,"column_end":24},"name":"1","qualname":"::dma::StreamsTuple::1","value":"dma::StreamX<DMA, 1_u8>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1955},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195986,"byte_end":196005,"line_start":267,"line_end":267,"column_start":5,"column_end":24},"name":"2","qualname":"::dma::StreamsTuple::2","value":"dma::StreamX<DMA, 2_u8>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1957},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":196011,"byte_end":196030,"line_start":268,"line_end":268,"column_start":5,"column_end":24},"name":"3","qualname":"::dma::StreamsTuple::3","value":"dma::StreamX<DMA, 3_u8>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1959},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":196036,"byte_end":196055,"line_start":269,"line_end":269,"column_start":5,"column_end":24},"name":"4","qualname":"::dma::StreamsTuple::4","value":"dma::StreamX<DMA, 4_u8>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1961},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":196061,"byte_end":196080,"line_start":270,"line_end":270,"column_start":5,"column_end":24},"name":"5","qualname":"::dma::StreamsTuple::5","value":"dma::StreamX<DMA, 5_u8>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1963},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":196086,"byte_end":196105,"line_start":271,"line_end":271,"column_start":5,"column_end":24},"name":"6","qualname":"::dma::StreamsTuple::6","value":"dma::StreamX<DMA, 6_u8>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1965},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":196111,"byte_end":196130,"line_start":272,"line_end":272,"column_start":5,"column_end":24},"name":"7","qualname":"::dma::StreamsTuple::7","value":"dma::StreamX<DMA, 7_u8>","parent":{"krate":0,"index":1948},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":196251,"byte_end":196254,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamsTuple<DMA>>::new","value":"pub fn new(DMA) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the DMA peripheral into streams.\n","sig":null,"attributes":[{"value":"/ Splits the DMA peripheral into streams.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":196196,"byte_end":196239,"line_start":276,"line_end":276,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":7419},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":208997,"byte_end":209005,"line_start":647,"line_end":647,"column_start":12,"column_end":20},"name":"ChannelX","qualname":"::dma::ChannelX","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Channel that can be configured on a DMA stream.\n","sig":null,"attributes":[{"value":"/ A Channel that can be configured on a DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":208902,"byte_end":208955,"line_start":645,"line_end":645,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":7436},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209247,"byte_end":209255,"line_start":659,"line_end":659,"column_start":6,"column_end":14},"name":"Channel0","qualname":"::dma::Channel0","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":7440},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209266,"byte_end":209274,"line_start":660,"line_end":660,"column_start":6,"column_end":14},"name":"Channel1","qualname":"::dma::Channel1","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":7444},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209285,"byte_end":209293,"line_start":661,"line_end":661,"column_start":6,"column_end":14},"name":"Channel2","qualname":"::dma::Channel2","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":7448},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209304,"byte_end":209312,"line_start":662,"line_end":662,"column_start":6,"column_end":14},"name":"Channel3","qualname":"::dma::Channel3","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":7452},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209323,"byte_end":209331,"line_start":663,"line_end":663,"column_start":6,"column_end":14},"name":"Channel4","qualname":"::dma::Channel4","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":7456},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209342,"byte_end":209350,"line_start":664,"line_end":664,"column_start":6,"column_end":14},"name":"Channel5","qualname":"::dma::Channel5","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":7460},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209361,"byte_end":209369,"line_start":665,"line_end":665,"column_start":6,"column_end":14},"name":"Channel6","qualname":"::dma::Channel6","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":7464},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209380,"byte_end":209388,"line_start":666,"line_end":666,"column_start":6,"column_end":14},"name":"Channel7","qualname":"::dma::Channel7","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2033},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209559,"byte_end":209565,"line_start":673,"line_end":673,"column_start":9,"column_end":15},"name":"config","qualname":"::dma::config","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","parent":null,"children":[{"krate":0,"index":2034},{"krate":0,"index":7466},{"krate":0,"index":7475},{"krate":0,"index":7477},{"krate":0,"index":7479},{"krate":0,"index":2037},{"krate":0,"index":7480},{"krate":0,"index":7489},{"krate":0,"index":7491},{"krate":0,"index":7493},{"krate":0,"index":2039},{"krate":0,"index":7494},{"krate":0,"index":7503},{"krate":0,"index":7505},{"krate":0,"index":7507},{"krate":0,"index":2041},{"krate":0,"index":7508},{"krate":0,"index":7522},{"krate":0,"index":7524},{"krate":0,"index":7526},{"krate":0,"index":2043},{"krate":0,"index":2045}],"decl_id":null,"docs":" Contains types related to DMA configuration.\n","sig":null,"attributes":[{"value":"/ Contains types related to DMA configuration.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209502,"byte_end":209550,"line_start":672,"line_end":672,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7467},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209951,"byte_end":209954,"line_start":682,"line_end":682,"column_start":9,"column_end":12},"name":"Low","qualname":"::dma::config::Priority::Low","value":"Priority::Low","parent":{"krate":0,"index":7466},"children":[],"decl_id":null,"docs":" Low priority.\n","sig":null,"attributes":[{"value":"/ Low priority.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209925,"byte_end":209942,"line_start":681,"line_end":681,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7469},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209993,"byte_end":209999,"line_start":684,"line_end":684,"column_start":9,"column_end":15},"name":"Medium","qualname":"::dma::config::Priority::Medium","value":"Priority::Medium","parent":{"krate":0,"index":7466},"children":[],"decl_id":null,"docs":" Medium priority.\n","sig":null,"attributes":[{"value":"/ Medium priority.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209964,"byte_end":209984,"line_start":683,"line_end":683,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7471},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210036,"byte_end":210040,"line_start":686,"line_end":686,"column_start":9,"column_end":13},"name":"High","qualname":"::dma::config::Priority::High","value":"Priority::High","parent":{"krate":0,"index":7466},"children":[],"decl_id":null,"docs":" High priority.\n","sig":null,"attributes":[{"value":"/ High priority.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210009,"byte_end":210027,"line_start":685,"line_end":685,"column_start":9,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7473},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210082,"byte_end":210090,"line_start":688,"line_end":688,"column_start":9,"column_end":17},"name":"VeryHigh","qualname":"::dma::config::Priority::VeryHigh","value":"Priority::VeryHigh","parent":{"krate":0,"index":7466},"children":[],"decl_id":null,"docs":" Very high priority.\n","sig":null,"attributes":[{"value":"/ Very high priority.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210050,"byte_end":210073,"line_start":687,"line_end":687,"column_start":9,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":7466},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209906,"byte_end":209914,"line_start":680,"line_end":680,"column_start":14,"column_end":22},"name":"Priority","qualname":"::dma::config::Priority","value":"pub enum Priority { Low, Medium, High, VeryHigh, }","parent":null,"children":[{"krate":0,"index":7467},{"krate":0,"index":7469},{"krate":0,"index":7471},{"krate":0,"index":7473}],"decl_id":null,"docs":" Priority of the DMA stream, defaults to `Medium`. If two requests have the same software\n priority level, the stream with the lower number takes priority over the stream with the\n higher number. For example, Stream 2 takes priority over Stream 4.\n","sig":null,"attributes":[{"value":"/ Priority of the DMA stream, defaults to `Medium`. If two requests have the same software","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209594,"byte_end":209686,"line_start":676,"line_end":676,"column_start":5,"column_end":97}},{"value":"/ priority level, the stream with the lower number takes priority over the stream with the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209691,"byte_end":209783,"line_start":677,"line_end":677,"column_start":5,"column_end":97}},{"value":"/ higher number. For example, Stream 2 takes priority over Stream 4.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":209788,"byte_end":209858,"line_start":678,"line_end":678,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7481},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210537,"byte_end":210548,"line_start":706,"line_end":706,"column_start":9,"column_end":20},"name":"QuarterFull","qualname":"::dma::config::FifoThreshold::QuarterFull","value":"FifoThreshold::QuarterFull","parent":{"krate":0,"index":7480},"children":[],"decl_id":null,"docs":" 1/4 full.\n","sig":null,"attributes":[{"value":"/ 1/4 full.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210515,"byte_end":210528,"line_start":705,"line_end":705,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7483},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210580,"byte_end":210588,"line_start":708,"line_end":708,"column_start":9,"column_end":17},"name":"HalfFull","qualname":"::dma::config::FifoThreshold::HalfFull","value":"FifoThreshold::HalfFull","parent":{"krate":0,"index":7480},"children":[],"decl_id":null,"docs":" 1/2 full.\n","sig":null,"attributes":[{"value":"/ 1/2 full.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210558,"byte_end":210571,"line_start":707,"line_end":707,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7485},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210620,"byte_end":210636,"line_start":710,"line_end":710,"column_start":9,"column_end":25},"name":"ThreeQuarterFull","qualname":"::dma::config::FifoThreshold::ThreeQuarterFull","value":"FifoThreshold::ThreeQuarterFull","parent":{"krate":0,"index":7480},"children":[],"decl_id":null,"docs":" 3/4 full.\n","sig":null,"attributes":[{"value":"/ 3/4 full.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210598,"byte_end":210611,"line_start":709,"line_end":709,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7487},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210664,"byte_end":210668,"line_start":712,"line_end":712,"column_start":9,"column_end":13},"name":"Full","qualname":"::dma::config::FifoThreshold::Full","value":"FifoThreshold::Full","parent":{"krate":0,"index":7480},"children":[],"decl_id":null,"docs":" Full.\n","sig":null,"attributes":[{"value":"/ Full.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210646,"byte_end":210655,"line_start":711,"line_end":711,"column_start":9,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":7480},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210491,"byte_end":210504,"line_start":704,"line_end":704,"column_start":14,"column_end":27},"name":"FifoThreshold","qualname":"::dma::config::FifoThreshold","value":"pub enum FifoThreshold { QuarterFull, HalfFull, ThreeQuarterFull, Full, }","parent":null,"children":[{"krate":0,"index":7481},{"krate":0,"index":7483},{"krate":0,"index":7485},{"krate":0,"index":7487}],"decl_id":null,"docs":" The level to fill the fifo to before performing the transaction.\n","sig":null,"attributes":[{"value":"/ The level to fill the fifo to before performing the transaction.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210375,"byte_end":210443,"line_start":702,"line_end":702,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7495},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211199,"byte_end":211206,"line_start":730,"line_end":730,"column_start":9,"column_end":16},"name":"NoBurst","qualname":"::dma::config::BurstMode::NoBurst","value":"BurstMode::NoBurst","parent":{"krate":0,"index":7494},"children":[],"decl_id":null,"docs":" Single transfer, no burst.\n","sig":null,"attributes":[{"value":"/ Single transfer, no burst.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211160,"byte_end":211190,"line_start":729,"line_end":729,"column_start":9,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7497},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211255,"byte_end":211261,"line_start":732,"line_end":732,"column_start":9,"column_end":15},"name":"Burst4","qualname":"::dma::config::BurstMode::Burst4","value":"BurstMode::Burst4","parent":{"krate":0,"index":7494},"children":[],"decl_id":null,"docs":" Burst transfer of 4 beats.\n","sig":null,"attributes":[{"value":"/ Burst transfer of 4 beats.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211216,"byte_end":211246,"line_start":731,"line_end":731,"column_start":9,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7499},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211310,"byte_end":211316,"line_start":734,"line_end":734,"column_start":9,"column_end":15},"name":"Burst8","qualname":"::dma::config::BurstMode::Burst8","value":"BurstMode::Burst8","parent":{"krate":0,"index":7494},"children":[],"decl_id":null,"docs":" Burst transfer of 8 beats.\n","sig":null,"attributes":[{"value":"/ Burst transfer of 8 beats.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211271,"byte_end":211301,"line_start":733,"line_end":733,"column_start":9,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7501},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211366,"byte_end":211373,"line_start":736,"line_end":736,"column_start":9,"column_end":16},"name":"Burst16","qualname":"::dma::config::BurstMode::Burst16","value":"BurstMode::Burst16","parent":{"krate":0,"index":7494},"children":[],"decl_id":null,"docs":" Burst transfer of 16 beats.\n","sig":null,"attributes":[{"value":"/ Burst transfer of 16 beats.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211326,"byte_end":211357,"line_start":735,"line_end":735,"column_start":9,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":7494},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211140,"byte_end":211149,"line_start":728,"line_end":728,"column_start":14,"column_end":23},"name":"BurstMode","qualname":"::dma::config::BurstMode","value":"pub enum BurstMode { NoBurst, Burst4, Burst8, Burst16, }","parent":null,"children":[{"krate":0,"index":7495},{"krate":0,"index":7497},{"krate":0,"index":7499},{"krate":0,"index":7501}],"decl_id":null,"docs":" How burst transfers are done, requires fifo enabled. Check datasheet for valid combinations.\n","sig":null,"attributes":[{"value":"/ How burst transfers are done, requires fifo enabled. Check datasheet for valid combinations.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210996,"byte_end":211092,"line_start":726,"line_end":726,"column_start":5,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":7508},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211782,"byte_end":211791,"line_start":752,"line_end":752,"column_start":16,"column_end":25},"name":"DmaConfig","qualname":"::dma::config::DmaConfig","value":"DmaConfig {  }","parent":null,"children":[{"krate":0,"index":7509},{"krate":0,"index":7510},{"krate":0,"index":7511},{"krate":0,"index":7512},{"krate":0,"index":7513},{"krate":0,"index":7514},{"krate":0,"index":7515},{"krate":0,"index":7516},{"krate":0,"index":7517},{"krate":0,"index":7518},{"krate":0,"index":7519},{"krate":0,"index":7520},{"krate":0,"index":7521}],"decl_id":null,"docs":" Contains the complete set of configuration for a DMA stream.\n","sig":null,"attributes":[{"value":"/ Contains the complete set of configuration for a DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211668,"byte_end":211732,"line_start":750,"line_end":750,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213226,"byte_end":213234,"line_start":791,"line_end":791,"column_start":16,"column_end":24},"name":"priority","qualname":"<DmaConfig>::priority","value":"pub fn priority(Self, Priority) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the priority.\n","sig":null,"attributes":[{"value":"/ Set the priority.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213163,"byte_end":213184,"line_start":789,"line_end":789,"column_start":9,"column_end":30}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213193,"byte_end":213210,"line_start":790,"line_end":790,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213420,"byte_end":213436,"line_start":798,"line_end":798,"column_start":16,"column_end":32},"name":"memory_increment","qualname":"<DmaConfig>::memory_increment","value":"pub fn memory_increment(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the memory_increment.\n","sig":null,"attributes":[{"value":"/ Set the memory_increment.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213349,"byte_end":213378,"line_start":796,"line_end":796,"column_start":9,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213387,"byte_end":213404,"line_start":797,"line_end":797,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213645,"byte_end":213665,"line_start":804,"line_end":804,"column_start":16,"column_end":36},"name":"peripheral_increment","qualname":"<DmaConfig>::peripheral_increment","value":"pub fn peripheral_increment(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the peripheral_increment.\n","sig":null,"attributes":[{"value":"/ Set the peripheral_increment.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213570,"byte_end":213603,"line_start":802,"line_end":802,"column_start":9,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213612,"byte_end":213629,"line_start":803,"line_end":803,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213893,"byte_end":213920,"line_start":810,"line_end":810,"column_start":16,"column_end":43},"name":"transfer_complete_interrupt","qualname":"<DmaConfig>::transfer_complete_interrupt","value":"pub fn transfer_complete_interrupt(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the transfer_complete_interrupt.\n","sig":null,"attributes":[{"value":"/ Set the transfer_complete_interrupt.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213811,"byte_end":213851,"line_start":808,"line_end":808,"column_start":9,"column_end":49}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213860,"byte_end":213877,"line_start":809,"line_end":809,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214165,"byte_end":214188,"line_start":816,"line_end":816,"column_start":16,"column_end":39},"name":"half_transfer_interrupt","qualname":"<DmaConfig>::half_transfer_interrupt","value":"pub fn half_transfer_interrupt(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the half_transfer_interrupt.\n","sig":null,"attributes":[{"value":"/ Set the half_transfer_interrupt.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214087,"byte_end":214123,"line_start":814,"line_end":814,"column_start":9,"column_end":45}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214132,"byte_end":214149,"line_start":815,"line_end":815,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214422,"byte_end":214446,"line_start":822,"line_end":822,"column_start":16,"column_end":40},"name":"transfer_error_interrupt","qualname":"<DmaConfig>::transfer_error_interrupt","value":"pub fn transfer_error_interrupt(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the transfer_error_interrupt.\n","sig":null,"attributes":[{"value":"/ Set the transfer_error_interrupt.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214343,"byte_end":214380,"line_start":820,"line_end":820,"column_start":9,"column_end":46}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214389,"byte_end":214406,"line_start":821,"line_end":821,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214686,"byte_end":214713,"line_start":828,"line_end":828,"column_start":16,"column_end":43},"name":"direct_mode_error_interrupt","qualname":"<DmaConfig>::direct_mode_error_interrupt","value":"pub fn direct_mode_error_interrupt(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the direct_mode_error_interrupt.\n","sig":null,"attributes":[{"value":"/ Set the direct_mode_error_interrupt.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214604,"byte_end":214644,"line_start":826,"line_end":826,"column_start":9,"column_end":49}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214653,"byte_end":214670,"line_start":827,"line_end":827,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214955,"byte_end":214975,"line_start":834,"line_end":834,"column_start":16,"column_end":36},"name":"fifo_error_interrupt","qualname":"<DmaConfig>::fifo_error_interrupt","value":"pub fn fifo_error_interrupt(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the fifo_error_interrupt.\n","sig":null,"attributes":[{"value":"/ Set the fifo_error_interrupt.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214880,"byte_end":214913,"line_start":832,"line_end":832,"column_start":9,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":214922,"byte_end":214939,"line_start":833,"line_end":833,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215189,"byte_end":215202,"line_start":840,"line_end":840,"column_start":16,"column_end":29},"name":"double_buffer","qualname":"<DmaConfig>::double_buffer","value":"pub fn double_buffer(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the double_buffer.\n","sig":null,"attributes":[{"value":"/ Set the double_buffer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215121,"byte_end":215147,"line_start":838,"line_end":838,"column_start":9,"column_end":35}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215156,"byte_end":215173,"line_start":839,"line_end":839,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215396,"byte_end":215410,"line_start":846,"line_end":846,"column_start":16,"column_end":30},"name":"fifo_threshold","qualname":"<DmaConfig>::fifo_threshold","value":"pub fn fifo_threshold(Self, FifoThreshold) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the fifo_threshold.\n","sig":null,"attributes":[{"value":"/ Set the fifo_threshold.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215327,"byte_end":215354,"line_start":844,"line_end":844,"column_start":9,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215363,"byte_end":215380,"line_start":845,"line_end":845,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215613,"byte_end":215624,"line_start":852,"line_end":852,"column_start":16,"column_end":27},"name":"fifo_enable","qualname":"<DmaConfig>::fifo_enable","value":"pub fn fifo_enable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the fifo_enable.\n","sig":null,"attributes":[{"value":"/ Set the fifo_enable.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215547,"byte_end":215571,"line_start":850,"line_end":850,"column_start":9,"column_end":33}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215580,"byte_end":215597,"line_start":851,"line_end":851,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215810,"byte_end":215822,"line_start":858,"line_end":858,"column_start":16,"column_end":28},"name":"memory_burst","qualname":"<DmaConfig>::memory_burst","value":"pub fn memory_burst(Self, BurstMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the memory_burst.\n","sig":null,"attributes":[{"value":"/ Set the memory_burst.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215743,"byte_end":215768,"line_start":856,"line_end":856,"column_start":9,"column_end":34}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215777,"byte_end":215794,"line_start":857,"line_end":857,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":216020,"byte_end":216036,"line_start":864,"line_end":864,"column_start":16,"column_end":32},"name":"peripheral_burst","qualname":"<DmaConfig>::peripheral_burst","value":"pub fn peripheral_burst(Self, BurstMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the peripheral_burst.\n","sig":null,"attributes":[{"value":"/ Set the peripheral_burst.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215949,"byte_end":215978,"line_start":862,"line_end":862,"column_start":9,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":215987,"byte_end":216004,"line_start":863,"line_end":863,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2059},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":216205,"byte_end":216213,"line_start":872,"line_end":872,"column_start":12,"column_end":20},"name":"Transfer","qualname":"::dma::Transfer","value":"Transfer {  }","parent":null,"children":[{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070}],"decl_id":null,"docs":" DMA Transfer.\n","sig":null,"attributes":[{"value":"/ DMA Transfer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":216176,"byte_end":216193,"line_start":871,"line_end":871,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":217249,"byte_end":217274,"line_start":901,"line_end":901,"column_start":12,"column_end":37},"name":"init_memory_to_peripheral","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToPeripheral, BUF, CHANNEL>>::init_memory_to_peripheral","value":"pub fn init_memory_to_peripheral(STREAM, PERIPHERAL, BUF, Option<BUF>,\n                                 config::DmaConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the DMA stream to the correct channel for the peripheral, configures source and\n destination and applies supplied configuration. If double buffering is enabled, the\n number of transfers will be the minimum length of `memory` and `double_buf`.","sig":null,"attributes":[{"value":"/ Configures the DMA stream to the correct channel for the peripheral, configures source and","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":216849,"byte_end":216943,"line_start":894,"line_end":894,"column_start":5,"column_end":99}},{"value":"/ destination and applies supplied configuration. If double buffering is enabled, the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":216948,"byte_end":217035,"line_start":895,"line_end":895,"column_start":5,"column_end":92}},{"value":"/ number of transfers will be the minimum length of `memory` and `double_buf`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":217040,"byte_end":217120,"line_start":896,"line_end":896,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":217125,"byte_end":217128,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":217133,"byte_end":217145,"line_start":898,"line_end":898,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":217150,"byte_end":217153,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ * When double buffering is enabled but the `double_buf` argument is `None`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":217158,"byte_end":217237,"line_start":900,"line_end":900,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":219152,"byte_end":219165,"line_start":942,"line_end":942,"column_start":12,"column_end":25},"name":"next_transfer","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToPeripheral, BUF, CHANNEL>>::next_transfer","value":"pub fn next_transfer(&mut Self, BUF)\n-> Result<(BUF, CurrentBuffer), DMAError<BUF>>","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts or continues a double buffer transfer. This must be called\n immediately after a transfer complete event if using double buffering, otherwise you might\n lose data. Returns the old buffer together with its `CurrentBuffer`. If an error occurs,\n this method will return the new buffer with the error.","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts or continues a double buffer transfer. This must be called","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":218202,"byte_end":218296,"line_start":931,"line_end":931,"column_start":5,"column_end":99}},{"value":"/ immediately after a transfer complete event if using double buffering, otherwise you might","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":218301,"byte_end":218395,"line_start":932,"line_end":932,"column_start":5,"column_end":99}},{"value":"/ lose data. Returns the old buffer together with its `CurrentBuffer`. If an error occurs,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":218400,"byte_end":218492,"line_start":933,"line_end":933,"column_start":5,"column_end":97}},{"value":"/ this method will return the new buffer with the error.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":218497,"byte_end":218555,"line_start":934,"line_end":934,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":218560,"byte_end":218563,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ This method will clear the transfer complete flag on entry, it will also clear it again if","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":218568,"byte_end":218662,"line_start":936,"line_end":936,"column_start":5,"column_end":99}},{"value":"/ an overrun occurs during its execution. Moreover, if an overrun occurs, the stream will be","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":218667,"byte_end":218761,"line_start":937,"line_end":937,"column_start":5,"column_end":99}},{"value":"/ disabled and the transfer error flag will be set. This method can be called before the end","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":218766,"byte_end":218860,"line_start":938,"line_end":938,"column_start":5,"column_end":99}},{"value":"/ of an ongoing transfer only if not using double buffering, in that case, the current","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":218865,"byte_end":218953,"line_start":939,"line_end":939,"column_start":5,"column_end":93}},{"value":"/ transfer will be canceled and a new one will be started. A `NotReady` error will be returned","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":218958,"byte_end":219054,"line_start":940,"line_end":940,"column_start":5,"column_end":101}},{"value":"/ if this method is called before the end of a transfer while double buffering.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":219059,"byte_end":219140,"line_start":941,"line_end":941,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220792,"byte_end":220810,"line_start":971,"line_end":971,"column_start":19,"column_end":37},"name":"next_transfer_with","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToPeripheral, BUF, CHANNEL>>::next_transfer_with","value":"pub unsafe fn next_transfer_with<F, T>(&mut Self, F)\n-> Result<T, DMAError<()>> where F: FnOnce(BUF, CurrentBuffer) -> (BUF, T)","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts or continues a double buffer transfer. This must be called\n immediately after a transfer complete event if using double buffering, otherwise you might\n lose data. The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This\n method can be called before the end of an ongoing transfer only if not using double\n buffering, in that case, the current transfer will be canceled and a new one will be\n started. A `NotReady` error will be returned if this method is called before the end of a\n transfer while double buffering and the closure won't be executed.","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts or continues a double buffer transfer. This must be called","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":219630,"byte_end":219724,"line_start":952,"line_end":952,"column_start":5,"column_end":99}},{"value":"/ immediately after a transfer complete event if using double buffering, otherwise you might","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":219729,"byte_end":219823,"line_start":953,"line_end":953,"column_start":5,"column_end":99}},{"value":"/ lose data. The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":219828,"byte_end":219924,"line_start":954,"line_end":954,"column_start":5,"column_end":101}},{"value":"/ method can be called before the end of an ongoing transfer only if not using double","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":219929,"byte_end":220016,"line_start":955,"line_end":955,"column_start":5,"column_end":92}},{"value":"/ buffering, in that case, the current transfer will be canceled and a new one will be","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220021,"byte_end":220109,"line_start":956,"line_end":956,"column_start":5,"column_end":93}},{"value":"/ started. A `NotReady` error will be returned if this method is called before the end of a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220114,"byte_end":220207,"line_start":957,"line_end":957,"column_start":5,"column_end":98}},{"value":"/ transfer while double buffering and the closure won't be executed.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220212,"byte_end":220282,"line_start":958,"line_end":958,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220287,"byte_end":220290,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220295,"byte_end":220307,"line_start":960,"line_end":960,"column_start":5,"column_end":17}},{"value":"/ This method will panic when double buffering if one or both of the following conditions","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220312,"byte_end":220403,"line_start":961,"line_end":961,"column_start":5,"column_end":96}},{"value":"/ happen:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220408,"byte_end":220419,"line_start":962,"line_end":962,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220424,"byte_end":220427,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ * The new buffer's length is smaller than the one used in the `init` method.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220432,"byte_end":220512,"line_start":964,"line_end":964,"column_start":5,"column_end":85}},{"value":"/ * The closure `f` takes too long to return and a buffer overrun occurs.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220517,"byte_end":220592,"line_start":965,"line_end":965,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220597,"byte_end":220600,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220605,"byte_end":220617,"line_start":967,"line_end":967,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220622,"byte_end":220625,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ Memory corruption might occur in the previous buffer, the one passed to the closure, if an","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220630,"byte_end":220724,"line_start":969,"line_end":969,"column_start":5,"column_end":99}},{"value":"/ overrun occurs in double buffering mode.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":220729,"byte_end":220773,"line_start":970,"line_end":970,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":222929,"byte_end":222939,"line_start":1026,"line_end":1026,"column_start":12,"column_end":22},"name":"peripheral","qualname":"<Transfer<STREAM, PERIPHERAL, PeripheralToMemory, BUF, CHANNEL>>::peripheral","value":"pub fn peripheral(&Self) -> &PERIPHERAL","parent":null,"children":[],"decl_id":null,"docs":" Access the owned peripheral for reading\n","sig":null,"attributes":[{"value":"/ Access the owned peripheral for reading","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":222874,"byte_end":222917,"line_start":1025,"line_end":1025,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":223720,"byte_end":223745,"line_start":1046,"line_end":1046,"column_start":12,"column_end":37},"name":"init_peripheral_to_memory","qualname":"<Transfer<STREAM, PERIPHERAL, PeripheralToMemory, BUF, CHANNEL>>::init_peripheral_to_memory","value":"pub fn init_peripheral_to_memory(STREAM, PERIPHERAL, BUF, Option<BUF>,\n                                 config::DmaConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the DMA stream to the correct channel for the peripheral, configures source and\n destination and applies supplied configuration. If double buffering is enabled, the\n number of transfers will be the minimum length of `memory` and `double_buf`.","sig":null,"attributes":[{"value":"/ Configures the DMA stream to the correct channel for the peripheral, configures source and","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":223320,"byte_end":223414,"line_start":1039,"line_end":1039,"column_start":5,"column_end":99}},{"value":"/ destination and applies supplied configuration. If double buffering is enabled, the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":223419,"byte_end":223506,"line_start":1040,"line_end":1040,"column_start":5,"column_end":92}},{"value":"/ number of transfers will be the minimum length of `memory` and `double_buf`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":223511,"byte_end":223591,"line_start":1041,"line_end":1041,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":223596,"byte_end":223599,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":223604,"byte_end":223616,"line_start":1043,"line_end":1043,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":223621,"byte_end":223624,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ * When double buffering is enabled but the `double_buf` argument is `None`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":223629,"byte_end":223708,"line_start":1045,"line_end":1045,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":225633,"byte_end":225646,"line_start":1087,"line_end":1087,"column_start":12,"column_end":25},"name":"next_transfer","qualname":"<Transfer<STREAM, PERIPHERAL, PeripheralToMemory, BUF, CHANNEL>>::next_transfer","value":"pub fn next_transfer(&mut Self, BUF)\n-> Result<(BUF, CurrentBuffer), DMAError<BUF>>","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts or continues a double buffer transfer. This must be called\n immediately after a transfer complete event if using double buffering, otherwise you might\n lose data. Returns the old buffer together with its `CurrentBuffer`. If an error occurs,\n this method will return the new buffer with the error.","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts or continues a double buffer transfer. This must be called","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":224683,"byte_end":224777,"line_start":1076,"line_end":1076,"column_start":5,"column_end":99}},{"value":"/ immediately after a transfer complete event if using double buffering, otherwise you might","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":224782,"byte_end":224876,"line_start":1077,"line_end":1077,"column_start":5,"column_end":99}},{"value":"/ lose data. Returns the old buffer together with its `CurrentBuffer`. If an error occurs,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":224881,"byte_end":224973,"line_start":1078,"line_end":1078,"column_start":5,"column_end":97}},{"value":"/ this method will return the new buffer with the error.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":224978,"byte_end":225036,"line_start":1079,"line_end":1079,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":225041,"byte_end":225044,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ This method will clear the transfer complete flag on entry, it will also clear it again if","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":225049,"byte_end":225143,"line_start":1081,"line_end":1081,"column_start":5,"column_end":99}},{"value":"/ an overrun occurs during its execution. Moreover, if an overrun occurs, the stream will be","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":225148,"byte_end":225242,"line_start":1082,"line_end":1082,"column_start":5,"column_end":99}},{"value":"/ disabled and the transfer error flag will be set. This method can be called before the end","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":225247,"byte_end":225341,"line_start":1083,"line_end":1083,"column_start":5,"column_end":99}},{"value":"/ of an ongoing transfer only if not using double buffering, in that case, the current","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":225346,"byte_end":225434,"line_start":1084,"line_end":1084,"column_start":5,"column_end":93}},{"value":"/ transfer will be canceled and a new one will be started. A `NotReady` error will be returned","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":225439,"byte_end":225535,"line_start":1085,"line_end":1085,"column_start":5,"column_end":101}},{"value":"/ if this method is called before the end of a transfer while double buffering.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":225540,"byte_end":225621,"line_start":1086,"line_end":1086,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":227301,"byte_end":227319,"line_start":1119,"line_end":1119,"column_start":19,"column_end":37},"name":"next_transfer_with","qualname":"<Transfer<STREAM, PERIPHERAL, PeripheralToMemory, BUF, CHANNEL>>::next_transfer_with","value":"pub unsafe fn next_transfer_with<F, T>(&mut Self, F)\n-> Result<T, DMAError<()>> where F: FnOnce(BUF, CurrentBuffer) -> (BUF, T)","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts or continues a double buffer transfer. This must be called\n immediately after a transfer complete event if using double buffering, otherwise you might\n lose data. The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This\n method can be called before the end of an ongoing transfer only if not using double\n buffering, in that case, the current transfer will be canceled and a new one will be\n started. A `NotReady` error will be returned if this method is called before the end of a\n transfer while double buffering and the closure won't be executed.","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts or continues a double buffer transfer. This must be called","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226139,"byte_end":226233,"line_start":1100,"line_end":1100,"column_start":5,"column_end":99}},{"value":"/ immediately after a transfer complete event if using double buffering, otherwise you might","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226238,"byte_end":226332,"line_start":1101,"line_end":1101,"column_start":5,"column_end":99}},{"value":"/ lose data. The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226337,"byte_end":226433,"line_start":1102,"line_end":1102,"column_start":5,"column_end":101}},{"value":"/ method can be called before the end of an ongoing transfer only if not using double","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226438,"byte_end":226525,"line_start":1103,"line_end":1103,"column_start":5,"column_end":92}},{"value":"/ buffering, in that case, the current transfer will be canceled and a new one will be","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226530,"byte_end":226618,"line_start":1104,"line_end":1104,"column_start":5,"column_end":93}},{"value":"/ started. A `NotReady` error will be returned if this method is called before the end of a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226623,"byte_end":226716,"line_start":1105,"line_end":1105,"column_start":5,"column_end":98}},{"value":"/ transfer while double buffering and the closure won't be executed.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226721,"byte_end":226791,"line_start":1106,"line_end":1106,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226796,"byte_end":226799,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226804,"byte_end":226816,"line_start":1108,"line_end":1108,"column_start":5,"column_end":17}},{"value":"/ This method will panic when double buffering if one or both of the following conditions","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226821,"byte_end":226912,"line_start":1109,"line_end":1109,"column_start":5,"column_end":96}},{"value":"/ happen:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226917,"byte_end":226928,"line_start":1110,"line_end":1110,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226933,"byte_end":226936,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ * The new buffer's length is smaller than the one used in the `init` method.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":226941,"byte_end":227021,"line_start":1112,"line_end":1112,"column_start":5,"column_end":85}},{"value":"/ * The closure `f` takes too long to return and a buffer overrun occurs.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":227026,"byte_end":227101,"line_start":1113,"line_end":1113,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":227106,"byte_end":227109,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":227114,"byte_end":227126,"line_start":1115,"line_end":1115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":227131,"byte_end":227134,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ Memory corruption might occur in the previous buffer, the one passed to the closure, if an","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":227139,"byte_end":227233,"line_start":1117,"line_end":1117,"column_start":5,"column_end":99}},{"value":"/ overrun occurs in double buffering mode.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":227238,"byte_end":227282,"line_start":1118,"line_end":1118,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229956,"byte_end":229977,"line_start":1183,"line_end":1183,"column_start":12,"column_end":33},"name":"init_memory_to_memory","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToMemory<S>, BUF, CHANNEL>>::init_memory_to_memory","value":"pub fn init_memory_to_memory(STREAM, PERIPHERAL, BUF, BUF, config::DmaConfig)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the DMA stream to the correct channel for the peripheral, configures source and\n destination and applies supplied configuration. In a memory to memory transfer,\n the `double_buf` argument is the source of the data. If double buffering is enabled, the\n number of transfers will be the minimum length of `memory` and `double_buf`.","sig":null,"attributes":[{"value":"/ Configures the DMA stream to the correct channel for the peripheral, configures source and","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229409,"byte_end":229503,"line_start":1174,"line_end":1174,"column_start":5,"column_end":99}},{"value":"/ destination and applies supplied configuration. In a memory to memory transfer,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229508,"byte_end":229591,"line_start":1175,"line_end":1175,"column_start":5,"column_end":88}},{"value":"/ the `double_buf` argument is the source of the data. If double buffering is enabled, the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229596,"byte_end":229688,"line_start":1176,"line_end":1176,"column_start":5,"column_end":97}},{"value":"/ number of transfers will be the minimum length of `memory` and `double_buf`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229693,"byte_end":229773,"line_start":1177,"line_end":1177,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229778,"byte_end":229781,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229786,"byte_end":229798,"line_start":1179,"line_end":1179,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229803,"byte_end":229806,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ * When the FIFO is disabled or double buffering is enabled in `DmaConfig` while initializing","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229811,"byte_end":229907,"line_start":1181,"line_end":1181,"column_start":5,"column_end":101}},{"value":"/ a memory to memory transfer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229912,"byte_end":229944,"line_start":1182,"line_end":1182,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":231337,"byte_end":231350,"line_start":1219,"line_end":1219,"column_start":12,"column_end":25},"name":"next_transfer","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToMemory<S>, BUF, CHANNEL>>::next_transfer","value":"pub fn next_transfer(&mut Self, BUF)\n-> Result<(BUF, CurrentBuffer), DMAError<BUF>>","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts.Returns the old buffer together with its `CurrentBuffer`. If\n an error occurs, this method will return the new buffer with the error.","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts.Returns the old buffer together with its `CurrentBuffer`. If","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":230909,"byte_end":231005,"line_start":1213,"line_end":1213,"column_start":5,"column_end":101}},{"value":"/ an error occurs, this method will return the new buffer with the error.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":231010,"byte_end":231085,"line_start":1214,"line_end":1214,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":231090,"byte_end":231093,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ This method will clear the transfer complete flag on entry. This method can be called before","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":231098,"byte_end":231194,"line_start":1216,"line_end":1216,"column_start":5,"column_end":101}},{"value":"/ the end of an ongoing transfer, in that case, the current transfer will be canceled and a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":231199,"byte_end":231292,"line_start":1217,"line_end":1217,"column_start":5,"column_end":98}},{"value":"/ new one will be started.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":231297,"byte_end":231325,"line_start":1218,"line_end":1218,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":232159,"byte_end":232177,"line_start":1237,"line_end":1237,"column_start":12,"column_end":30},"name":"next_transfer_with","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToMemory<S>, BUF, CHANNEL>>::next_transfer_with","value":"pub fn next_transfer_with<F, T>(&mut Self, F) -> T where\nF: FnOnce(BUF, CurrentBuffer) -> (BUF, T)","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts a transfer. This must be called\n The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This\n method can be called before the end of an ongoing transfer,\n in that case, the current transfer will be canceled and a new one will be\n started.\n","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts a transfer. This must be called","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":231823,"byte_end":231890,"line_start":1232,"line_end":1232,"column_start":5,"column_end":72}},{"value":"/ The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":231895,"byte_end":231980,"line_start":1233,"line_end":1233,"column_start":5,"column_end":90}},{"value":"/ method can be called before the end of an ongoing transfer,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":231985,"byte_end":232048,"line_start":1234,"line_end":1234,"column_start":5,"column_end":68}},{"value":"/ in that case, the current transfer will be canceled and a new one will be","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":232053,"byte_end":232130,"line_start":1235,"line_end":1235,"column_start":5,"column_end":82}},{"value":"/ started.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":232135,"byte_end":232147,"line_start":1236,"line_end":1236,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":233425,"byte_end":233430,"line_start":1273,"line_end":1273,"column_start":12,"column_end":17},"name":"start","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::start","value":"pub fn start<F>(&mut Self, F) where F: FnOnce(&mut PERIPHERAL) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Starts the transfer, the closure will be executed right after enabling the stream.\n","sig":null,"attributes":[{"value":"/ Starts the transfer, the closure will be executed right after enabling the stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":233327,"byte_end":233413,"line_start":1272,"line_end":1272,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":233833,"byte_end":233838,"line_start":1287,"line_end":1287,"column_start":12,"column_end":17},"name":"pause","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::pause","value":"pub fn pause<F>(&mut Self, F) where F: FnOnce(&mut PERIPHERAL) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pauses the dma stream, the closure will be executed right before disabling the stream.\n","sig":null,"attributes":[{"value":"/ Pauses the dma stream, the closure will be executed right before disabling the stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":233731,"byte_end":233821,"line_start":1286,"line_end":1286,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":234055,"byte_end":234062,"line_start":1296,"line_end":1296,"column_start":12,"column_end":19},"name":"release","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::release","value":"pub fn release(Self) -> (STREAM, PERIPHERAL, BUF, Option<BUF>)","parent":null,"children":[],"decl_id":null,"docs":" Stops the stream and returns the underlying resources.\n","sig":null,"attributes":[{"value":"/ Stops the stream and returns the underlying resources.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":233985,"byte_end":234043,"line_start":1295,"line_end":1295,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":234647,"byte_end":234663,"line_start":1313,"line_end":1313,"column_start":12,"column_end":28},"name":"clear_interrupts","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_interrupts","value":"pub fn clear_interrupts(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all interrupts for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear all interrupts for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":234569,"byte_end":234613,"line_start":1311,"line_end":1311,"column_start":5,"column_end":49}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":234618,"byte_end":234635,"line_start":1312,"line_end":1312,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":234826,"byte_end":234859,"line_start":1319,"line_end":1319,"column_start":12,"column_end":45},"name":"clear_transfer_complete_interrupt","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_transfer_complete_interrupt","value":"pub fn clear_transfer_complete_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear transfer complete interrupt (tcif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear transfer complete interrupt (tcif) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":234728,"byte_end":234792,"line_start":1317,"line_end":1317,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":234797,"byte_end":234814,"line_start":1318,"line_end":1318,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235035,"byte_end":235064,"line_start":1325,"line_end":1325,"column_start":12,"column_end":41},"name":"clear_half_transfer_interrupt","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_half_transfer_interrupt","value":"pub fn clear_half_transfer_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear half transfer interrupt (htif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear half transfer interrupt (htif) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":234941,"byte_end":235001,"line_start":1323,"line_end":1323,"column_start":5,"column_end":65}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235006,"byte_end":235023,"line_start":1324,"line_end":1324,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235237,"byte_end":235267,"line_start":1331,"line_end":1331,"column_start":12,"column_end":42},"name":"clear_transfer_error_interrupt","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_transfer_error_interrupt","value":"pub fn clear_transfer_error_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear transfer error interrupt (teif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear transfer error interrupt (teif) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235142,"byte_end":235203,"line_start":1329,"line_end":1329,"column_start":5,"column_end":66}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235208,"byte_end":235225,"line_start":1330,"line_end":1330,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235445,"byte_end":235478,"line_start":1337,"line_end":1337,"column_start":12,"column_end":45},"name":"clear_direct_mode_error_interrupt","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_direct_mode_error_interrupt","value":"pub fn clear_direct_mode_error_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear direct mode error interrupt (dmeif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear direct mode error interrupt (dmeif) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235346,"byte_end":235411,"line_start":1335,"line_end":1335,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235416,"byte_end":235433,"line_start":1336,"line_end":1336,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235651,"byte_end":235677,"line_start":1343,"line_end":1343,"column_start":12,"column_end":38},"name":"clear_fifo_error_interrupt","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_fifo_error_interrupt","value":"pub fn clear_fifo_error_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear fifo error interrupt (feif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear fifo error interrupt (feif) for the DMA stream.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235560,"byte_end":235617,"line_start":1341,"line_end":1341,"column_start":5,"column_end":62}},{"value":"inline(always)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235622,"byte_end":235639,"line_start":1342,"line_end":1342,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":236100,"byte_end":236110,"line_start":1354,"line_end":1354,"column_start":19,"column_end":29},"name":"get_stream","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::get_stream","value":"pub unsafe fn get_stream(&mut Self) -> &mut STREAM","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying stream of the transfer.","sig":null,"attributes":[{"value":"/ Get the underlying stream of the transfer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235752,"byte_end":235798,"line_start":1347,"line_end":1347,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235803,"byte_end":235806,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235811,"byte_end":235823,"line_start":1349,"line_end":1349,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235828,"byte_end":235831,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ This implementation relies on several configurations points in order to be sound, this","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235836,"byte_end":235926,"line_start":1351,"line_end":1351,"column_start":5,"column_end":95}},{"value":"/ method can void that. The use of this method is completely discouraged, only use it if you","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":235931,"byte_end":236025,"line_start":1352,"line_end":1352,"column_start":5,"column_end":99}},{"value":"/ know the internals of this API in its entirety.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":236030,"byte_end":236081,"line_start":1353,"line_end":1353,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":2139},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dwt","qualname":"::dwt","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2147},{"krate":0,"index":2150},{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2161},{"krate":0,"index":7527},{"krate":0,"index":7529},{"krate":0,"index":7531},{"krate":0,"index":2170},{"krate":0,"index":2173},{"krate":0,"index":2176},{"krate":0,"index":2179},{"krate":0,"index":2183},{"krate":0,"index":2188},{"krate":0,"index":7532},{"krate":0,"index":7535},{"krate":0,"index":7537},{"krate":0,"index":2195},{"krate":0,"index":7538},{"krate":0,"index":7540},{"krate":0,"index":7542},{"krate":0,"index":2202},{"krate":0,"index":7543},{"krate":0,"index":7545},{"krate":0,"index":7547},{"krate":0,"index":2206}],"decl_id":null,"docs":" Debug and trace and stuff\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4775,"byte_end":4810,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"/ Debug and trace and stuff","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291080,"byte_end":291109,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":2153},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291214,"byte_end":291220,"line_start":7,"line_end":7,"column_start":11,"column_end":17},"name":"DwtExt","qualname":"::dwt::DwtExt","value":"DwtExt","parent":null,"children":[{"krate":0,"index":2154}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291230,"byte_end":291239,"line_start":8,"line_end":8,"column_start":8,"column_end":17},"name":"constrain","qualname":"::dwt::DwtExt::constrain","value":"pub fn constrain(Self, DCB, &Clocks) -> Dwt","parent":{"krate":0,"index":2153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2157},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291640,"byte_end":291643,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"Dwt","qualname":"::dwt::Dwt","value":"Dwt {  }","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160}],"decl_id":null,"docs":" DWT (Data Watchpoint and Trace) unit\n","sig":null,"attributes":[{"value":"/ DWT (Data Watchpoint and Trace) unit","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291588,"byte_end":291628,"line_start":23,"line_end":23,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291851,"byte_end":291858,"line_start":33,"line_end":33,"column_start":19,"column_end":26},"name":"release","qualname":"<Dwt>::release","value":"pub unsafe fn release(Self) -> (DWT, DCB)","parent":null,"children":[],"decl_id":null,"docs":" Release the dwt and dcb control\n # Safety\n All instances of Delay and StopWatch become invalid after this\n","sig":null,"attributes":[{"value":"/ Release the dwt and dcb control","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291709,"byte_end":291744,"line_start":30,"line_end":30,"column_start":5,"column_end":40}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291749,"byte_end":291761,"line_start":31,"line_end":31,"column_start":5,"column_end":17}},{"value":"/ All instances of Delay and StopWatch become invalid after this","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291766,"byte_end":291832,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291959,"byte_end":291964,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"delay","qualname":"<Dwt>::delay","value":"pub fn delay(&Self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Create a delay instance\n","sig":null,"attributes":[{"value":"/ Create a delay instance","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291920,"byte_end":291947,"line_start":36,"line_end":36,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292189,"byte_end":292198,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"stopwatch","qualname":"<Dwt>::stopwatch","value":"pub fn stopwatch<'i>(&Self, &'i mut [u32]) -> StopWatch","parent":null,"children":[],"decl_id":null,"docs":" Create a stopwatch instance\n # Arguments\n * `times` - Array which will be holding the timings in ticks (max laps == times.len()-1)\n","sig":null,"attributes":[{"value":"/ Create a stopwatch instance","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292029,"byte_end":292060,"line_start":40,"line_end":40,"column_start":5,"column_end":36}},{"value":"/ # Arguments","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292065,"byte_end":292080,"line_start":41,"line_end":41,"column_start":5,"column_end":20}},{"value":"/ * `times` - Array which will be holding the timings in ticks (max laps == times.len()-1)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292085,"byte_end":292177,"line_start":42,"line_end":42,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292611,"byte_end":292618,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"measure","qualname":"<Dwt>::measure","value":"pub fn measure<F: FnOnce() -> ()>(&Self, F) -> ClockDuration","parent":null,"children":[],"decl_id":null,"docs":" Measure cycles it takes to execute closure `f`.","sig":null,"attributes":[{"value":"/ Measure cycles it takes to execute closure `f`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292303,"byte_end":292354,"line_start":46,"line_end":46,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292359,"byte_end":292362,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Since DWT Cycle Counter is a 32-bit counter that wraps around to 0 on overflow,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292367,"byte_end":292450,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ users should be aware that `Dwt::measure` cannot correctly measure running time of","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292455,"byte_end":292541,"line_start":49,"line_end":49,"column_start":5,"column_end":91}},{"value":"/ closures which take longer than `u32::MAX` cycles","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292546,"byte_end":292599,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7527},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292849,"byte_end":292854,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"Delay","qualname":"::dwt::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":7528}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292942,"byte_end":292947,"line_start":65,"line_end":65,"column_start":12,"column_end":17},"name":"delay","qualname":"<Delay>::delay","value":"pub fn delay(ClockDuration)","parent":null,"children":[],"decl_id":null,"docs":" Delay for `ClockDuration::ticks`\n","sig":null,"attributes":[{"value":"/ Delay for `ClockDuration::ticks`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292894,"byte_end":292930,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2183},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":295908,"byte_end":295917,"line_start":142,"line_end":142,"column_start":12,"column_end":21},"name":"StopWatch","qualname":"::dwt::StopWatch","value":"StopWatch {  }","parent":null,"children":[{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187}],"decl_id":null,"docs":" Very simple stopwatch which reads from DWT Cycle Counter to record timing.","sig":null,"attributes":[{"value":"/ Very simple stopwatch which reads from DWT Cycle Counter to record timing.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":295612,"byte_end":295690,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":295691,"byte_end":295694,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Since DWT Cycle Counter is a 32-bit counter that wraps around to 0 on overflow,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":295695,"byte_end":295778,"line_start":139,"line_end":139,"column_start":1,"column_end":84}},{"value":"/ users should be aware that `StopWatch` cannot correctly measure laps","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":295779,"byte_end":295851,"line_start":140,"line_end":140,"column_start":1,"column_end":73}},{"value":"/ which take longer than `u32::MAX` cycles","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":295852,"byte_end":295896,"line_start":141,"line_end":141,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":296532,"byte_end":296541,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"lap_count","qualname":"<StopWatch>::lap_count","value":"pub fn lap_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the numbers of laps recorded\n","sig":null,"attributes":[{"value":"/ Returns the numbers of laps recorded","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":296480,"byte_end":296520,"line_start":162,"line_end":162,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":296648,"byte_end":296653,"line_start":167,"line_end":167,"column_start":12,"column_end":17},"name":"reset","qualname":"<StopWatch>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets recorded laps to 0 and sets 0 offset\n","sig":null,"attributes":[{"value":"/ Resets recorded laps to 0 and sets 0 offset","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":296589,"byte_end":296636,"line_start":166,"line_end":166,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":296848,"byte_end":296851,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"lap","qualname":"<StopWatch>::lap","value":"pub fn lap(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Record a new lap.","sig":null,"attributes":[{"value":"/ Record a new lap.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":296745,"byte_end":296766,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":296771,"byte_end":296774,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If lap count exceeds maximum, the last lap is updated","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":296779,"byte_end":296836,"line_start":173,"line_end":173,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297171,"byte_end":297179,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"lap_time","qualname":"<StopWatch>::lap_time","value":"pub fn lap_time(&Self, usize) -> Option<ClockDuration>","parent":null,"children":[],"decl_id":null,"docs":" Calculate the time of lap n (n starting with 1).","sig":null,"attributes":[{"value":"/ Calculate the time of lap n (n starting with 1).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297055,"byte_end":297107,"line_start":182,"line_end":182,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297112,"byte_end":297115,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Returns None if `n` is out of range","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297120,"byte_end":297159,"line_start":184,"line_end":184,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":7532},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297568,"byte_end":297581,"line_start":199,"line_end":199,"column_start":12,"column_end":25},"name":"ClockDuration","qualname":"::dwt::ClockDuration","value":"ClockDuration {  }","parent":null,"children":[{"krate":0,"index":7533},{"krate":0,"index":7534}],"decl_id":null,"docs":" Clock difference with capability to calculate SI units (s)\n","sig":null,"attributes":[{"value":"/ Clock difference with capability to calculate SI units (s)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297471,"byte_end":297533,"line_start":197,"line_end":197,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297674,"byte_end":297682,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"as_ticks","qualname":"<ClockDuration>::as_ticks","value":"pub fn as_ticks(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns ticks\n","sig":null,"attributes":[{"value":"/ Returns ticks","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297645,"byte_end":297662,"line_start":204,"line_end":204,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297785,"byte_end":297794,"line_start":209,"line_end":209,"column_start":12,"column_end":21},"name":"as_millis","qualname":"<ClockDuration>::as_millis","value":"pub fn as_millis(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns calculated milliseconds as integer\n","sig":null,"attributes":[{"value":"/ Returns calculated milliseconds as integer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297727,"byte_end":297773,"line_start":208,"line_end":208,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297938,"byte_end":297947,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"name":"as_micros","qualname":"<ClockDuration>::as_micros","value":"pub fn as_micros(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns calculated microseconds as integer\n","sig":null,"attributes":[{"value":"/ Returns calculated microseconds as integer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297880,"byte_end":297926,"line_start":212,"line_end":212,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298094,"byte_end":298102,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"as_nanos","qualname":"<ClockDuration>::as_nanos","value":"pub fn as_nanos(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns calculated nanoseconds as integer\n","sig":null,"attributes":[{"value":"/ Returns calculated nanoseconds as integer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298037,"byte_end":298082,"line_start":216,"line_end":216,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298253,"byte_end":298264,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"as_secs_f32","qualname":"<ClockDuration>::as_secs_f32","value":"pub fn as_secs_f32(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Return calculated seconds as 32-bit float\n","sig":null,"attributes":[{"value":"/ Return calculated seconds as 32-bit float","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298196,"byte_end":298241,"line_start":220,"line_end":220,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298399,"byte_end":298410,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"as_secs_f64","qualname":"<ClockDuration>::as_secs_f64","value":"pub fn as_secs_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Return calculated seconds as 64-bit float\n","sig":null,"attributes":[{"value":"/ Return calculated seconds as 64-bit float","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298342,"byte_end":298387,"line_start":224,"line_end":224,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7538},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298843,"byte_end":298852,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"MonoTimer","qualname":"::dwt::MonoTimer","value":"MonoTimer {  }","parent":null,"children":[{"krate":0,"index":7539}],"decl_id":null,"docs":" A monotonic non-decreasing timer","sig":null,"attributes":[{"value":"/ A monotonic non-decreasing timer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298487,"byte_end":298523,"line_start":230,"line_end":230,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298524,"byte_end":298527,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ This uses the timer in the debug watch trace peripheral. This means, that if the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298528,"byte_end":298612,"line_start":232,"line_end":232,"column_start":1,"column_end":85}},{"value":"/ core is stopped, the timer does not count up. This may be relevant if you are using","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298613,"byte_end":298700,"line_start":233,"line_end":233,"column_start":1,"column_end":88}},{"value":"/ cortex_m_semihosting::hprintln for debugging in which case the timer will be stopped","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298701,"byte_end":298789,"line_start":234,"line_end":234,"column_start":1,"column_end":89}},{"value":"/ while printing","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298790,"byte_end":298808,"line_start":235,"line_end":235,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298948,"byte_end":298951,"line_start":243,"line_end":243,"column_start":12,"column_end":15},"name":"new","qualname":"<MonoTimer>::new","value":"pub fn new(DWT, DCB, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Monotonic` timer\n","sig":null,"attributes":[{"value":"/ Creates a new `Monotonic` timer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298901,"byte_end":298936,"line_start":242,"line_end":242,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":299313,"byte_end":299322,"line_start":256,"line_end":256,"column_start":12,"column_end":21},"name":"frequency","qualname":"<MonoTimer>::frequency","value":"pub fn frequency(Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency at which the monotonic timer is operating at\n","sig":null,"attributes":[{"value":"/ Returns the frequency at which the monotonic timer is operating at","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":299231,"byte_end":299301,"line_start":255,"line_end":255,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":299433,"byte_end":299436,"line_start":261,"line_end":261,"column_start":12,"column_end":15},"name":"now","qualname":"<MonoTimer>::now","value":"pub fn now(Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\"\n","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\"","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":299374,"byte_end":299421,"line_start":260,"line_end":260,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7543},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":299622,"byte_end":299629,"line_start":270,"line_end":270,"column_start":12,"column_end":19},"name":"Instant","qualname":"::dwt::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7544}],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock\n","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":299530,"byte_end":299587,"line_start":268,"line_end":268,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":299729,"byte_end":299736,"line_start":276,"line_end":276,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Ticks elapsed since the `Instant` was created\n","sig":null,"attributes":[{"value":"/ Ticks elapsed since the `Instant` was created","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":299668,"byte_end":299717,"line_start":275,"line_end":275,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":2208},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flash","qualname":"::flash","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2213},{"krate":0,"index":2216},{"krate":0,"index":2219},{"krate":0,"index":2222},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2229},{"krate":0,"index":7548},{"krate":0,"index":7559},{"krate":0,"index":7561},{"krate":0,"index":7563},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2241},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2259},{"krate":0,"index":2262},{"krate":0,"index":2264},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2277},{"krate":0,"index":2279},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2297},{"krate":0,"index":2302},{"krate":0,"index":2308},{"krate":0,"index":2314}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4824,"byte_end":4859,"line_start":145,"line_end":145,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7549},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300053,"byte_end":300072,"line_start":10,"line_end":10,"column_start":5,"column_end":24},"name":"ProgrammingSequence","qualname":"::flash::Error::ProgrammingSequence","value":"Error::ProgrammingSequence","parent":{"krate":0,"index":7548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7551},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300078,"byte_end":300100,"line_start":11,"line_end":11,"column_start":5,"column_end":27},"name":"ProgrammingParallelism","qualname":"::flash::Error::ProgrammingParallelism","value":"Error::ProgrammingParallelism","parent":{"krate":0,"index":7548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7553},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300106,"byte_end":300126,"line_start":12,"line_end":12,"column_start":5,"column_end":25},"name":"ProgrammingAlignment","qualname":"::flash::Error::ProgrammingAlignment","value":"Error::ProgrammingAlignment","parent":{"krate":0,"index":7548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7555},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300132,"byte_end":300147,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"name":"WriteProtection","qualname":"::flash::Error::WriteProtection","value":"Error::WriteProtection","parent":{"krate":0,"index":7548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7557},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300153,"byte_end":300162,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"name":"Operation","qualname":"::flash::Error::Operation","value":"Error::Operation","parent":{"krate":0,"index":7548},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7548},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300041,"byte_end":300046,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Error","qualname":"::flash::Error","value":"pub enum Error {\n    ProgrammingSequence,\n    ProgrammingParallelism,\n    ProgrammingAlignment,\n    WriteProtection,\n    Operation,\n}","parent":null,"children":[{"krate":0,"index":7549},{"krate":0,"index":7551},{"krate":0,"index":7553},{"krate":0,"index":7555},{"krate":0,"index":7557}],"decl_id":null,"docs":" Flash erase/program error\n","sig":null,"attributes":[{"value":"/ Flash erase/program error","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":299972,"byte_end":300001,"line_start":7,"line_end":7,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":2234},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300805,"byte_end":300813,"line_start":38,"line_end":38,"column_start":11,"column_end":19},"name":"FlashExt","qualname":"::flash::FlashExt","value":"FlashExt","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240}],"decl_id":null,"docs":" Flash methods implemented for `pac::FLASH`\n","sig":null,"attributes":[{"value":"/ Flash methods implemented for `pac::FLASH`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300709,"byte_end":300755,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300756,"byte_end":300794,"line_start":37,"line_end":37,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300853,"byte_end":300860,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"address","qualname":"::flash::FlashExt::address","value":"pub fn address(&Self) -> usize","parent":{"krate":0,"index":2234},"children":[],"decl_id":null,"docs":" Memory-mapped address\n","sig":null,"attributes":[{"value":"/ Memory-mapped address","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300820,"byte_end":300845,"line_start":39,"line_end":39,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300907,"byte_end":300910,"line_start":42,"line_end":42,"column_start":8,"column_end":11},"name":"len","qualname":"::flash::FlashExt::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":2234},"children":[],"decl_id":null,"docs":" Size in bytes\n","sig":null,"attributes":[{"value":"/ Size in bytes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300882,"byte_end":300899,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300984,"byte_end":300988,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"read","qualname":"::flash::FlashExt::read","value":"pub fn read(&Self) -> &[u8]","parent":{"krate":0,"index":2234},"children":[],"decl_id":null,"docs":" Returns a read-only view of flash memory\n","sig":null,"attributes":[{"value":"/ Returns a read-only view of flash memory","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300932,"byte_end":300976,"line_start":43,"line_end":43,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":301215,"byte_end":301223,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"unlocked","qualname":"::flash::FlashExt::unlocked","value":"pub fn unlocked(&mut Self) -> UnlockedFlash","parent":{"krate":0,"index":2234},"children":[],"decl_id":null,"docs":" Unlock flash for erasing/programming until this method's\n result is dropped\n","sig":null,"attributes":[{"value":"/ Unlock flash for erasing/programming until this method's","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":301121,"byte_end":301181,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/ result is dropped","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":301186,"byte_end":301207,"line_start":49,"line_end":49,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":301318,"byte_end":301327,"line_start":52,"line_end":52,"column_start":8,"column_end":17},"name":"dual_bank","qualname":"::flash::FlashExt::dual_bank","value":"pub fn dual_bank(&Self) -> bool","parent":{"krate":0,"index":2234},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":301446,"byte_end":301452,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"sector","qualname":"::flash::FlashExt::sector","value":"pub fn sector(&Self, usize) -> Option<FlashSector>","parent":{"krate":0,"index":2234},"children":[],"decl_id":null,"docs":" Returns flash memory sector of a given offset. Returns none if offset is out of range.\n","sig":null,"attributes":[{"value":"/ Returns flash memory sector of a given offset. Returns none if offset is out of range.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":301348,"byte_end":301438,"line_start":53,"line_end":53,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":2249},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303349,"byte_end":303360,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"LockedFlash","qualname":"::flash::LockedFlash","value":"LockedFlash {  }","parent":null,"children":[{"krate":0,"index":2250}],"decl_id":null,"docs":" Read-only flash","sig":null,"attributes":[{"value":"/ Read-only flash","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":302829,"byte_end":302848,"line_start":104,"line_end":104,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":302849,"byte_end":302852,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":302853,"byte_end":302867,"line_start":106,"line_end":106,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":302868,"byte_end":302871,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":302872,"byte_end":302879,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::pac::Peripherals;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":302880,"byte_end":302920,"line_start":109,"line_end":109,"column_start":1,"column_end":41}},{"value":"/ use stm32f4xx_hal::flash::LockedFlash;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":302921,"byte_end":302963,"line_start":110,"line_end":110,"column_start":1,"column_end":43}},{"value":"/ use embedded_storage::nor_flash::ReadNorFlash;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":302964,"byte_end":303014,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303015,"byte_end":303018,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ let dp = Peripherals::take().unwrap();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303019,"byte_end":303061,"line_start":113,"line_end":113,"column_start":1,"column_end":43}},{"value":"/ let mut flash = LockedFlash::new(dp.FLASH);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303062,"byte_end":303109,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/ println!(\"Flash capacity: {}\", ReadNorFlash::capacity(&flash));","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303110,"byte_end":303177,"line_start":115,"line_end":115,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303178,"byte_end":303181,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 64];","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303182,"byte_end":303210,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/ ReadNorFlash::read(&mut flash, 0x0, &mut buf).unwrap();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303211,"byte_end":303270,"line_start":118,"line_end":118,"column_start":1,"column_end":60}},{"value":"/ println!(\"First 64 bytes of flash memory: {:?}\", buf);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303271,"byte_end":303329,"line_start":119,"line_end":119,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303330,"byte_end":303337,"line_start":120,"line_end":120,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303414,"byte_end":303417,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<LockedFlash>::new","value":"pub fn new(FLASH) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2259},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304659,"byte_end":304672,"line_start":178,"line_end":178,"column_start":12,"column_end":25},"name":"UnlockedFlash","qualname":"::flash::UnlockedFlash","value":"UnlockedFlash {  }","parent":null,"children":[{"krate":0,"index":2261}],"decl_id":null,"docs":" Result of `FlashExt::unlocked()`","sig":null,"attributes":[{"value":"/ Result of `FlashExt::unlocked()`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303895,"byte_end":303931,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303932,"byte_end":303935,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303936,"byte_end":303950,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303951,"byte_end":303954,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303955,"byte_end":303962,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::pac::Peripherals;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303963,"byte_end":304003,"line_start":158,"line_end":158,"column_start":1,"column_end":41}},{"value":"/ use stm32f4xx_hal::flash::{FlashExt, LockedFlash, UnlockedFlash};","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304004,"byte_end":304073,"line_start":159,"line_end":159,"column_start":1,"column_end":70}},{"value":"/ use embedded_storage::nor_flash::NorFlash;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304074,"byte_end":304120,"line_start":160,"line_end":160,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304121,"byte_end":304124,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ let dp = Peripherals::take().unwrap();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304125,"byte_end":304167,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/ let mut flash = LockedFlash::new(dp.FLASH);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304168,"byte_end":304215,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304216,"byte_end":304219,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ // Unlock flash for writing","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304220,"byte_end":304251,"line_start":165,"line_end":165,"column_start":1,"column_end":32}},{"value":"/ let mut unlocked_flash = flash.unlocked();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304252,"byte_end":304298,"line_start":166,"line_end":166,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304299,"byte_end":304302,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ // Erase the second 128 KB sector.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304303,"byte_end":304341,"line_start":168,"line_end":168,"column_start":1,"column_end":39}},{"value":"/ NorFlash::erase(&mut unlocked_flash, 128 * 1024, 256 * 1024).unwrap();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304342,"byte_end":304416,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304417,"byte_end":304420,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ // Write some data at the start of the second 128 KB sector.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304421,"byte_end":304485,"line_start":171,"line_end":171,"column_start":1,"column_end":65}},{"value":"/ let buf = [0u8; 64];","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304486,"byte_end":304510,"line_start":172,"line_end":172,"column_start":1,"column_end":25}},{"value":"/ NorFlash::write(&mut unlocked_flash, 128 * 1024, &buf).unwrap();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304511,"byte_end":304579,"line_start":173,"line_end":173,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304580,"byte_end":304583,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ // Lock flash by dropping","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304584,"byte_end":304613,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ drop(unlocked_flash);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304614,"byte_end":304639,"line_start":176,"line_end":176,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304640,"byte_end":304647,"line_start":177,"line_end":177,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":305040,"byte_end":305045,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"erase","qualname":"<UnlockedFlash>::erase","value":"pub fn erase(&mut Self, u8) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Erase a flash sector","sig":null,"attributes":[{"value":"/ Erase a flash sector","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304893,"byte_end":304917,"line_start":190,"line_end":190,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304922,"byte_end":304925,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Refer to the reference manual to see which sector corresponds","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304930,"byte_end":304995,"line_start":192,"line_end":192,"column_start":5,"column_end":70}},{"value":"/ to which memory address.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":305000,"byte_end":305028,"line_start":193,"line_end":193,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":305701,"byte_end":305708,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"program","qualname":"<UnlockedFlash>::program","value":"pub fn program<'a, I>(&mut Self, usize, I) -> Result<(), Error> where\nI: Iterator<Item = &'a u8>","parent":null,"children":[],"decl_id":null,"docs":" Program bytes with offset into flash memory,\n aligned to 128-bit rows\n","sig":null,"attributes":[{"value":"/ Program bytes with offset into flash memory,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":305609,"byte_end":305657,"line_start":214,"line_end":214,"column_start":5,"column_end":53}},{"value":"/ aligned to 128-bit rows","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":305662,"byte_end":305689,"line_start":215,"line_end":215,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2279},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307527,"byte_end":307538,"line_start":280,"line_end":280,"column_start":12,"column_end":23},"name":"FlashSector","qualname":"::flash::FlashSector","value":"FlashSector { number, offset, size }","parent":null,"children":[{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282}],"decl_id":null,"docs":" Flash memory sector\n","sig":null,"attributes":[{"value":"/ Flash memory sector","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307492,"byte_end":307515,"line_start":279,"line_end":279,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2280},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307571,"byte_end":307577,"line_start":282,"line_end":282,"column_start":9,"column_end":15},"name":"number","qualname":"::flash::FlashSector::number","value":"u8","parent":{"krate":0,"index":2279},"children":[],"decl_id":null,"docs":" Sector number\n","sig":null,"attributes":[{"value":"/ Sector number","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307545,"byte_end":307562,"line_start":281,"line_end":281,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2281},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307631,"byte_end":307637,"line_start":284,"line_end":284,"column_start":9,"column_end":15},"name":"offset","qualname":"::flash::FlashSector::offset","value":"usize","parent":{"krate":0,"index":2279},"children":[],"decl_id":null,"docs":" Offset from base memory address\n","sig":null,"attributes":[{"value":"/ Offset from base memory address","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307587,"byte_end":307622,"line_start":283,"line_end":283,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2282},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307683,"byte_end":307687,"line_start":286,"line_end":286,"column_start":9,"column_end":13},"name":"size","qualname":"::flash::FlashSector::size","value":"usize","parent":{"krate":0,"index":2279},"children":[],"decl_id":null,"docs":" Sector size in bytes\n","sig":null,"attributes":[{"value":"/ Sector size in bytes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307650,"byte_end":307674,"line_start":285,"line_end":285,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307789,"byte_end":307797,"line_start":291,"line_end":291,"column_start":12,"column_end":20},"name":"contains","qualname":"<FlashSector>::contains","value":"pub fn contains(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if given offset belongs to this sector\n","sig":null,"attributes":[{"value":"/ Returns true if given offset belongs to this sector","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307722,"byte_end":307777,"line_start":290,"line_end":290,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2285},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":308032,"byte_end":308051,"line_start":298,"line_end":298,"column_start":12,"column_end":31},"name":"FlashSectorIterator","qualname":"::flash::FlashSectorIterator","value":"FlashSectorIterator {  }","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289}],"decl_id":null,"docs":" Iterator of flash memory sectors in a single bank.\n Yields a size sequence of [16, 16, 16, 64, 128, 128, ..]\n","sig":null,"attributes":[{"value":"/ Iterator of flash memory sectors in a single bank.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307905,"byte_end":307959,"line_start":296,"line_end":296,"column_start":1,"column_end":55}},{"value":"/ Yields a size sequence of [16, 16, 16, 64, 128, 128, ..]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307960,"byte_end":308020,"line_start":297,"line_end":297,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2295},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":309299,"byte_end":309312,"line_start":346,"line_end":346,"column_start":8,"column_end":21},"name":"flash_sectors","qualname":"::flash::flash_sectors","value":"pub fn flash_sectors(usize, bool) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns iterator of flash memory sectors for single and dual bank flash.\n Sectors are returned in continuous memory order, while sector numbers can have spaces between banks.\n","sig":null,"attributes":[{"value":"/ Returns iterator of flash memory sectors for single and dual bank flash.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":309110,"byte_end":309186,"line_start":344,"line_end":344,"column_start":1,"column_end":77}},{"value":"/ Sectors are returned in continuous memory order, while sector numbers can have spaces between banks.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":309187,"byte_end":309291,"line_start":345,"line_end":345,"column_start":1,"column_end":105}}]},{"kind":"Mod","id":{"krate":0,"index":2316},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":2317},{"krate":0,"index":2320},{"krate":0,"index":2323},{"krate":0,"index":2326},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2363},{"krate":0,"index":2366},{"krate":0,"index":2369},{"krate":0,"index":2372},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2381},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2393},{"krate":0,"index":2396}],"decl_id":null,"docs":" Convenience re-export of multiple traits.","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5010,"byte_end":5045,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/ Convenience re-export of multiple traits.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311477,"byte_end":311522,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311523,"byte_end":311526,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This allows a HAL user to conveniently import this module and have all the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311527,"byte_end":311605,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ helper traits already imported.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311606,"byte_end":311641,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/ Otherwise the use of peripherals would require the import of the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311642,"byte_end":311710,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ corresponding module and the import of the trait, which connects this HAL","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311711,"byte_end":311788,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ to the autogenerated svd2rust API in [crate::pac].","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311789,"byte_end":311843,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311844,"byte_end":311847,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311848,"byte_end":311861,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311862,"byte_end":311865,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Consider the following code.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311866,"byte_end":311898,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311899,"byte_end":311902,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311903,"byte_end":311910,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ #[entry]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311911,"byte_end":311923,"line_start":14,"line_end":14,"column_start":1,"column_end":13}},{"value":"/ fn main() -> ! {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311924,"byte_end":311944,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/     let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311945,"byte_end":311996,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/     let gpiog = dp.GPIOG.split();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":311997,"byte_end":312034,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/     let mut led1 = gpiog.pg13.into_push_pull_output();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312035,"byte_end":312093,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/     led1.set_high().unwrap();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312094,"byte_end":312127,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312128,"byte_end":312133,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312134,"byte_end":312141,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312142,"byte_end":312145,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Without the prelude we would have to import the following traits:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312146,"byte_end":312215,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312216,"byte_end":312219,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312220,"byte_end":312227,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::gpio::GpioExt; // for the split method.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312228,"byte_end":312290,"line_start":26,"line_end":26,"column_start":1,"column_end":63}},{"value":"/ use embedded_hal::digital::v2::OutputPin; // for the set_high() function.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312291,"byte_end":312368,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ // And more use-statements with more complex code.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312369,"byte_end":312423,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312424,"byte_end":312431,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312432,"byte_end":312435,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ These imports are a bit unintuitive, because we can create the objects","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312436,"byte_end":312510,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ without the import. But we need these traits to access most of their","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312511,"byte_end":312583,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ functions.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312584,"byte_end":312598,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312599,"byte_end":312602,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The prelude module keeps the import section cleaner:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312603,"byte_end":312659,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312660,"byte_end":312667,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::prelude::*;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312668,"byte_end":312702,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/prelude.rs","byte_start":312703,"byte_end":312710,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2399},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"qei","qualname":"::qei","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","parent":null,"children":[{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2407},{"krate":0,"index":2410},{"krate":0,"index":2412},{"krate":0,"index":2415},{"krate":0,"index":2418},{"krate":0,"index":2422},{"krate":0,"index":2428},{"krate":0,"index":2433},{"krate":0,"index":2437},{"krate":0,"index":2441},{"krate":0,"index":2447},{"krate":0,"index":2450},{"krate":0,"index":7566},{"krate":0,"index":7573},{"krate":0,"index":7580},{"krate":0,"index":7587},{"krate":0,"index":7594}],"decl_id":null,"docs":" # Quadrature Encoder Interface\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5063,"byte_end":5098,"line_start":155,"line_end":155,"column_start":1,"column_end":36}},{"value":"/ # Quadrature Encoder Interface","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":314927,"byte_end":314961,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":2410},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315017,"byte_end":315021,"line_start":4,"line_end":4,"column_start":11,"column_end":15},"name":"Pins","qualname":"::qei::Pins","value":"Pins<TIM>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2415},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315065,"byte_end":315071,"line_start":7,"line_end":7,"column_start":11,"column_end":17},"name":"QeiExt","qualname":"::qei::QeiExt","value":"QeiExt<PINS>: Sized","parent":null,"children":[{"krate":0,"index":2417}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315094,"byte_end":315097,"line_start":8,"line_end":8,"column_start":8,"column_end":11},"name":"qei","qualname":"::qei::QeiExt::qei","value":"pub fn qei(Self, PINS) -> Qei<Self, PINS>","parent":{"krate":0,"index":2415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2428},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315478,"byte_end":315481,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"Qei","qualname":"::qei::Qei","value":"Qei {  }","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432}],"decl_id":null,"docs":" Hardware quadrature encoder interface peripheral\n","sig":null,"attributes":[{"value":"/ Hardware quadrature encoder interface peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315414,"byte_end":315466,"line_start":28,"line_end":28,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315685,"byte_end":315688,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Qei<TIM, PINS>>::new","value":"pub fn new(TIM, PINS) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a quadrature encoder interface input\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a quadrature encoder interface input","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315602,"byte_end":315673,"line_start":38,"line_end":38,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316118,"byte_end":316125,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"release","qualname":"<Qei<TIM, PINS>>::release","value":"pub fn release(Self) -> (TIM, PINS)","parent":null,"children":[],"decl_id":null,"docs":" Releases the TIM peripheral and QEI pins\n","sig":null,"attributes":[{"value":"/ Releases the TIM peripheral and QEI pins","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316062,"byte_end":316106,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2447},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316593,"byte_end":316601,"line_start":75,"line_end":75,"column_start":11,"column_end":19},"name":"Instance","qualname":"::qei::Instance","value":"Instance: crate::Sealed + rcc::Enable + rcc::Reset + General","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2448},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316663,"byte_end":316672,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"setup_qei","qualname":"::qei::Instance::setup_qei","value":"pub fn setup_qei(&mut Self)","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316693,"byte_end":316707,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"read_direction","qualname":"::qei::Instance::read_direction","value":"pub fn read_direction(&Self) -> bool","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2451},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rcc","qualname":"::rcc","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","parent":null,"children":[{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2456},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2463},{"krate":0,"index":2466},{"krate":0,"index":2469},{"krate":0,"index":2472},{"krate":0,"index":2475},{"krate":0,"index":2478},{"krate":0,"index":2514},{"krate":0,"index":2523},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2540},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2603},{"krate":0,"index":7964},{"krate":0,"index":7970},{"krate":0,"index":7971},{"krate":0,"index":7973},{"krate":0,"index":7974},{"krate":0,"index":7977},{"krate":0,"index":7978},{"krate":0,"index":7980},{"krate":0,"index":7982},{"krate":0,"index":7985},{"krate":0,"index":7986},{"krate":0,"index":7988},{"krate":0,"index":7989},{"krate":0,"index":7992},{"krate":0,"index":7993},{"krate":0,"index":7995},{"krate":0,"index":2630},{"krate":0,"index":7997},{"krate":0,"index":8000},{"krate":0,"index":8001},{"krate":0,"index":8003},{"krate":0,"index":8004},{"krate":0,"index":8007},{"krate":0,"index":8008},{"krate":0,"index":8010},{"krate":0,"index":2632},{"krate":0,"index":8012},{"krate":0,"index":8021},{"krate":0,"index":8022},{"krate":0,"index":8024},{"krate":0,"index":8025},{"krate":0,"index":8028},{"krate":0,"index":8029},{"krate":0,"index":8031},{"krate":0,"index":2636}],"decl_id":null,"docs":" Clock configuration.","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5112,"byte_end":5147,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"/ Clock configuration.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318445,"byte_end":318469,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318470,"byte_end":318473,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides functionality to configure the RCC to generate the requested clocks.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318474,"byte_end":318567,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318568,"byte_end":318571,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318572,"byte_end":318585,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318586,"byte_end":318589,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318590,"byte_end":318597,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318598,"byte_end":318645,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/ let clocks = rcc","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318646,"byte_end":318666,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/     .cfgr","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318667,"byte_end":318680,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/     .use_hse(8.MHz())","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318681,"byte_end":318706,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/     .sysclk(168.MHz())","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318707,"byte_end":318733,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/     .pclk1(24.MHz())","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318734,"byte_end":318758,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/     .i2s_clk(86.MHz())","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318759,"byte_end":318785,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/     .require_pll48clk()","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318786,"byte_end":318813,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/     .freeze();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318814,"byte_end":318832,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/     // Test that the I2S clock is suitable for 48000kHz audio.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318833,"byte_end":318899,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/     assert!(clocks.i2s_clk().unwrap() == 48.MHz().into());","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318900,"byte_end":318962,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318963,"byte_end":318970,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318971,"byte_end":318974,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318975,"byte_end":318992,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318993,"byte_end":318996,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Unlike the clock configuration tool provided by ST, the code does not extensively search all","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":318997,"byte_end":319093,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ possible configurations. Instead, it often relies on an iterative approach to reduce","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":319094,"byte_end":319182,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ compitational complexity. On most MCUs the code will first generate a configuration for the 48","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":319183,"byte_end":319281,"line_start":25,"line_end":25,"column_start":1,"column_end":99}},{"value":"/ MHz clock and the system clock without taking other requested clocks into account, even if the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":319282,"byte_end":319380,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ accuracy of these clocks is affected. **If you specific accuracy requirements, you should","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":319381,"byte_end":319474,"line_start":27,"line_end":27,"column_start":1,"column_end":94}},{"value":"/ always check the resulting frequencies!**","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":319475,"byte_end":319520,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":319521,"byte_end":319524,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Whereas the hardware often supports flexible clock source selection and many clocks can be","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":319525,"byte_end":319619,"line_start":30,"line_end":30,"column_start":1,"column_end":95}},{"value":"/ sourced from multiple PLLs, the code implements a fixed mapping between PLLs and clocks. The 48","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":319620,"byte_end":319719,"line_start":31,"line_end":31,"column_start":1,"column_end":100}},{"value":"/ MHz clock is always generated by the main PLL, the I2S clocks are always generated by the I2S","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":319720,"byte_end":319817,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ PLL (unless a matching external clock input is provided), and similarly the SAI clocks are","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":319818,"byte_end":319912,"line_start":33,"line_end":33,"column_start":1,"column_end":95}},{"value":"/ always generated by the SAI PLL. It is therefore not possible to, for example, specify two","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":319913,"byte_end":320007,"line_start":34,"line_end":34,"column_start":1,"column_end":95}},{"value":"/ different I2S frequencies unless you also provide a matching I2S_CKIN signal for one of them.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":320008,"byte_end":320105,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":320106,"byte_end":320109,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Some MCUs have limited clock generation hardware and do not provide either I2S or SAI PLLs even","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":320110,"byte_end":320209,"line_start":37,"line_end":37,"column_start":1,"column_end":100}},{"value":"/ though I2S or SAI are available. On the STM32F410, the I2S clock is generated by the main PLL,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":320210,"byte_end":320308,"line_start":38,"line_end":38,"column_start":1,"column_end":99}},{"value":"/ and on the STM32F413/423 SAI clocks are generated by the I2S PLL. On these MCUs, the actual","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":320309,"byte_end":320404,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ frequencies may substantially deviate from the requested frequencies.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":320405,"byte_end":320478,"line_start":40,"line_end":40,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":2526},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321009,"byte_end":321015,"line_start":68,"line_end":68,"column_start":11,"column_end":17},"name":"RccBus","qualname":"::rcc::RccBus","value":"RccBus: crate::Sealed","parent":null,"children":[{"krate":0,"index":2527}],"decl_id":null,"docs":" Bus associated to peripheral\n","sig":null,"attributes":[{"value":"/ Bus associated to peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":320966,"byte_end":320998,"line_start":67,"line_end":67,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":2527},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321060,"byte_end":321063,"line_start":70,"line_end":70,"column_start":10,"column_end":13},"name":"Bus","qualname":"::rcc::RccBus::Bus","value":"type Bus;","parent":{"krate":0,"index":2526},"children":[],"decl_id":null,"docs":" Bus type;\n","sig":null,"attributes":[{"value":"/ Bus type;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321037,"byte_end":321050,"line_start":69,"line_end":69,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":2528},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321108,"byte_end":321114,"line_start":74,"line_end":74,"column_start":11,"column_end":17},"name":"Enable","qualname":"::rcc::Enable","value":"Enable: RccBus","parent":null,"children":[{"krate":0,"index":2529},{"krate":0,"index":2530}],"decl_id":null,"docs":" Enable/disable peripheral\n","sig":null,"attributes":[{"value":"/ Enable/disable peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321068,"byte_end":321097,"line_start":73,"line_end":73,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321132,"byte_end":321138,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"enable","qualname":"::rcc::Enable::enable","value":"pub fn enable(&RccRB)","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321160,"byte_end":321167,"line_start":76,"line_end":76,"column_start":8,"column_end":15},"name":"disable","qualname":"::rcc::Enable::disable","value":"pub fn disable(&RccRB)","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2531},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321235,"byte_end":321243,"line_start":80,"line_end":80,"column_start":11,"column_end":19},"name":"LPEnable","qualname":"::rcc::LPEnable","value":"LPEnable: RccBus","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533}],"decl_id":null,"docs":" Low power enable/disable peripheral\n","sig":null,"attributes":[{"value":"/ Low power enable/disable peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321185,"byte_end":321224,"line_start":79,"line_end":79,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321261,"byte_end":321277,"line_start":81,"line_end":81,"column_start":8,"column_end":24},"name":"low_power_enable","qualname":"::rcc::LPEnable::low_power_enable","value":"pub fn low_power_enable(&RccRB)","parent":{"krate":0,"index":2531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321299,"byte_end":321316,"line_start":82,"line_end":82,"column_start":8,"column_end":25},"name":"low_power_disable","qualname":"::rcc::LPEnable::low_power_disable","value":"pub fn low_power_disable(&RccRB)","parent":{"krate":0,"index":2531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2534},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321365,"byte_end":321370,"line_start":86,"line_end":86,"column_start":11,"column_end":16},"name":"Reset","qualname":"::rcc::Reset","value":"Reset: RccBus","parent":null,"children":[{"krate":0,"index":2535}],"decl_id":null,"docs":" Reset peripheral\n","sig":null,"attributes":[{"value":"/ Reset peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321334,"byte_end":321354,"line_start":85,"line_end":85,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321388,"byte_end":321393,"line_start":87,"line_end":87,"column_start":8,"column_end":13},"name":"reset","qualname":"::rcc::Reset::reset","value":"pub fn reset(&RccRB)","parent":{"krate":0,"index":2534},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2536},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321478,"byte_end":321484,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"name":"RccExt","qualname":"::rcc::RccExt","value":"RccExt","parent":null,"children":[{"krate":0,"index":2537}],"decl_id":null,"docs":" Extension trait that constrains the `RCC` peripheral\n","sig":null,"attributes":[{"value":"/ Extension trait that constrains the `RCC` peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321411,"byte_end":321467,"line_start":90,"line_end":90,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321581,"byte_end":321590,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"constrain","qualname":"::rcc::RccExt::constrain","value":"pub fn constrain(Self) -> Rcc","parent":{"krate":0,"index":2536},"children":[],"decl_id":null,"docs":" Constrains the `RCC` peripheral so it plays nicely with the other abstractions\n","sig":null,"attributes":[{"value":"/ Constrains the `RCC` peripheral so it plays nicely with the other abstractions","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321491,"byte_end":321573,"line_start":92,"line_end":92,"column_start":5,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":2538},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321671,"byte_end":321679,"line_start":97,"line_end":97,"column_start":11,"column_end":19},"name":"BusClock","qualname":"::rcc::BusClock","value":"BusClock","parent":null,"children":[{"krate":0,"index":2539}],"decl_id":null,"docs":" Frequency on bus that peripheral is connected in\n","sig":null,"attributes":[{"value":"/ Frequency on bus that peripheral is connected in","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321608,"byte_end":321660,"line_start":96,"line_end":96,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321745,"byte_end":321750,"line_start":99,"line_end":99,"column_start":8,"column_end":13},"name":"clock","qualname":"::rcc::BusClock::clock","value":"pub fn clock(&Clocks) -> Hertz","parent":{"krate":0,"index":2538},"children":[],"decl_id":null,"docs":" Calculates frequency depending on `Clock` state\n","sig":null,"attributes":[{"value":"/ Calculates frequency depending on `Clock` state","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321686,"byte_end":321737,"line_start":98,"line_end":98,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":2540},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321839,"byte_end":321852,"line_start":103,"line_end":103,"column_start":11,"column_end":24},"name":"BusTimerClock","qualname":"::rcc::BusTimerClock","value":"BusTimerClock","parent":null,"children":[{"krate":0,"index":2541}],"decl_id":null,"docs":" Frequency on bus that timer is connected in\n","sig":null,"attributes":[{"value":"/ Frequency on bus that timer is connected in","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321781,"byte_end":321828,"line_start":102,"line_end":102,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321932,"byte_end":321943,"line_start":105,"line_end":105,"column_start":8,"column_end":19},"name":"timer_clock","qualname":"::rcc::BusTimerClock::timer_clock","value":"pub fn timer_clock(&Clocks) -> Hertz","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":" Calculates base frequency of timer depending on `Clock` state\n","sig":null,"attributes":[{"value":"/ Calculates base frequency of timer depending on `Clock` state","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321859,"byte_end":321924,"line_start":104,"line_end":104,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":2548},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":322352,"byte_end":322356,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"AHB1","qualname":"::rcc::AHB1","value":"AHB1 {  }","parent":null,"children":[{"krate":0,"index":2549}],"decl_id":null,"docs":" AMBA High-performance Bus 1 (AHB1) registers\n","sig":null,"attributes":[{"value":"/ AMBA High-performance Bus 1 (AHB1) registers","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":322292,"byte_end":322340,"line_start":128,"line_end":128,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2554},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":322769,"byte_end":322773,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"AHB2","qualname":"::rcc::AHB2","value":"AHB2 {  }","parent":null,"children":[{"krate":0,"index":2555}],"decl_id":null,"docs":" AMBA High-performance Bus 2 (AHB2) registers\n","sig":null,"attributes":[{"value":"/ AMBA High-performance Bus 2 (AHB2) registers","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":322674,"byte_end":322722,"line_start":148,"line_end":148,"column_start":1,"column_end":49}},{"value":"cfg(not(feature = \"stm32f410\"))","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":322723,"byte_end":322757,"line_start":149,"line_end":149,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2560},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":323688,"byte_end":323692,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"name":"APB1","qualname":"::rcc::APB1","value":"APB1 {  }","parent":null,"children":[{"krate":0,"index":2561}],"decl_id":null,"docs":" Advanced Peripheral Bus 1 (APB1) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 1 (APB1) registers","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":323630,"byte_end":323676,"line_start":193,"line_end":193,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2566},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324068,"byte_end":324072,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"APB2","qualname":"::rcc::APB2","value":"APB2 {  }","parent":null,"children":[{"krate":0,"index":2567}],"decl_id":null,"docs":" Advanced Peripheral Bus 2 (APB2) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 2 (APB2) registers","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324010,"byte_end":324056,"line_start":213,"line_end":213,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2586},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":327845,"byte_end":327848,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"Rcc","qualname":"::rcc::Rcc","value":"Rcc { cfgr }","parent":null,"children":[{"krate":0,"index":2587}],"decl_id":null,"docs":" Constrained RCC peripheral\n","sig":null,"attributes":[{"value":"/ Constrained RCC peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":327803,"byte_end":327833,"line_start":350,"line_end":350,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2587},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":327859,"byte_end":327863,"line_start":352,"line_end":352,"column_start":9,"column_end":13},"name":"cfgr","qualname":"::rcc::Rcc::cfgr","value":"rcc::CFGR","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2588},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":327924,"byte_end":327927,"line_start":356,"line_end":356,"column_start":11,"column_end":14},"name":"HSI","qualname":"::rcc::HSI","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Built-in high speed clock frequency\n","sig":null,"attributes":[{"value":"/ Built-in high speed clock frequency","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":327874,"byte_end":327913,"line_start":355,"line_end":355,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":2589},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":328445,"byte_end":328455,"line_start":377,"line_end":377,"column_start":11,"column_end":21},"name":"SYSCLK_MIN","qualname":"::rcc::SYSCLK_MIN","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Minimum system clock frequency\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"stm32f401\", feature = \"stm32f405\", feature = \"stm32f407\",\n          feature = \"stm32f410\", feature = \"stm32f411\", feature = \"stm32f412\",\n          feature = \"stm32f413\", feature = \"stm32f415\", feature = \"stm32f417\",\n          feature = \"stm32f423\", feature = \"stm32f427\", feature = \"stm32f429\",\n          feature = \"stm32f437\", feature = \"stm32f439\", feature = \"stm32f469\",\n          feature = \"stm32f479\"))","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":327954,"byte_end":328399,"line_start":358,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ Minimum system clock frequency","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":328400,"byte_end":328434,"line_start":376,"line_end":376,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":2590},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":329086,"byte_end":329096,"line_start":404,"line_end":404,"column_start":11,"column_end":21},"name":"SYSCLK_MAX","qualname":"::rcc::SYSCLK_MAX","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum system clock frequency\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"stm32f410\", feature = \"stm32f411\", feature = \"stm32f412\",\n          feature = \"stm32f413\", feature = \"stm32f423\"))","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":328892,"byte_end":329040,"line_start":396,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ Maximum system clock frequency","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":329041,"byte_end":329075,"line_start":403,"line_end":403,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":2591},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":329628,"byte_end":329637,"line_start":427,"line_end":427,"column_start":11,"column_end":20},"name":"PCLK2_MAX","qualname":"::rcc::PCLK2_MAX","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum APB2 peripheral clock frequency\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"stm32f401\", feature = \"stm32f410\", feature = \"stm32f411\",\n          feature = \"stm32f412\", feature = \"stm32f413\", feature =\n          \"stm32f423\"))","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":329398,"byte_end":329573,"line_start":418,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ Maximum APB2 peripheral clock frequency","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":329574,"byte_end":329617,"line_start":426,"line_end":426,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":2592},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":329981,"byte_end":329990,"line_start":441,"line_end":441,"column_start":11,"column_end":20},"name":"PCLK1_MAX","qualname":"::rcc::PCLK1_MAX","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum APB1 peripheral clock frequency\n","sig":null,"attributes":[{"value":"/ Maximum APB1 peripheral clock frequency","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":329927,"byte_end":329970,"line_start":440,"line_end":440,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2593},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":330025,"byte_end":330029,"line_start":443,"line_end":443,"column_start":12,"column_end":16},"name":"CFGR","qualname":"::rcc::CFGR","value":"CFGR {  }","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":331906,"byte_end":331913,"line_start":512,"line_end":512,"column_start":12,"column_end":19},"name":"use_hse","qualname":"<CFGR>::use_hse","value":"pub fn use_hse(Self, Hertz) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Uses HSE (external oscillator) instead of HSI (internal RC oscillator) as the clock source.\n Will result in a hang if an external oscillator is not connected or it fails to start.\n","sig":null,"attributes":[{"value":"/ Uses HSE (external oscillator) instead of HSI (internal RC oscillator) as the clock source.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":331704,"byte_end":331799,"line_start":510,"line_end":510,"column_start":5,"column_end":100}},{"value":"/ Will result in a hang if an external oscillator is not connected or it fails to start.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":331804,"byte_end":331894,"line_start":511,"line_end":511,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332403,"byte_end":332424,"line_start":524,"line_end":524,"column_start":12,"column_end":33},"name":"bypass_hse_oscillator","qualname":"<CFGR>::bypass_hse_oscillator","value":"pub fn bypass_hse_oscillator(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bypasses the high-speed external oscillator and uses an external clock input on the OSC_IN\n pin.","sig":null,"attributes":[{"value":"/ Bypasses the high-speed external oscillator and uses an external clock input on the OSC_IN","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332008,"byte_end":332102,"line_start":517,"line_end":517,"column_start":5,"column_end":99}},{"value":"/ pin.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332107,"byte_end":332115,"line_start":518,"line_end":518,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332120,"byte_end":332123,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ For this configuration, the OSC_IN pin should be connected to a clock source with a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332128,"byte_end":332215,"line_start":520,"line_end":520,"column_start":5,"column_end":92}},{"value":"/ frequency specified in the call to use_hse(), and the OSC_OUT pin should not be connected.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332220,"byte_end":332314,"line_start":521,"line_end":521,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332319,"byte_end":332322,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ This function has no effect unless use_hse() is also called.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332327,"byte_end":332391,"line_start":523,"line_end":523,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332533,"byte_end":332537,"line_start":531,"line_end":531,"column_start":12,"column_end":16},"name":"hclk","qualname":"<CFGR>::hclk","value":"pub fn hclk(Self, Hertz) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332640,"byte_end":332645,"line_start":536,"line_end":536,"column_start":12,"column_end":17},"name":"pclk1","qualname":"<CFGR>::pclk1","value":"pub fn pclk1(Self, Hertz) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332749,"byte_end":332754,"line_start":541,"line_end":541,"column_start":12,"column_end":17},"name":"pclk2","qualname":"<CFGR>::pclk2","value":"pub fn pclk2(Self, Hertz) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332858,"byte_end":332864,"line_start":546,"line_end":546,"column_start":12,"column_end":18},"name":"sysclk","qualname":"<CFGR>::sysclk","value":"pub fn sysclk(Self, Hertz) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":332969,"byte_end":332985,"line_start":551,"line_end":551,"column_start":12,"column_end":28},"name":"require_pll48clk","qualname":"<CFGR>::require_pll48clk","value":"pub fn require_pll48clk(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":333307,"byte_end":333315,"line_start":560,"line_end":560,"column_start":12,"column_end":20},"name":"i2s_ckin","qualname":"<CFGR>::i2s_ckin","value":"pub fn i2s_ckin(Self, Hertz) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Declares that the selected frequency is available at the I2S clock input pin (I2S_CKIN).","sig":null,"attributes":[{"value":"/ Declares that the selected frequency is available at the I2S clock input pin (I2S_CKIN).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":333060,"byte_end":333152,"line_start":556,"line_end":556,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":333157,"byte_end":333160,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ If this frequency matches the requested SAI or I2S frequencies, the external I2S clock is","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":333165,"byte_end":333258,"line_start":558,"line_end":558,"column_start":5,"column_end":98}},{"value":"/ used to generate the clocks.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":333263,"byte_end":333295,"line_start":559,"line_end":559,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":333913,"byte_end":333920,"line_start":581,"line_end":581,"column_start":12,"column_end":19},"name":"i2s_clk","qualname":"<CFGR>::i2s_clk","value":"pub fn i2s_clk(Self, Hertz) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Selects an I2S clock frequency and enables the I2S clock.\n","sig":null,"attributes":[{"value":"/ Selects an I2S clock frequency and enables the I2S clock.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":333415,"byte_end":333476,"line_start":565,"line_end":565,"column_start":5,"column_end":66}},{"value":"cfg(any(feature = \"stm32f401\", feature = \"stm32f405\", feature = \"stm32f407\",\n          feature = \"stm32f410\", feature = \"stm32f411\", feature = \"stm32f415\",\n          feature = \"stm32f417\", feature = \"stm32f427\", feature = \"stm32f429\",\n          feature = \"stm32f437\", feature = \"stm32f439\", feature = \"stm32f469\",\n          feature = \"stm32f479\"))","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":333481,"byte_end":333901,"line_start":566,"line_end":580,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":346922,"byte_end":346928,"line_start":946,"line_end":946,"column_start":12,"column_end":18},"name":"freeze","qualname":"<CFGR>::freeze","value":"pub fn freeze(Self) -> Clocks","parent":null,"children":[],"decl_id":null,"docs":" Initialises the hardware according to CFGR state returning a Clocks instance.\n Panics if overclocking is attempted.\n","sig":null,"attributes":[{"value":"/ Initialises the hardware according to CFGR state returning a Clocks instance.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":346784,"byte_end":346865,"line_start":944,"line_end":944,"column_start":5,"column_end":86}},{"value":"/ Panics if overclocking is attempted.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":346870,"byte_end":346910,"line_start":945,"line_end":945,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2621},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":347268,"byte_end":347284,"line_start":957,"line_end":957,"column_start":19,"column_end":35},"name":"freeze_unchecked","qualname":"<CFGR>::freeze_unchecked","value":"pub unsafe fn freeze_unchecked(Self) -> Clocks","parent":null,"children":[],"decl_id":null,"docs":" Initialises the hardware according to CFGR state returning a Clocks instance.\n Allows overclocking.","sig":null,"attributes":[{"value":"/ Initialises the hardware according to CFGR state returning a Clocks instance.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":346994,"byte_end":347075,"line_start":950,"line_end":950,"column_start":5,"column_end":86}},{"value":"/ Allows overclocking.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":347080,"byte_end":347104,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":347109,"byte_end":347112,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":347117,"byte_end":347129,"line_start":953,"line_end":953,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":347134,"byte_end":347137,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ This method does not check if the clocks are bigger or smaller than the officially","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":347142,"byte_end":347228,"line_start":955,"line_end":955,"column_start":5,"column_end":91}},{"value":"/ recommended.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":347233,"byte_end":347249,"line_start":956,"line_end":956,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":8012},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":363607,"byte_end":363613,"line_start":1500,"line_end":1500,"column_start":12,"column_end":18},"name":"Clocks","qualname":"::rcc::Clocks","value":"Clocks {  }","parent":null,"children":[{"krate":0,"index":8013},{"krate":0,"index":8014},{"krate":0,"index":8015},{"krate":0,"index":8016},{"krate":0,"index":8017},{"krate":0,"index":8018},{"krate":0,"index":8019},{"krate":0,"index":8020}],"decl_id":null,"docs":" Frozen clock frequencies","sig":null,"attributes":[{"value":"/ Frozen clock frequencies","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":363368,"byte_end":363396,"line_start":1495,"line_end":1495,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":363397,"byte_end":363400,"line_start":1496,"line_end":1496,"column_start":1,"column_end":4}},{"value":"/ The existence of this value indicates that the clock configuration can no longer be changed","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":363401,"byte_end":363496,"line_start":1497,"line_end":1497,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365085,"byte_end":365089,"line_start":1561,"line_end":1561,"column_start":12,"column_end":16},"name":"hclk","qualname":"<Clocks>::hclk","value":"pub fn hclk(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the AHB1\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the AHB1","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365036,"byte_end":365073,"line_start":1560,"line_end":1560,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365186,"byte_end":365191,"line_start":1566,"line_end":1566,"column_start":12,"column_end":17},"name":"pclk1","qualname":"<Clocks>::pclk1","value":"pub fn pclk1(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB1\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB1","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365137,"byte_end":365174,"line_start":1565,"line_end":1565,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365289,"byte_end":365294,"line_start":1571,"line_end":1571,"column_start":12,"column_end":17},"name":"pclk2","qualname":"<Clocks>::pclk2","value":"pub fn pclk2(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB2\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB2","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365240,"byte_end":365277,"line_start":1570,"line_end":1570,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365392,"byte_end":365397,"line_start":1576,"line_end":1576,"column_start":12,"column_end":17},"name":"ppre1","qualname":"<Clocks>::ppre1","value":"pub fn ppre1(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prescaler of the APB1\n","sig":null,"attributes":[{"value":"/ Returns the prescaler of the APB1","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365343,"byte_end":365380,"line_start":1575,"line_end":1575,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365492,"byte_end":365497,"line_start":1581,"line_end":1581,"column_start":12,"column_end":17},"name":"ppre2","qualname":"<Clocks>::ppre2","value":"pub fn ppre2(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prescaler of the APB2\n","sig":null,"attributes":[{"value":"/ Returns the prescaler of the APB2","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365443,"byte_end":365480,"line_start":1580,"line_end":1580,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365594,"byte_end":365600,"line_start":1586,"line_end":1586,"column_start":12,"column_end":18},"name":"sysclk","qualname":"<Clocks>::sysclk","value":"pub fn sysclk(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the system (core) frequency\n","sig":null,"attributes":[{"value":"/ Returns the system (core) frequency","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365543,"byte_end":365582,"line_start":1585,"line_end":1585,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365711,"byte_end":365719,"line_start":1591,"line_end":1591,"column_start":12,"column_end":20},"name":"pll48clk","qualname":"<Clocks>::pll48clk","value":"pub fn pll48clk(&Self) -> Option<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the PLL48 clock line\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the PLL48 clock line","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365650,"byte_end":365699,"line_start":1590,"line_end":1590,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365909,"byte_end":365926,"line_start":1597,"line_end":1597,"column_start":12,"column_end":29},"name":"is_pll48clk_valid","qualname":"<Clocks>::is_pll48clk_valid","value":"pub fn is_pll48clk_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the PLL48 clock is within USB\n specifications. It is required to use the USB functionality.\n","sig":null,"attributes":[{"value":"/ Returns true if the PLL48 clock is within USB","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365779,"byte_end":365828,"line_start":1595,"line_end":1595,"column_start":5,"column_end":54}},{"value":"/ specifications. It is required to use the USB functionality.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365833,"byte_end":365897,"line_start":1596,"line_end":1596,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":366333,"byte_end":366340,"line_start":1611,"line_end":1611,"column_start":12,"column_end":19},"name":"i2s_clk","qualname":"<Clocks>::i2s_clk","value":"pub fn i2s_clk(&Self) -> Option<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the I2S clock.\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the I2S clock.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":366126,"byte_end":366169,"line_start":1604,"line_end":1604,"column_start":5,"column_end":48}},{"value":"cfg(not(any(feature = \"stm32f412\", feature = \"stm32f413\", feature =\n              \"stm32f423\", feature = \"stm32f446\",)))","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":366174,"byte_end":366321,"line_start":1605,"line_end":1610,"column_start":5,"column_end":9}}]},{"kind":"Mod","id":{"krate":0,"index":2647},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rtc","qualname":"::rtc","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":2671},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2687},{"krate":0,"index":2690},{"krate":0,"index":8033},{"krate":0,"index":8036},{"krate":0,"index":8038},{"krate":0,"index":8039},{"krate":0,"index":8041},{"krate":0,"index":8042},{"krate":0,"index":8044},{"krate":0,"index":8045},{"krate":0,"index":2693},{"krate":0,"index":2695},{"krate":0,"index":2697},{"krate":0,"index":2701},{"krate":0,"index":8047},{"krate":0,"index":8052},{"krate":0,"index":8054},{"krate":0,"index":8055},{"krate":0,"index":8057},{"krate":0,"index":8058},{"krate":0,"index":8060},{"krate":0,"index":8061},{"krate":0,"index":2703},{"krate":0,"index":2711},{"krate":0,"index":2720},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776}],"decl_id":null,"docs":" Interface to the real time clock. See STM32F303 reference manual, section 27.\n For more details, see\n [ST AN4759](https:/www.st.com%2Fresource%2Fen%2Fapplication_note%2Fdm00226326-using-the-hardware-realtime-clock-rtc-and-the-tamper-management-unit-tamp-with-stm32-microcontrollers-stmicroelectronics.pdf&usg=AOvVaw3PzvL2TfYtwS32fw-Uv37h)\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5161,"byte_end":5196,"line_start":159,"line_end":159,"column_start":1,"column_end":36}},{"value":"/ Interface to the real time clock. See STM32F303 reference manual, section 27.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":391930,"byte_end":392011,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/ For more details, see","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392012,"byte_end":392037,"line_start":2,"line_end":2,"column_start":1,"column_end":26}},{"value":"/ [ST AN4759](https:/www.st.com%2Fresource%2Fen%2Fapplication_note%2Fdm00226326-using-the-hardware-realtime-clock-rtc-and-the-tamper-management-unit-tamp-with-stm32-microcontrollers-stmicroelectronics.pdf&usg=AOvVaw3PzvL2TfYtwS32fw-Uv37h)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392038,"byte_end":392278,"line_start":3,"line_end":3,"column_start":1,"column_end":241}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8034},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392665,"byte_end":392681,"line_start":18,"line_end":18,"column_start":5,"column_end":21},"name":"InvalidInputData","qualname":"::rtc::Error::InvalidInputData","value":"Error::InvalidInputData","parent":{"krate":0,"index":8033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8033},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392653,"byte_end":392658,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::rtc::Error","value":"pub enum Error { InvalidInputData, }","parent":null,"children":[{"krate":0,"index":8034}],"decl_id":null,"docs":" Invalid input error\n","sig":null,"attributes":[{"value":"/ Invalid input error","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392521,"byte_end":392544,"line_start":14,"line_end":14,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2693},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392752,"byte_end":392755,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"Lse","qualname":"::rtc::Lse","value":"","parent":null,"children":[],"decl_id":null,"docs":" RTC clock source LSE oscillator clock (type state)\n","sig":null,"attributes":[{"value":"/ RTC clock source LSE oscillator clock (type state)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392686,"byte_end":392740,"line_start":21,"line_end":21,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2695},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392823,"byte_end":392826,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"Lsi","qualname":"::rtc::Lsi","value":"","parent":null,"children":[],"decl_id":null,"docs":" RTC clock source LSI oscillator clock (type state)\n","sig":null,"attributes":[{"value":"/ RTC clock source LSI oscillator clock (type state)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392757,"byte_end":392811,"line_start":23,"line_end":23,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2697},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392871,"byte_end":392874,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"Rtc","qualname":"::rtc::Rtc","value":"Rtc { regs }","parent":null,"children":[{"krate":0,"index":2699},{"krate":0,"index":2700}],"decl_id":null,"docs":" Real Time Clock peripheral\n","sig":null,"attributes":[{"value":"/ Real Time Clock peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392829,"byte_end":392859,"line_start":26,"line_end":26,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2699},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392927,"byte_end":392931,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"regs","qualname":"::rtc::Rtc::regs","value":"stm32f4::stm32f411::RTC","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" RTC Peripheral register\n","sig":null,"attributes":[{"value":"/ RTC Peripheral register","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":392891,"byte_end":392918,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8048},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393466,"byte_end":393476,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"name":"Oscillator","qualname":"::rtc::LSEClockMode::Oscillator","value":"LSEClockMode::Oscillator","parent":{"krate":0,"index":8047},"children":[],"decl_id":null,"docs":" Enable LSE oscillator to use external crystal or ceramic resonator.\n","sig":null,"attributes":[{"value":"/ Enable LSE oscillator to use external crystal or ceramic resonator.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393390,"byte_end":393461,"line_start":50,"line_end":50,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8050},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393656,"byte_end":393662,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Bypass","qualname":"::rtc::LSEClockMode::Bypass","value":"LSEClockMode::Bypass","parent":{"krate":0,"index":8047},"children":[],"decl_id":null,"docs":" Bypass LSE oscillator to use external clock source.\n Use this if an external oscillator is used which is not connected to `OSC32_IN` such as a MEMS resonator.\n","sig":null,"attributes":[{"value":"/ Bypass LSE oscillator to use external clock source.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393482,"byte_end":393537,"line_start":52,"line_end":52,"column_start":5,"column_end":60}},{"value":"/ Use this if an external oscillator is used which is not connected to `OSC32_IN` such as a MEMS resonator.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393542,"byte_end":393651,"line_start":53,"line_end":53,"column_start":5,"column_end":114}}]},{"kind":"Enum","id":{"krate":0,"index":8047},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393371,"byte_end":393383,"line_start":49,"line_end":49,"column_start":10,"column_end":22},"name":"LSEClockMode","qualname":"::rtc::LSEClockMode","value":"pub enum LSEClockMode { Oscillator, Bypass, }","parent":null,"children":[{"krate":0,"index":8048},{"krate":0,"index":8050}],"decl_id":null,"docs":" LSE clock mode.\n","sig":null,"attributes":[{"value":"/ LSE clock mode.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393243,"byte_end":393262,"line_start":46,"line_end":46,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393797,"byte_end":393800,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Rtc<Lse>>::new","value":"pub fn new(RTC, &mut PWR) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create and enable a new RTC with external crystal or ceramic resonator and default prescalers.\n","sig":null,"attributes":[{"value":"/ Create and enable a new RTC with external crystal or ceramic resonator and default prescalers.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393687,"byte_end":393785,"line_start":58,"line_end":58,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":394155,"byte_end":394166,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Rtc<Lse>>::with_config","value":"pub fn with_config(RTC, &mut PWR, LSEClockMode, u16, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create and enable a new RTC, and configure its clock source and prescalers.","sig":null,"attributes":[{"value":"/ Create and enable a new RTC, and configure its clock source and prescalers.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393921,"byte_end":394000,"line_start":63,"line_end":63,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":394005,"byte_end":394008,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ From AN3371, Table 3, when using the LSE,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":394013,"byte_end":394058,"line_start":65,"line_end":65,"column_start":5,"column_end":50}},{"value":"/ set `prediv_s` to 255, and `prediv_a` to 127 to get a calendar clock of 1Hz.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":394063,"byte_end":394143,"line_start":66,"line_end":66,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":396361,"byte_end":396368,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"new_lsi","qualname":"<Rtc<Lsi>>::new_lsi","value":"pub fn new_lsi(RTC, &mut PWR) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create and enable a new RTC with internal crystal and default prescalers.\n","sig":null,"attributes":[{"value":"/ Create and enable a new RTC with internal crystal and default prescalers.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":396272,"byte_end":396349,"line_start":137,"line_end":137,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":396701,"byte_end":396716,"line_start":146,"line_end":146,"column_start":12,"column_end":27},"name":"lsi_with_config","qualname":"<Rtc<Lsi>>::lsi_with_config","value":"pub fn lsi_with_config(RTC, &mut PWR, u16, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create and enable a new RTC, and configure its clock source and prescalers.","sig":null,"attributes":[{"value":"/ Create and enable a new RTC, and configure its clock source and prescalers.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":396467,"byte_end":396546,"line_start":142,"line_end":142,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":396551,"byte_end":396554,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ From AN3371, Table 3, when using the LSI,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":396559,"byte_end":396604,"line_start":144,"line_end":144,"column_start":5,"column_end":50}},{"value":"/ set `prediv_s` to 249, and `prediv_a` to 127 to get a calendar clock of 1Hz.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":396609,"byte_end":396689,"line_start":145,"line_end":145,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":399021,"byte_end":399035,"line_start":229,"line_end":229,"column_start":12,"column_end":26},"name":"set_prescalers","qualname":"<Rtc<CS>>::set_prescalers","value":"pub fn set_prescalers(&mut Self, u16, u8)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":400327,"byte_end":400335,"line_start":267,"line_end":267,"column_start":12,"column_end":20},"name":"set_time","qualname":"<Rtc<CS>>::set_time","value":"pub fn set_time(&mut Self, &Time) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the time using time::Time.\n","sig":null,"attributes":[{"value":"/ Set the time using time::Time.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":400281,"byte_end":400315,"line_start":266,"line_end":266,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":400951,"byte_end":400962,"line_start":287,"line_end":287,"column_start":12,"column_end":23},"name":"set_seconds","qualname":"<Rtc<CS>>::set_seconds","value":"pub fn set_seconds(&mut Self, u8) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the seconds [0-59].\n","sig":null,"attributes":[{"value":"/ Set the seconds [0-59].","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":400912,"byte_end":400939,"line_start":286,"line_end":286,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":401296,"byte_end":401307,"line_start":298,"line_end":298,"column_start":12,"column_end":23},"name":"set_minutes","qualname":"<Rtc<CS>>::set_minutes","value":"pub fn set_minutes(&mut Self, u8) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the minutes [0-59].\n","sig":null,"attributes":[{"value":"/ Set the minutes [0-59].","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":401257,"byte_end":401284,"line_start":297,"line_end":297,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":401645,"byte_end":401654,"line_start":309,"line_end":309,"column_start":12,"column_end":21},"name":"set_hours","qualname":"<Rtc<CS>>::set_hours","value":"pub fn set_hours(&mut Self, u8) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the hours [0-23].\n","sig":null,"attributes":[{"value":"/ Set the hours [0-23].","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":401608,"byte_end":401633,"line_start":308,"line_end":308,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":401986,"byte_end":401997,"line_start":321,"line_end":321,"column_start":12,"column_end":23},"name":"set_weekday","qualname":"<Rtc<CS>>::set_weekday","value":"pub fn set_weekday(&mut Self, u8) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the day of week [1-7].\n","sig":null,"attributes":[{"value":"/ Set the day of week [1-7].","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":401944,"byte_end":401974,"line_start":320,"line_end":320,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":402301,"byte_end":402308,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"set_day","qualname":"<Rtc<CS>>::set_day","value":"pub fn set_day(&mut Self, u8) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the day of month [1-31].\n","sig":null,"attributes":[{"value":"/ Set the day of month [1-31].","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":402257,"byte_end":402289,"line_start":330,"line_end":330,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":402644,"byte_end":402653,"line_start":342,"line_end":342,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Rtc<CS>>::set_month","value":"pub fn set_month(&mut Self, u8) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the month [1-12].\n","sig":null,"attributes":[{"value":"/ Set the month [1-12].","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":402607,"byte_end":402632,"line_start":341,"line_end":341,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":403190,"byte_end":403198,"line_start":356,"line_end":356,"column_start":12,"column_end":20},"name":"set_year","qualname":"<Rtc<CS>>::set_year","value":"pub fn set_year(&mut Self, u16) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the year [1970-2069].","sig":null,"attributes":[{"value":"/ Set the year [1970-2069].","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":402961,"byte_end":402990,"line_start":352,"line_end":352,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":402995,"byte_end":402998,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The year cannot be less than 1970, since the Unix epoch is assumed (1970-01-01 00:00:00).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":403003,"byte_end":403096,"line_start":354,"line_end":354,"column_start":5,"column_end":98}},{"value":"/ Also, the year cannot be greater than 2069 since the RTC range is 0 - 99.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":403101,"byte_end":403178,"line_start":355,"line_end":355,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":403730,"byte_end":403738,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"set_date","qualname":"<Rtc<CS>>::set_date","value":"pub fn set_date(&mut Self, &Date) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the date.","sig":null,"attributes":[{"value":"/ Set the date.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":403513,"byte_end":403530,"line_start":366,"line_end":366,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":403535,"byte_end":403538,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The year cannot be less than 1970, since the Unix epoch is assumed (1970-01-01 00:00:00).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":403543,"byte_end":403636,"line_start":368,"line_end":368,"column_start":5,"column_end":98}},{"value":"/ Also, the year cannot be greater than 2069 since the RTC range is 0 - 99.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":403641,"byte_end":403718,"line_start":369,"line_end":369,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":404629,"byte_end":404641,"line_start":397,"line_end":397,"column_start":12,"column_end":24},"name":"set_datetime","qualname":"<Rtc<CS>>::set_datetime","value":"pub fn set_datetime(&mut Self, &PrimitiveDateTime) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the date and time.","sig":null,"attributes":[{"value":"/ Set the date and time.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":404403,"byte_end":404429,"line_start":393,"line_end":393,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":404434,"byte_end":404437,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The year cannot be less than 1970, since the Unix epoch is assumed (1970-01-01 00:00:00).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":404442,"byte_end":404535,"line_start":395,"line_end":395,"column_start":5,"column_end":98}},{"value":"/ Also, the year cannot be greater than 2069 since the RTC range is 0 - 99.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":404540,"byte_end":404617,"line_start":396,"line_end":396,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":405789,"byte_end":405801,"line_start":433,"line_end":433,"column_start":12,"column_end":24},"name":"get_datetime","qualname":"<Rtc<CS>>::get_datetime","value":"pub fn get_datetime(&mut Self) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2777},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serial","qualname":"::serial","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2787},{"krate":0,"index":2790},{"krate":0,"index":2885},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2996},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3003},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3009},{"krate":0,"index":3012},{"krate":0,"index":3015},{"krate":0,"index":3018},{"krate":0,"index":3025},{"krate":0,"index":3045},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3055},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3073},{"krate":0,"index":3078},{"krate":0,"index":3083},{"krate":0,"index":3098},{"krate":0,"index":3107},{"krate":0,"index":3112},{"krate":0,"index":3117},{"krate":0,"index":3122},{"krate":0,"index":3127},{"krate":0,"index":3140},{"krate":0,"index":3154},{"krate":0,"index":3167},{"krate":0,"index":3174},{"krate":0,"index":3181},{"krate":0,"index":3198},{"krate":0,"index":3202},{"krate":0,"index":3206},{"krate":0,"index":3210},{"krate":0,"index":3214},{"krate":0,"index":3219},{"krate":0,"index":3222},{"krate":0,"index":3225},{"krate":0,"index":8144},{"krate":0,"index":8146},{"krate":0,"index":8147},{"krate":0,"index":8148},{"krate":0,"index":8158},{"krate":0,"index":8160},{"krate":0,"index":8161},{"krate":0,"index":8162},{"krate":0,"index":8172},{"krate":0,"index":8174},{"krate":0,"index":8175},{"krate":0,"index":8176},{"krate":0,"index":3226},{"krate":0,"index":3230},{"krate":0,"index":3235},{"krate":0,"index":3239},{"krate":0,"index":3242},{"krate":0,"index":3248}],"decl_id":null,"docs":"\n Asynchronous serial communication using UART/USART peripherals","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5306,"byte_end":5341,"line_start":163,"line_end":163,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":408634,"byte_end":408637,"line_start":1,"line_end":1,"column_start":1,"column_end":4}},{"value":"/ Asynchronous serial communication using UART/USART peripherals","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":408638,"byte_end":408704,"line_start":2,"line_end":2,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":408705,"byte_end":408708,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Word length","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":408709,"byte_end":408726,"line_start":4,"line_end":4,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":408727,"byte_end":408730,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ By default, the UART/USART uses 8 data bits. The `Serial`, `Rx`, and `Tx` structs implement","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":408731,"byte_end":408826,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ the embedded-hal read and write traits with `u8` as the word type.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":408827,"byte_end":408897,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":408898,"byte_end":408901,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ You can also configure the hardware to use 9 data bits with the `Config` `wordlength_9()`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":408902,"byte_end":408995,"line_start":9,"line_end":9,"column_start":1,"column_end":94}},{"value":"/ function. After creating a `Serial` with this option, use the `with_u16_data()` function to","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":408996,"byte_end":409091,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ convert the `Serial<_, _, u8>` object into a `Serial<_, _, u16>` that can send and receive","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409092,"byte_end":409186,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ `u16`s.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409187,"byte_end":409198,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409199,"byte_end":409202,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ In this mode, the `Serial<_, _, u16>`, `Rx<_, u16>`, and `Tx<_, u16>` structs instead implement","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409203,"byte_end":409302,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ the embedded-hal read and write traits with `u16` as the word type. You can use these","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409303,"byte_end":409392,"line_start":15,"line_end":15,"column_start":1,"column_end":90}},{"value":"/ implementations for 9-bit words.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409393,"byte_end":409429,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409430,"byte_end":409433,"line_start":17,"line_end":17,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3019},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409860,"byte_end":409864,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"Rxne","qualname":"::serial::Event::Rxne","value":"Event::Rxne","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":" New data has been received\n","sig":null,"attributes":[{"value":"/ New data has been received","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409825,"byte_end":409855,"line_start":42,"line_end":42,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3021},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409899,"byte_end":409902,"line_start":45,"line_end":45,"column_start":5,"column_end":8},"name":"Txe","qualname":"::serial::Event::Txe","value":"Event::Txe","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":" New data can be sent\n","sig":null,"attributes":[{"value":"/ New data can be sent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409870,"byte_end":409894,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3023},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409941,"byte_end":409945,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"Idle","qualname":"::serial::Event::Idle","value":"Event::Idle","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":" Idle line state detected\n","sig":null,"attributes":[{"value":"/ Idle line state detected","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409908,"byte_end":409936,"line_start":46,"line_end":46,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":3018},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409813,"byte_end":409818,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"Event","qualname":"::serial::Event","value":"pub enum Event { Rxne, Txe, Idle, }","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3021},{"krate":0,"index":3023}],"decl_id":null,"docs":" Interrupt event\n","sig":null,"attributes":[{"value":"/ Interrupt event","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409784,"byte_end":409803,"line_start":40,"line_end":40,"column_start":1,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":3025},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":409958,"byte_end":409964,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"name":"config","qualname":"::serial::config","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","parent":null,"children":[{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3029},{"krate":0,"index":8063},{"krate":0,"index":8068},{"krate":0,"index":8070},{"krate":0,"index":8072},{"krate":0,"index":8073},{"krate":0,"index":8074},{"krate":0,"index":8076},{"krate":0,"index":8083},{"krate":0,"index":8085},{"krate":0,"index":8087},{"krate":0,"index":8088},{"krate":0,"index":8089},{"krate":0,"index":8091},{"krate":0,"index":8100},{"krate":0,"index":8102},{"krate":0,"index":8103},{"krate":0,"index":8105},{"krate":0,"index":8106},{"krate":0,"index":8108},{"krate":0,"index":8117},{"krate":0,"index":8119},{"krate":0,"index":8121},{"krate":0,"index":8122},{"krate":0,"index":8123},{"krate":0,"index":8125},{"krate":0,"index":8131},{"krate":0,"index":8133},{"krate":0,"index":8135},{"krate":0,"index":8136},{"krate":0,"index":8137},{"krate":0,"index":3032},{"krate":0,"index":8140},{"krate":0,"index":8142},{"krate":0,"index":3040},{"krate":0,"index":3042}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8064},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410160,"byte_end":410169,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"name":"DataBits8","qualname":"::serial::config::WordLength::DataBits8","value":"WordLength::DataBits8","parent":{"krate":0,"index":8063},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8066},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410179,"byte_end":410188,"line_start":58,"line_end":58,"column_start":9,"column_end":18},"name":"DataBits9","qualname":"::serial::config::WordLength::DataBits9","value":"WordLength::DataBits9","parent":{"krate":0,"index":8063},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8063},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410139,"byte_end":410149,"line_start":56,"line_end":56,"column_start":14,"column_end":24},"name":"WordLength","qualname":"::serial::config::WordLength","value":"pub enum WordLength { DataBits8, DataBits9, }","parent":null,"children":[{"krate":0,"index":8064},{"krate":0,"index":8066}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8077},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410570,"byte_end":410580,"line_start":68,"line_end":68,"column_start":9,"column_end":19},"name":"ParityNone","qualname":"::serial::config::Parity::ParityNone","value":"Parity::ParityNone","parent":{"krate":0,"index":8076},"children":[],"decl_id":null,"docs":" No parity bit will be added/checked.\n","sig":null,"attributes":[{"value":"/ No parity bit will be added/checked.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410521,"byte_end":410561,"line_start":67,"line_end":67,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8079},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410704,"byte_end":410714,"line_start":71,"line_end":71,"column_start":9,"column_end":19},"name":"ParityEven","qualname":"::serial::config::Parity::ParityEven","value":"Parity::ParityEven","parent":{"krate":0,"index":8076},"children":[],"decl_id":null,"docs":" The MSB transmitted/received will be generated/checked to have a\n even number of bits set.\n","sig":null,"attributes":[{"value":"/ The MSB transmitted/received will be generated/checked to have a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410590,"byte_end":410658,"line_start":69,"line_end":69,"column_start":9,"column_end":77}},{"value":"/ even number of bits set.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410667,"byte_end":410695,"line_start":70,"line_end":70,"column_start":9,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8081},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410837,"byte_end":410846,"line_start":74,"line_end":74,"column_start":9,"column_end":18},"name":"ParityOdd","qualname":"::serial::config::Parity::ParityOdd","value":"Parity::ParityOdd","parent":{"krate":0,"index":8076},"children":[],"decl_id":null,"docs":" The MSB transmitted/received will be generated/checked to have a\n odd number of bits set.\n","sig":null,"attributes":[{"value":"/ The MSB transmitted/received will be generated/checked to have a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410724,"byte_end":410792,"line_start":72,"line_end":72,"column_start":9,"column_end":77}},{"value":"/ odd number of bits set.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410801,"byte_end":410828,"line_start":73,"line_end":73,"column_start":9,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":8076},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410504,"byte_end":410510,"line_start":66,"line_end":66,"column_start":14,"column_end":20},"name":"Parity","qualname":"::serial::config::Parity","value":"pub enum Parity { ParityNone, ParityEven, ParityOdd, }","parent":null,"children":[{"krate":0,"index":8077},{"krate":0,"index":8079},{"krate":0,"index":8081}],"decl_id":null,"docs":" Parity generation and checking. If odd or even parity is selected, the\n underlying USART will be configured to send/receive the parity bit in\n addtion to the data bits.\n","sig":null,"attributes":[{"value":"/ Parity generation and checking. If odd or even parity is selected, the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410201,"byte_end":410275,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ underlying USART will be configured to send/receive the parity bit in","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410280,"byte_end":410353,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ addtion to the data bits.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410358,"byte_end":410387,"line_start":63,"line_end":63,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8092},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411115,"byte_end":411120,"line_start":84,"line_end":84,"column_start":9,"column_end":14},"name":"STOP1","qualname":"::serial::config::StopBits::STOP1","value":"StopBits::STOP1","parent":{"krate":0,"index":8091},"children":[],"decl_id":null,"docs":"1 stop bit\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8094},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411163,"byte_end":411170,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"name":"STOP0P5","qualname":"::serial::config::StopBits::STOP0P5","value":"StopBits::STOP0P5","parent":{"krate":0,"index":8091},"children":[],"decl_id":null,"docs":"0.5 stop bits\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8096},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411211,"byte_end":411216,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"name":"STOP2","qualname":"::serial::config::StopBits::STOP2","value":"StopBits::STOP2","parent":{"krate":0,"index":8091},"children":[],"decl_id":null,"docs":"2 stop bits\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8098},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411259,"byte_end":411266,"line_start":90,"line_end":90,"column_start":9,"column_end":16},"name":"STOP1P5","qualname":"::serial::config::StopBits::STOP1P5","value":"StopBits::STOP1P5","parent":{"krate":0,"index":8091},"children":[],"decl_id":null,"docs":"1.5 stop bits\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8091},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411066,"byte_end":411074,"line_start":82,"line_end":82,"column_start":14,"column_end":22},"name":"StopBits","qualname":"::serial::config::StopBits","value":"pub enum StopBits { STOP1, STOP0P5, STOP2, STOP1P5, }","parent":null,"children":[{"krate":0,"index":8092},{"krate":0,"index":8094},{"krate":0,"index":8096},{"krate":0,"index":8098}],"decl_id":null,"docs":" Stop Bit configuration parameter for serial.","sig":null,"attributes":[{"value":"/ Stop Bit configuration parameter for serial.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410859,"byte_end":410907,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410912,"byte_end":410915,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Wrapper around [`STOP_A`]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":410920,"byte_end":410949,"line_start":79,"line_end":79,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8109},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411411,"byte_end":411415,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"name":"None","qualname":"::serial::config::DmaConfig::None","value":"DmaConfig::None","parent":{"krate":0,"index":8108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8111},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411425,"byte_end":411427,"line_start":97,"line_end":97,"column_start":9,"column_end":11},"name":"Tx","qualname":"::serial::config::DmaConfig::Tx","value":"DmaConfig::Tx","parent":{"krate":0,"index":8108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8113},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411437,"byte_end":411439,"line_start":98,"line_end":98,"column_start":9,"column_end":11},"name":"Rx","qualname":"::serial::config::DmaConfig::Rx","value":"DmaConfig::Rx","parent":{"krate":0,"index":8108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8115},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411449,"byte_end":411453,"line_start":99,"line_end":99,"column_start":9,"column_end":13},"name":"TxRx","qualname":"::serial::config::DmaConfig::TxRx","value":"DmaConfig::TxRx","parent":{"krate":0,"index":8108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8108},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411391,"byte_end":411400,"line_start":95,"line_end":95,"column_start":14,"column_end":23},"name":"DmaConfig","qualname":"::serial::config::DmaConfig","value":"pub enum DmaConfig { None, Tx, Rx, TxRx, }","parent":null,"children":[{"krate":0,"index":8109},{"krate":0,"index":8111},{"krate":0,"index":8113},{"krate":0,"index":8115}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8125},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411602,"byte_end":411608,"line_start":105,"line_end":105,"column_start":16,"column_end":22},"name":"Config","qualname":"::serial::config::Config","value":"Config { baudrate, wordlength, parity, stopbits, dma }","parent":null,"children":[{"krate":0,"index":8126},{"krate":0,"index":8127},{"krate":0,"index":8128},{"krate":0,"index":8129},{"krate":0,"index":8130}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411569,"byte_end":411586,"line_start":104,"line_end":104,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":8126},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411623,"byte_end":411631,"line_start":106,"line_end":106,"column_start":13,"column_end":21},"name":"baudrate","qualname":"::serial::config::Config::baudrate","value":"time::Bps","parent":{"krate":0,"index":8125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8127},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411650,"byte_end":411660,"line_start":107,"line_end":107,"column_start":13,"column_end":23},"name":"wordlength","qualname":"::serial::config::Config::wordlength","value":"serial::config::WordLength","parent":{"krate":0,"index":8125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8128},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411686,"byte_end":411692,"line_start":108,"line_end":108,"column_start":13,"column_end":19},"name":"parity","qualname":"::serial::config::Config::parity","value":"serial::config::Parity","parent":{"krate":0,"index":8125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8129},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411714,"byte_end":411722,"line_start":109,"line_end":109,"column_start":13,"column_end":21},"name":"stopbits","qualname":"::serial::config::Config::stopbits","value":"serial::config::StopBits","parent":{"krate":0,"index":8125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8130},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411746,"byte_end":411749,"line_start":110,"line_end":110,"column_start":13,"column_end":16},"name":"dma","qualname":"::serial::config::Config::dma","value":"serial::config::DmaConfig","parent":{"krate":0,"index":8125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411802,"byte_end":411810,"line_start":114,"line_end":114,"column_start":16,"column_end":24},"name":"baudrate","qualname":"<Config>::baudrate","value":"pub fn baudrate(Self, Bps) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411927,"byte_end":411938,"line_start":119,"line_end":119,"column_start":16,"column_end":27},"name":"parity_none","qualname":"<Config>::parity_none","value":"pub fn parity_none(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":412048,"byte_end":412059,"line_start":124,"line_end":124,"column_start":16,"column_end":27},"name":"parity_even","qualname":"<Config>::parity_even","value":"pub fn parity_even(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":412169,"byte_end":412179,"line_start":129,"line_end":129,"column_start":16,"column_end":26},"name":"parity_odd","qualname":"<Config>::parity_odd","value":"pub fn parity_odd(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":412288,"byte_end":412300,"line_start":134,"line_end":134,"column_start":16,"column_end":28},"name":"wordlength_8","qualname":"<Config>::wordlength_8","value":"pub fn wordlength_8(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":412417,"byte_end":412429,"line_start":139,"line_end":139,"column_start":16,"column_end":28},"name":"wordlength_9","qualname":"<Config>::wordlength_9","value":"pub fn wordlength_9(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":412546,"byte_end":412554,"line_start":144,"line_end":144,"column_start":16,"column_end":24},"name":"stopbits","qualname":"<Config>::stopbits","value":"pub fn stopbits(Self, StopBits) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8140},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":412703,"byte_end":412716,"line_start":151,"line_end":151,"column_start":16,"column_end":29},"name":"InvalidConfig","qualname":"::serial::config::InvalidConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3045},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413298,"byte_end":413303,"line_start":176,"line_end":176,"column_start":12,"column_end":17},"name":"TxPin","qualname":"::serial::TxPin","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3048},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413348,"byte_end":413353,"line_start":178,"line_end":178,"column_start":12,"column_end":17},"name":"RxPin","qualname":"::serial::RxPin","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3051},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413398,"byte_end":413402,"line_start":181,"line_end":181,"column_start":11,"column_end":15},"name":"Pins","qualname":"::serial::Pins","value":"Pins<USART>","parent":null,"children":[{"krate":0,"index":3053},{"krate":0,"index":3054}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3053},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413419,"byte_end":413431,"line_start":182,"line_end":182,"column_start":8,"column_end":20},"name":"set_alt_mode","qualname":"::serial::Pins::set_alt_mode","value":"pub fn set_alt_mode(&mut Self)","parent":{"krate":0,"index":3051},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413451,"byte_end":413463,"line_start":183,"line_end":183,"column_start":8,"column_end":20},"name":"restore_mode","qualname":"::serial::Pins::restore_mode","value":"pub fn restore_mode(&mut Self)","parent":{"krate":0,"index":3051},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3063},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413976,"byte_end":413980,"line_start":201,"line_end":201,"column_start":10,"column_end":14},"name":"NoTx","qualname":"::serial::NoTx","value":"NoPin","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the Tx pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the Tx pin is unnecessary","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413914,"byte_end":413966,"line_start":200,"line_end":200,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":3064},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414052,"byte_end":414056,"line_start":203,"line_end":203,"column_start":10,"column_end":14},"name":"NoRx","qualname":"::serial::NoRx","value":"NoPin","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the Rx pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the Rx pin is unnecessary","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413990,"byte_end":414042,"line_start":202,"line_end":202,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3065},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414101,"byte_end":414107,"line_start":206,"line_end":206,"column_start":12,"column_end":18},"name":"Serial","qualname":"::serial::Serial","value":"Serial {  }","parent":null,"children":[{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072}],"decl_id":null,"docs":" Serial abstraction\n","sig":null,"attributes":[{"value":"/ Serial abstraction","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414067,"byte_end":414089,"line_start":205,"line_end":205,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3073},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414252,"byte_end":414254,"line_start":214,"line_end":214,"column_start":12,"column_end":14},"name":"Rx","qualname":"::serial::Rx","value":"Rx {  }","parent":null,"children":[{"krate":0,"index":3076},{"krate":0,"index":3077}],"decl_id":null,"docs":" Serial receiver\n","sig":null,"attributes":[{"value":"/ Serial receiver","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414221,"byte_end":414240,"line_start":213,"line_end":213,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3078},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414374,"byte_end":414376,"line_start":220,"line_end":220,"column_start":12,"column_end":14},"name":"Tx","qualname":"::serial::Tx","value":"Tx {  }","parent":null,"children":[{"krate":0,"index":3081},{"krate":0,"index":3082}],"decl_id":null,"docs":" Serial transmitter\n","sig":null,"attributes":[{"value":"/ Serial transmitter","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414340,"byte_end":414362,"line_start":219,"line_end":219,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414842,"byte_end":414848,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"listen","qualname":"<Rx<USART, WORD>>::listen","value":"pub fn listen(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start listening for an rx not empty interrupt event","sig":null,"attributes":[{"value":"/ Start listening for an rx not empty interrupt event","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414649,"byte_end":414704,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414709,"byte_end":414712,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note, you will also have to enable the corresponding interrupt","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414717,"byte_end":414783,"line_start":238,"line_end":238,"column_start":5,"column_end":71}},{"value":"/ in the NVIC to start receiving events.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414788,"byte_end":414830,"line_start":239,"line_end":239,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3089},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415015,"byte_end":415023,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<Rx<USART, WORD>>::unlisten","value":"pub fn unlisten(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop listening for the rx not empty interrupt event\n","sig":null,"attributes":[{"value":"/ Stop listening for the rx not empty interrupt event","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414948,"byte_end":415003,"line_start":244,"line_end":244,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3091},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415314,"byte_end":415325,"line_start":253,"line_end":253,"column_start":12,"column_end":23},"name":"listen_idle","qualname":"<Rx<USART, WORD>>::listen_idle","value":"pub fn listen_idle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start listening for a line idle interrupt event","sig":null,"attributes":[{"value":"/ Start listening for a line idle interrupt event","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415125,"byte_end":415176,"line_start":249,"line_end":249,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415181,"byte_end":415184,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Note, you will also have to enable the corresponding interrupt","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415189,"byte_end":415255,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/ in the NVIC to start receiving events.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415260,"byte_end":415302,"line_start":252,"line_end":252,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415489,"byte_end":415502,"line_start":258,"line_end":258,"column_start":12,"column_end":25},"name":"unlisten_idle","qualname":"<Rx<USART, WORD>>::unlisten_idle","value":"pub fn unlisten_idle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop listening for the line idle interrupt event\n","sig":null,"attributes":[{"value":"/ Stop listening for the line idle interrupt event","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415425,"byte_end":415477,"line_start":257,"line_end":257,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3095},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415662,"byte_end":415669,"line_start":263,"line_end":263,"column_start":12,"column_end":19},"name":"is_idle","qualname":"<Rx<USART, WORD>>::is_idle","value":"pub fn is_idle(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the line idle status is set\n","sig":null,"attributes":[{"value":"/ Return true if the line idle status is set","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415604,"byte_end":415650,"line_start":262,"line_end":262,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415840,"byte_end":415855,"line_start":268,"line_end":268,"column_start":12,"column_end":27},"name":"is_rx_not_empty","qualname":"<Rx<USART, WORD>>::is_rx_not_empty","value":"pub fn is_rx_not_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the rx register is not empty (and can be read)\n","sig":null,"attributes":[{"value":"/ Return true if the rx register is not empty (and can be read)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415763,"byte_end":415828,"line_start":267,"line_end":267,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3097},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415995,"byte_end":416015,"line_start":273,"line_end":273,"column_start":12,"column_end":32},"name":"clear_idle_interrupt","qualname":"<Rx<USART, WORD>>::clear_idle_interrupt","value":"pub fn clear_idle_interrupt(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear idle line interrupt flag\n","sig":null,"attributes":[{"value":"/ Clear idle line interrupt flag","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":415949,"byte_end":415983,"line_start":272,"line_end":272,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":416530,"byte_end":416536,"line_start":296,"line_end":296,"column_start":12,"column_end":18},"name":"listen","qualname":"<Tx<USART, WORD>>::listen","value":"pub fn listen(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start listening for a tx empty interrupt event","sig":null,"attributes":[{"value":"/ Start listening for a tx empty interrupt event","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":416342,"byte_end":416392,"line_start":292,"line_end":292,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":416397,"byte_end":416400,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Note, you will also have to enable the corresponding interrupt","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":416405,"byte_end":416471,"line_start":294,"line_end":294,"column_start":5,"column_end":71}},{"value":"/ in the NVIC to start receiving events.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":416476,"byte_end":416518,"line_start":295,"line_end":295,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":416698,"byte_end":416706,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<Tx<USART, WORD>>::unlisten","value":"pub fn unlisten(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop listening for the tx empty interrupt event\n","sig":null,"attributes":[{"value":"/ Stop listening for the tx empty interrupt event","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":416635,"byte_end":416686,"line_start":300,"line_end":300,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":416884,"byte_end":416895,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"is_tx_empty","qualname":"<Tx<USART, WORD>>::is_tx_empty","value":"pub fn is_tx_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the tx register is empty (and can accept data)\n","sig":null,"attributes":[{"value":"/ Return true if the tx register is empty (and can accept data)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":416807,"byte_end":416872,"line_start":305,"line_end":305,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":3127},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417612,"byte_end":417621,"line_start":335,"line_end":335,"column_start":11,"column_end":20},"name":"SerialExt","qualname":"::serial::SerialExt","value":"SerialExt: Sized + Instance","parent":null,"children":[{"krate":0,"index":3128},{"krate":0,"index":3132},{"krate":0,"index":3136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417649,"byte_end":417655,"line_start":336,"line_end":336,"column_start":8,"column_end":14},"name":"serial","qualname":"::serial::SerialExt::serial","value":"pub fn serial<PINS: Pins<Self>, WORD,\n              impl Into<config::Config>: Into<config::Config>>(Self, PINS,\n                                                               impl Into<config::Config>,\n                                                               &Clocks)\n-> Result<Serial<Self, PINS, WORD>, config::InvalidConfig>","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417856,"byte_end":417858,"line_start":342,"line_end":342,"column_start":8,"column_end":10},"name":"tx","qualname":"::serial::SerialExt::tx","value":"pub fn tx<TX, WORD,\n          impl Into<config::Config>: Into<config::Config>>(Self, TX,\n                                                           impl Into<config::Config>,\n                                                           &Clocks)\n-> Result<Tx<Self, WORD>, config::InvalidConfig> where (TX, NoPin): Pins<Self>","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":418077,"byte_end":418079,"line_start":350,"line_end":350,"column_start":8,"column_end":10},"name":"rx","qualname":"::serial::SerialExt::rx","value":"pub fn rx<RX, WORD,\n          impl Into<config::Config>: Into<config::Config>>(Self, RX,\n                                                           impl Into<config::Config>,\n                                                           &Clocks)\n-> Result<Rx<Self, WORD>, config::InvalidConfig> where (NoPin, RX): Pins<Self>","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":419443,"byte_end":419446,"line_start":403,"line_end":403,"column_start":12,"column_end":15},"name":"new","qualname":"<Serial<USART, PINS, WORD>>::new","value":"pub fn new<impl Into<config::Config>: Into<config::Config>>(USART, PINS,\n                                                            impl Into<config::Config>,\n                                                            &Clocks)\n-> Result<Self, config::InvalidConfig>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":423600,"byte_end":423607,"line_start":524,"line_end":524,"column_start":12,"column_end":19},"name":"release","qualname":"<Serial<USART, PINS, WORD>>::release","value":"pub fn release(Self) -> (USART, PINS)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":423838,"byte_end":423840,"line_start":536,"line_end":536,"column_start":12,"column_end":14},"name":"tx","qualname":"<Serial<USART, (TX, NoPin), WORD>>::tx","value":"pub fn tx<impl Into<config::Config>: Into<config::Config>>(USART, TX,\n                                                           impl Into<config::Config>,\n                                                           &Clocks)\n-> Result<Tx<USART, WORD>, config::InvalidConfig>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":424223,"byte_end":424225,"line_start":551,"line_end":551,"column_start":12,"column_end":14},"name":"rx","qualname":"<Serial<USART, (NoPin, RX), WORD>>::rx","value":"pub fn rx<impl Into<config::Config>: Into<config::Config>>(USART, RX,\n                                                           impl Into<config::Config>,\n                                                           &Clocks)\n-> Result<Rx<USART, WORD>, config::InvalidConfig>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":424747,"byte_end":424753,"line_start":569,"line_end":569,"column_start":12,"column_end":18},"name":"listen","qualname":"<Serial<USART, PINS, WORD>>::listen","value":"pub fn listen(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Starts listening for an interrupt event","sig":null,"attributes":[{"value":"/ Starts listening for an interrupt event","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":424566,"byte_end":424609,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":424614,"byte_end":424617,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ Note, you will also have to enable the corresponding interrupt","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":424622,"byte_end":424688,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/ in the NVIC to start receiving events.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":424693,"byte_end":424735,"line_start":568,"line_end":568,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":425160,"byte_end":425168,"line_start":578,"line_end":578,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<Serial<USART, PINS, WORD>>::unlisten","value":"pub fn unlisten(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Stop listening for an interrupt event\n","sig":null,"attributes":[{"value":"/ Stop listening for an interrupt event","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":425107,"byte_end":425148,"line_start":577,"line_end":577,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":425586,"byte_end":425593,"line_start":587,"line_end":587,"column_start":12,"column_end":19},"name":"is_idle","qualname":"<Serial<USART, PINS, WORD>>::is_idle","value":"pub fn is_idle(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the line idle status is set\n","sig":null,"attributes":[{"value":"/ Return true if the line idle status is set","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":425528,"byte_end":425574,"line_start":586,"line_end":586,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":425764,"byte_end":425775,"line_start":592,"line_end":592,"column_start":12,"column_end":23},"name":"is_tx_empty","qualname":"<Serial<USART, PINS, WORD>>::is_tx_empty","value":"pub fn is_tx_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the tx register is empty (and can accept data)\n","sig":null,"attributes":[{"value":"/ Return true if the tx register is empty (and can accept data)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":425687,"byte_end":425752,"line_start":591,"line_end":591,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":425945,"byte_end":425960,"line_start":597,"line_end":597,"column_start":12,"column_end":27},"name":"is_rx_not_empty","qualname":"<Serial<USART, PINS, WORD>>::is_rx_not_empty","value":"pub fn is_rx_not_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the rx register is not empty (and can be read)\n","sig":null,"attributes":[{"value":"/ Return true if the rx register is not empty (and can be read)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":425868,"byte_end":425933,"line_start":596,"line_end":596,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426100,"byte_end":426120,"line_start":602,"line_end":602,"column_start":12,"column_end":32},"name":"clear_idle_interrupt","qualname":"<Serial<USART, PINS, WORD>>::clear_idle_interrupt","value":"pub fn clear_idle_interrupt(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear idle line interrupt flag\n","sig":null,"attributes":[{"value":"/ Clear idle line interrupt flag","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426054,"byte_end":426088,"line_start":601,"line_end":601,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3197},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426269,"byte_end":426274,"line_start":609,"line_end":609,"column_start":12,"column_end":17},"name":"split","qualname":"<Serial<USART, PINS, WORD>>::split","value":"pub fn split(Self) -> (Tx<USART, WORD>, Rx<USART, WORD>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3201},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426600,"byte_end":426613,"line_start":621,"line_end":621,"column_start":12,"column_end":25},"name":"with_u16_data","qualname":"<Serial<USART, PINS, u8>>::with_u16_data","value":"pub fn with_u16_data(Self) -> Serial<USART, PINS, u16>","parent":null,"children":[],"decl_id":null,"docs":" Converts this Serial into a version that can read and write `u16` values instead of `u8`s","sig":null,"attributes":[{"value":"/ Converts this Serial into a version that can read and write `u16` values instead of `u8`s","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426432,"byte_end":426525,"line_start":618,"line_end":618,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426530,"byte_end":426533,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ This can be used with a word length of 9 bits.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426538,"byte_end":426588,"line_start":620,"line_end":620,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":427044,"byte_end":427056,"line_start":638,"line_end":638,"column_start":12,"column_end":24},"name":"with_u8_data","qualname":"<Serial<USART, PINS, u16>>::with_u8_data","value":"pub fn with_u8_data(Self) -> Serial<USART, PINS, u8>","parent":null,"children":[],"decl_id":null,"docs":" Converts this Serial into a version that can read and write `u8` values instead of `u16`s","sig":null,"attributes":[{"value":"/ Converts this Serial into a version that can read and write `u8` values instead of `u16`s","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426876,"byte_end":426969,"line_start":635,"line_end":635,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426974,"byte_end":426977,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This can be used with a word length of 8 bits.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426982,"byte_end":427032,"line_start":637,"line_end":637,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":3222},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":428652,"byte_end":428660,"line_start":713,"line_end":713,"column_start":11,"column_end":19},"name":"Instance","qualname":"::serial::Instance","value":"Instance: crate::Sealed + rcc::Enable + rcc::Reset + rcc::BusClock","parent":null,"children":[{"krate":0,"index":3223},{"krate":0,"index":3224}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":428747,"byte_end":428750,"line_start":715,"line_end":715,"column_start":8,"column_end":11},"name":"ptr","qualname":"::serial::Instance::ptr","value":"pub fn ptr() -> *const uart_base::RegisterBlock","parent":{"krate":0,"index":3222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":428815,"byte_end":428827,"line_start":717,"line_end":717,"column_start":8,"column_end":20},"name":"set_stopbits","qualname":"::serial::Instance::set_stopbits","value":"pub fn set_stopbits(&Self, config::StopBits)","parent":{"krate":0,"index":3222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8144},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":430986,"byte_end":430993,"line_start":786,"line_end":786,"column_start":26,"column_end":33},"name":"Serial1","qualname":"::serial::Serial1","value":"Serial<pac::USART1, PINS, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8146},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":430995,"byte_end":430998,"line_start":786,"line_end":786,"column_start":35,"column_end":38},"name":"Rx1","qualname":"::serial::Rx1","value":"Tx<pac::USART1, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8147},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":431000,"byte_end":431003,"line_start":786,"line_end":786,"column_start":40,"column_end":43},"name":"Tx1","qualname":"::serial::Tx1","value":"Rx<pac::USART1, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8158},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":431031,"byte_end":431038,"line_start":787,"line_end":787,"column_start":26,"column_end":33},"name":"Serial2","qualname":"::serial::Serial2","value":"Serial<pac::USART2, PINS, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8160},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":431040,"byte_end":431043,"line_start":787,"line_end":787,"column_start":35,"column_end":38},"name":"Rx2","qualname":"::serial::Rx2","value":"Tx<pac::USART2, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8161},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":431045,"byte_end":431048,"line_start":787,"line_end":787,"column_start":40,"column_end":43},"name":"Tx2","qualname":"::serial::Tx2","value":"Rx<pac::USART2, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8172},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":431076,"byte_end":431083,"line_start":788,"line_end":788,"column_start":26,"column_end":33},"name":"Serial6","qualname":"::serial::Serial6","value":"Serial<pac::USART6, PINS, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8174},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":431085,"byte_end":431088,"line_start":788,"line_end":788,"column_start":35,"column_end":38},"name":"Rx6","qualname":"::serial::Rx6","value":"Tx<pac::USART6, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8175},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":431090,"byte_end":431093,"line_start":788,"line_end":788,"column_start":40,"column_end":43},"name":"Tx6","qualname":"::serial::Tx6","value":"Rx<pac::USART6, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3255},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signature","qualname":"::signature","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","parent":null,"children":[{"krate":0,"index":3256},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":8186},{"krate":0,"index":8191},{"krate":0,"index":8194},{"krate":0,"index":8196},{"krate":0,"index":3261},{"krate":0,"index":8199},{"krate":0,"index":8202},{"krate":0,"index":8204},{"krate":0,"index":3266},{"krate":0,"index":8207},{"krate":0,"index":8210},{"krate":0,"index":8212},{"krate":0,"index":3269},{"krate":0,"index":8215},{"krate":0,"index":8218},{"krate":0,"index":8220},{"krate":0,"index":3271},{"krate":0,"index":8223},{"krate":0,"index":8226},{"krate":0,"index":8228},{"krate":0,"index":3273}],"decl_id":null,"docs":" Device electronic signature","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5358,"byte_end":5393,"line_start":165,"line_end":165,"column_start":1,"column_end":36}},{"value":"/ Device electronic signature","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":442855,"byte_end":442886,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":442887,"byte_end":442890,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ (stored in flash memory)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":442891,"byte_end":442919,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":3259},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443051,"byte_end":443061,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"name":"VDDA_CALIB","qualname":"::signature::VDDA_CALIB","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" This is the test voltage, in millivolts of the calibration done at the factory\n","sig":null,"attributes":[{"value":"/ This is the test voltage, in millivolts of the calibration done at the factory","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":442958,"byte_end":443040,"line_start":7,"line_end":7,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":8186},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443518,"byte_end":443521,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"Uid","qualname":"::signature::Uid","value":"Uid {  }","parent":null,"children":[{"krate":0,"index":8187},{"krate":0,"index":8188},{"krate":0,"index":8189}],"decl_id":null,"docs":" Uniqure Device ID register\n","sig":null,"attributes":[{"value":"/ Uniqure Device ID register","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443442,"byte_end":443472,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"repr(C)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443496,"byte_end":443506,"line_start":27,"line_end":27,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":3262},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443661,"byte_end":443662,"line_start":37,"line_end":37,"column_start":12,"column_end":13},"name":"x","qualname":"<Uid>::x","value":"pub fn x(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" X coordinate on wafer\n","sig":null,"attributes":[{"value":"/ X coordinate on wafer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443624,"byte_end":443649,"line_start":36,"line_end":36,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443742,"byte_end":443743,"line_start":42,"line_end":42,"column_start":12,"column_end":13},"name":"y","qualname":"<Uid>::y","value":"pub fn y(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Y coordinate on wafer\n","sig":null,"attributes":[{"value":"/ Y coordinate on wafer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443705,"byte_end":443730,"line_start":41,"line_end":41,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3264},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443814,"byte_end":443821,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"waf_num","qualname":"<Uid>::waf_num","value":"pub fn waf_num(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Wafer number\n","sig":null,"attributes":[{"value":"/ Wafer number","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443786,"byte_end":443802,"line_start":46,"line_end":46,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443898,"byte_end":443905,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"lot_num","qualname":"<Uid>::lot_num","value":"pub fn lot_num(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Lot number\n","sig":null,"attributes":[{"value":"/ Lot number","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443872,"byte_end":443886,"line_start":51,"line_end":51,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":8199},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444059,"byte_end":444068,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"FlashSize","qualname":"::signature::FlashSize","value":"","parent":null,"children":[],"decl_id":null,"docs":" Size of integrated flash\n","sig":null,"attributes":[{"value":"/ Size of integrated flash","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443991,"byte_end":444019,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"repr(C)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444037,"byte_end":444047,"line_start":59,"line_end":59,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444183,"byte_end":444193,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"kilo_bytes","qualname":"<FlashSize>::kilo_bytes","value":"pub fn kilo_bytes(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Read flash size in kilobytes\n","sig":null,"attributes":[{"value":"/ Read flash size in kilobytes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444139,"byte_end":444171,"line_start":64,"line_end":64,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444276,"byte_end":444281,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"bytes","qualname":"<FlashSize>::bytes","value":"pub fn bytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Read flash size in bytes\n","sig":null,"attributes":[{"value":"/ Read flash size in bytes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444236,"byte_end":444264,"line_start":69,"line_end":69,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":8207},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444453,"byte_end":444460,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"VrefCal","qualname":"::signature::VrefCal","value":"","parent":null,"children":[],"decl_id":null,"docs":" ADC VREF calibration value is stored in at the factory\n","sig":null,"attributes":[{"value":"/ ADC VREF calibration value is stored in at the factory","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444355,"byte_end":444413,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"repr(C)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444431,"byte_end":444441,"line_start":77,"line_end":77,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444565,"byte_end":444569,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"read","qualname":"<VrefCal>::read","value":"pub fn read(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Read calibration value\n","sig":null,"attributes":[{"value":"/ Read calibration value","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444527,"byte_end":444553,"line_start":82,"line_end":82,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8215},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444712,"byte_end":444722,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"VtempCal30","qualname":"::signature::VtempCal30","value":"","parent":null,"children":[],"decl_id":null,"docs":" A temperature reading taken at 30°C stored at the factory\n","sig":null,"attributes":[{"value":"/ A temperature reading taken at 30°C stored at the factory","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444610,"byte_end":444672,"line_start":88,"line_end":88,"column_start":1,"column_end":62}},{"value":"repr(C)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444690,"byte_end":444700,"line_start":90,"line_end":90,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444833,"byte_end":444837,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"read","qualname":"<VtempCal30>::read","value":"pub fn read(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Read calibration value\n","sig":null,"attributes":[{"value":"/ Read calibration value","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444795,"byte_end":444821,"line_start":95,"line_end":95,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8223},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444981,"byte_end":444992,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"VtempCal110","qualname":"::signature::VtempCal110","value":"","parent":null,"children":[],"decl_id":null,"docs":" A temperature reading taken at 110°C stored at the factory\n","sig":null,"attributes":[{"value":"/ A temperature reading taken at 110°C stored at the factory","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444878,"byte_end":444941,"line_start":101,"line_end":101,"column_start":1,"column_end":63}},{"value":"repr(C)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444959,"byte_end":444969,"line_start":103,"line_end":103,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":445105,"byte_end":445109,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"read","qualname":"<VtempCal110>::read","value":"pub fn read(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Read calibration value\n","sig":null,"attributes":[{"value":"/ Read calibration value","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":445067,"byte_end":445093,"line_start":108,"line_end":108,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":3275},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spi","qualname":"::spi","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","parent":null,"children":[{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3285},{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3290},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3301},{"krate":0,"index":3304},{"krate":0,"index":8231},{"krate":0,"index":8236},{"krate":0,"index":8238},{"krate":0,"index":8239},{"krate":0,"index":8241},{"krate":0,"index":8242},{"krate":0,"index":8244},{"krate":0,"index":8245},{"krate":0,"index":8247},{"krate":0,"index":8252},{"krate":0,"index":8254},{"krate":0,"index":8255},{"krate":0,"index":8257},{"krate":0,"index":8258},{"krate":0,"index":8260},{"krate":0,"index":8261},{"krate":0,"index":8263},{"krate":0,"index":8266},{"krate":0,"index":8268},{"krate":0,"index":8269},{"krate":0,"index":8271},{"krate":0,"index":8272},{"krate":0,"index":8275},{"krate":0,"index":8276},{"krate":0,"index":3307},{"krate":0,"index":3432},{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":3568},{"krate":0,"index":3571},{"krate":0,"index":3574},{"krate":0,"index":3577},{"krate":0,"index":8278},{"krate":0,"index":8285},{"krate":0,"index":8287},{"krate":0,"index":8288},{"krate":0,"index":8290},{"krate":0,"index":8291},{"krate":0,"index":8293},{"krate":0,"index":8294},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3585},{"krate":0,"index":3586},{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3591},{"krate":0,"index":3592},{"krate":0,"index":3596},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":8296},{"krate":0,"index":8303},{"krate":0,"index":8305},{"krate":0,"index":8306},{"krate":0,"index":8308},{"krate":0,"index":8309},{"krate":0,"index":8311},{"krate":0,"index":8312},{"krate":0,"index":3609},{"krate":0,"index":3611},{"krate":0,"index":8314},{"krate":0,"index":8321},{"krate":0,"index":3613},{"krate":0,"index":3615},{"krate":0,"index":8326},{"krate":0,"index":8328},{"krate":0,"index":8330},{"krate":0,"index":8332},{"krate":0,"index":8334},{"krate":0,"index":8336},{"krate":0,"index":8338},{"krate":0,"index":8340},{"krate":0,"index":8342},{"krate":0,"index":8344},{"krate":0,"index":3616},{"krate":0,"index":3623},{"krate":0,"index":3631},{"krate":0,"index":3637},{"krate":0,"index":3643},{"krate":0,"index":3648},{"krate":0,"index":3653},{"krate":0,"index":3658},{"krate":0,"index":3689},{"krate":0,"index":3692},{"krate":0,"index":3695},{"krate":0,"index":3698},{"krate":0,"index":3707},{"krate":0,"index":3711}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5413,"byte_end":5448,"line_start":167,"line_end":167,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8232},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445459,"byte_end":445466,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"IdleLow","qualname":"::spi::Polarity::IdleLow","value":"Polarity::IdleLow","parent":{"krate":0,"index":8231},"children":[],"decl_id":null,"docs":" Clock signal low when idle\n","sig":null,"attributes":[{"value":"/ Clock signal low when idle","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445424,"byte_end":445454,"line_start":12,"line_end":12,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8234},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445508,"byte_end":445516,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"IdleHigh","qualname":"::spi::Polarity::IdleHigh","value":"Polarity::IdleHigh","parent":{"krate":0,"index":8231},"children":[],"decl_id":null,"docs":" Clock signal high when idle\n","sig":null,"attributes":[{"value":"/ Clock signal high when idle","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445472,"byte_end":445503,"line_start":14,"line_end":14,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":8231},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445409,"byte_end":445417,"line_start":11,"line_end":11,"column_start":10,"column_end":18},"name":"Polarity","qualname":"::spi::Polarity","value":"pub enum Polarity { IdleLow, IdleHigh, }","parent":null,"children":[{"krate":0,"index":8232},{"krate":0,"index":8234}],"decl_id":null,"docs":" Clock polarity\n","sig":null,"attributes":[{"value":"/ Clock polarity","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445336,"byte_end":445354,"line_start":9,"line_end":9,"column_start":1,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8248},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445660,"byte_end":445684,"line_start":22,"line_end":22,"column_start":5,"column_end":29},"name":"CaptureOnFirstTransition","qualname":"::spi::Phase::CaptureOnFirstTransition","value":"Phase::CaptureOnFirstTransition","parent":{"krate":0,"index":8247},"children":[],"decl_id":null,"docs":" Data in \"captured\" on the first clock transition\n","sig":null,"attributes":[{"value":"/ Data in \"captured\" on the first clock transition","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445603,"byte_end":445655,"line_start":21,"line_end":21,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8250},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445748,"byte_end":445773,"line_start":24,"line_end":24,"column_start":5,"column_end":30},"name":"CaptureOnSecondTransition","qualname":"::spi::Phase::CaptureOnSecondTransition","value":"Phase::CaptureOnSecondTransition","parent":{"krate":0,"index":8247},"children":[],"decl_id":null,"docs":" Data in \"captured\" on the second clock transition\n","sig":null,"attributes":[{"value":"/ Data in \"captured\" on the second clock transition","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445690,"byte_end":445743,"line_start":23,"line_end":23,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":8247},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445591,"byte_end":445596,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Phase","qualname":"::spi::Phase","value":"pub enum Phase { CaptureOnFirstTransition, CaptureOnSecondTransition, }","parent":null,"children":[{"krate":0,"index":8248},{"krate":0,"index":8250}],"decl_id":null,"docs":" Clock phase\n","sig":null,"attributes":[{"value":"/ Clock phase","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445521,"byte_end":445536,"line_start":18,"line_end":18,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":8263},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445847,"byte_end":445851,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Mode","qualname":"::spi::Mode","value":"Mode { polarity, phase }","parent":null,"children":[{"krate":0,"index":8264},{"krate":0,"index":8265}],"decl_id":null,"docs":" SPI mode\n","sig":null,"attributes":[{"value":"/ SPI mode","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445778,"byte_end":445790,"line_start":27,"line_end":27,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":8264},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445885,"byte_end":445893,"line_start":31,"line_end":31,"column_start":9,"column_end":17},"name":"polarity","qualname":"::spi::Mode::polarity","value":"spi::Polarity","parent":{"krate":0,"index":8263},"children":[],"decl_id":null,"docs":" Clock polarity\n","sig":null,"attributes":[{"value":"/ Clock polarity","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445858,"byte_end":445876,"line_start":30,"line_end":30,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":8265},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445933,"byte_end":445938,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"phase","qualname":"::spi::Mode::phase","value":"spi::Phase","parent":{"krate":0,"index":8263},"children":[],"decl_id":null,"docs":" Clock phase\n","sig":null,"attributes":[{"value":"/ Clock phase","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":445909,"byte_end":445924,"line_start":32,"line_end":32,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8279},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446252,"byte_end":446259,"line_start":51,"line_end":51,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::spi::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":8278},"children":[],"decl_id":null,"docs":" Overrun occurred\n","sig":null,"attributes":[{"value":"/ Overrun occurred","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446227,"byte_end":446247,"line_start":50,"line_end":50,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8281},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446293,"byte_end":446302,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"name":"ModeFault","qualname":"::spi::Error::ModeFault","value":"Error::ModeFault","parent":{"krate":0,"index":8278},"children":[],"decl_id":null,"docs":" Mode fault occurred\n","sig":null,"attributes":[{"value":"/ Mode fault occurred","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446265,"byte_end":446288,"line_start":52,"line_end":52,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8283},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446326,"byte_end":446329,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"Crc","qualname":"::spi::Error::Crc","value":"Error::Crc","parent":{"krate":0,"index":8278},"children":[],"decl_id":null,"docs":" CRC error\n","sig":null,"attributes":[{"value":"/ CRC error","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446308,"byte_end":446321,"line_start":54,"line_end":54,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":8278},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446215,"byte_end":446220,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Error","qualname":"::spi::Error","value":"pub enum Error { Overrun, ModeFault, Crc, }","parent":null,"children":[{"krate":0,"index":8279},{"krate":0,"index":8281},{"krate":0,"index":8283}],"decl_id":null,"docs":" SPI error\n","sig":null,"attributes":[{"value":"/ SPI error","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446075,"byte_end":446088,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"non_exhaustive","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446188,"byte_end":446205,"line_start":48,"line_end":48,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3580},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446345,"byte_end":446348,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"Sck","qualname":"::spi::Sck","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3583},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446391,"byte_end":446395,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"Miso","qualname":"::spi::Miso","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3586},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446439,"byte_end":446443,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"Mosi","qualname":"::spi::Mosi","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3589},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446487,"byte_end":446490,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"Nss","qualname":"::spi::Nss","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3592},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446533,"byte_end":446537,"line_start":67,"line_end":67,"column_start":11,"column_end":15},"name":"Pins","qualname":"::spi::Pins","value":"Pins<SPI>","parent":null,"children":[{"krate":0,"index":3594},{"krate":0,"index":3595}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446552,"byte_end":446564,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"set_alt_mode","qualname":"::spi::Pins::set_alt_mode","value":"pub fn set_alt_mode(&mut Self)","parent":{"krate":0,"index":3592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446584,"byte_end":446596,"line_start":69,"line_end":69,"column_start":8,"column_end":20},"name":"restore_mode","qualname":"::spi::Pins::restore_mode","value":"pub fn restore_mode(&mut Self)","parent":{"krate":0,"index":3592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3606},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447290,"byte_end":447295,"line_start":92,"line_end":92,"column_start":10,"column_end":15},"name":"NoSck","qualname":"::spi::NoSck","value":"NoPin","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the SCK pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the SCK pin is unnecessary","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447227,"byte_end":447280,"line_start":91,"line_end":91,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":3607},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447369,"byte_end":447375,"line_start":94,"line_end":94,"column_start":10,"column_end":16},"name":"NoMiso","qualname":"::spi::NoMiso","value":"NoPin","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the Miso pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the Miso pin is unnecessary","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447305,"byte_end":447359,"line_start":93,"line_end":93,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":3608},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447449,"byte_end":447455,"line_start":96,"line_end":96,"column_start":10,"column_end":16},"name":"NoMosi","qualname":"::spi::NoMosi","value":"NoPin","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the Mosi pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the Mosi pin is unnecessary","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447385,"byte_end":447439,"line_start":95,"line_end":95,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8297},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447642,"byte_end":447646,"line_start":103,"line_end":103,"column_start":5,"column_end":9},"name":"Rxne","qualname":"::spi::Event::Rxne","value":"Event::Rxne","parent":{"krate":0,"index":8296},"children":[],"decl_id":null,"docs":" New data has been received\n","sig":null,"attributes":[{"value":"/ New data has been received","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447607,"byte_end":447637,"line_start":102,"line_end":102,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8299},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447677,"byte_end":447680,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"Txe","qualname":"::spi::Event::Txe","value":"Event::Txe","parent":{"krate":0,"index":8296},"children":[],"decl_id":null,"docs":" Data can be sent\n","sig":null,"attributes":[{"value":"/ Data can be sent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447652,"byte_end":447672,"line_start":104,"line_end":104,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8301},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447712,"byte_end":447717,"line_start":107,"line_end":107,"column_start":5,"column_end":10},"name":"Error","qualname":"::spi::Event::Error","value":"Event::Error","parent":{"krate":0,"index":8296},"children":[],"decl_id":null,"docs":" An error occurred\n","sig":null,"attributes":[{"value":"/ An error occurred","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447686,"byte_end":447707,"line_start":106,"line_end":106,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":8296},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447595,"byte_end":447600,"line_start":101,"line_end":101,"column_start":10,"column_end":15},"name":"Event","qualname":"::spi::Event","value":"pub enum Event { Rxne, Txe, Error, }","parent":null,"children":[{"krate":0,"index":8297},{"krate":0,"index":8299},{"krate":0,"index":8301}],"decl_id":null,"docs":" Interrupt events\n","sig":null,"attributes":[{"value":"/ Interrupt events","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447466,"byte_end":447486,"line_start":98,"line_end":98,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3609},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447782,"byte_end":447800,"line_start":111,"line_end":111,"column_start":12,"column_end":30},"name":"TransferModeNormal","qualname":"::spi::TransferModeNormal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Normal mode - RX and TX pins are independent\n","sig":null,"attributes":[{"value":"/ Normal mode - RX and TX pins are independent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447722,"byte_end":447770,"line_start":110,"line_end":110,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3611},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447868,"byte_end":447884,"line_start":113,"line_end":113,"column_start":12,"column_end":28},"name":"TransferModeBidi","qualname":"::spi::TransferModeBidi","value":"","parent":null,"children":[],"decl_id":null,"docs":" BIDI mode - use TX pin as RX then spi receive data\n","sig":null,"attributes":[{"value":"/ BIDI mode - use TX pin as RX then spi receive data","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447802,"byte_end":447856,"line_start":112,"line_end":112,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":8314},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":447915,"byte_end":447918,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"Spi","qualname":"::spi::Spi","value":"Spi {  }","parent":null,"children":[{"krate":0,"index":8318},{"krate":0,"index":8319},{"krate":0,"index":8320}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3613},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448074,"byte_end":448082,"line_start":123,"line_end":123,"column_start":11,"column_end":19},"name":"Instance","qualname":"::spi::Instance","value":"Instance: crate::Sealed + Deref<Target = spi1::RegisterBlock> + rcc::Enable +\nrcc::Reset + rcc::BusClock","parent":null,"children":[{"krate":0,"index":3614}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448211,"byte_end":448214,"line_start":127,"line_end":127,"column_start":8,"column_end":11},"name":"ptr","qualname":"::spi::Instance::ptr","value":"pub fn ptr() -> *const spi1::RegisterBlock","parent":{"krate":0,"index":3613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8326},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448585,"byte_end":448589,"line_start":143,"line_end":143,"column_start":19,"column_end":23},"name":"Spi1","qualname":"::spi::Spi1","value":"Spi<pac::SPI1, PINS, TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8330},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448610,"byte_end":448614,"line_start":144,"line_end":144,"column_start":19,"column_end":23},"name":"Spi2","qualname":"::spi::Spi2","value":"Spi<pac::SPI2, PINS, TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8334},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448661,"byte_end":448665,"line_start":147,"line_end":147,"column_start":19,"column_end":23},"name":"Spi3","qualname":"::spi::Spi3","value":"Spi<pac::SPI3, PINS, TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8338},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448712,"byte_end":448716,"line_start":150,"line_end":150,"column_start":19,"column_end":23},"name":"Spi4","qualname":"::spi::Spi4","value":"Spi<pac::SPI4, PINS, TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8342},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448763,"byte_end":448767,"line_start":153,"line_end":153,"column_start":19,"column_end":23},"name":"Spi5","qualname":"::spi::Spi5","value":"Spi<pac::SPI5, PINS, TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3616},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448832,"byte_end":448838,"line_start":158,"line_end":158,"column_start":11,"column_end":17},"name":"SpiExt","qualname":"::spi::SpiExt","value":"SpiExt: Sized + Instance","parent":null,"children":[{"krate":0,"index":3617},{"krate":0,"index":3620}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448866,"byte_end":448869,"line_start":159,"line_end":159,"column_start":8,"column_end":11},"name":"spi","qualname":"::spi::SpiExt::spi","value":"pub fn spi<PINS: Pins<Self>,\n           impl Into<Mode>: Into<Mode>>(Self, PINS, impl Into<Mode>, Hertz,\n                                        &Clocks)\n-> Spi<Self, PINS, TransferModeNormal>","parent":{"krate":0,"index":3616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":449053,"byte_end":449061,"line_start":166,"line_end":166,"column_start":8,"column_end":16},"name":"spi_bidi","qualname":"::spi::SpiExt::spi_bidi","value":"pub fn spi_bidi<PINS: Pins<Self>,\n                impl Into<Mode>: Into<Mode>>(Self, PINS, impl Into<Mode>,\n                                             Hertz, &Clocks)\n-> Spi<Self, PINS, TransferModeBidi>","parent":{"krate":0,"index":3616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":449883,"byte_end":449886,"line_start":201,"line_end":201,"column_start":12,"column_end":15},"name":"new","qualname":"<Spi<SPI, PINS, TransferModeNormal>>::new","value":"pub fn new<impl Into<Mode>: Into<Mode>>(SPI, PINS, impl Into<Mode>, Hertz,\n                                        &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":450408,"byte_end":450429,"line_start":222,"line_end":222,"column_start":12,"column_end":33},"name":"to_bidi_transfer_mode","qualname":"<Spi<SPI, PINS, TransferModeNormal>>::to_bidi_transfer_mode","value":"pub fn to_bidi_transfer_mode(Self) -> Spi<SPI, PINS, TransferModeBidi>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3640},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":450736,"byte_end":450744,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"new_bidi","qualname":"<Spi<SPI, PINS, TransferModeBidi>>::new_bidi","value":"pub fn new_bidi<impl Into<Mode>: Into<Mode>>(SPI, PINS, impl Into<Mode>,\n                                             Hertz, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":451266,"byte_end":451289,"line_start":255,"line_end":255,"column_start":12,"column_end":35},"name":"to_normal_transfer_mode","qualname":"<Spi<SPI, PINS, TransferModeBidi>>::to_normal_transfer_mode","value":"pub fn to_normal_transfer_mode(Self) -> Spi<SPI, PINS, TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":451612,"byte_end":451619,"line_start":267,"line_end":267,"column_start":12,"column_end":19},"name":"release","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::release","value":"pub fn release(Self) -> (SPI, PINS)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":451810,"byte_end":451814,"line_start":278,"line_end":278,"column_start":12,"column_end":16},"name":"init","qualname":"<Spi<SPI, PINS, TransferModeNormal>>::init","value":"pub fn init(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":452239,"byte_end":452243,"line_start":298,"line_end":298,"column_start":12,"column_end":16},"name":"init","qualname":"<Spi<SPI, PINS, TransferModeBidi>>::init","value":"pub fn init(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":453026,"byte_end":453032,"line_start":332,"line_end":332,"column_start":12,"column_end":18},"name":"enable","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::enable","value":"pub fn enable(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable/disable spi\n","sig":null,"attributes":[{"value":"/ Enable/disable spi","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":452992,"byte_end":453014,"line_start":331,"line_end":331,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":454747,"byte_end":454753,"line_start":389,"line_end":389,"column_start":12,"column_end":18},"name":"listen","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::listen","value":"pub fn listen(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Enable interrupts for the given `event`:\n  - Received data ready to be read (RXNE)\n  - Transmit data register empty (TXE)\n  - Transfer error\n","sig":null,"attributes":[{"value":"/ Enable interrupts for the given `event`:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":454570,"byte_end":454614,"line_start":385,"line_end":385,"column_start":5,"column_end":49}},{"value":"/  - Received data ready to be read (RXNE)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":454619,"byte_end":454663,"line_start":386,"line_end":386,"column_start":5,"column_end":49}},{"value":"/  - Transmit data register empty (TXE)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":454668,"byte_end":454709,"line_start":387,"line_end":387,"column_start":5,"column_end":46}},{"value":"/  - Transfer error","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":454714,"byte_end":454735,"line_start":388,"line_end":388,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455231,"byte_end":455239,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::unlisten","value":"pub fn unlisten(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Disable interrupts for the given `event`:\n  - Received data ready to be read (RXNE)\n  - Transmit data register empty (TXE)\n  - Transfer error\n","sig":null,"attributes":[{"value":"/ Disable interrupts for the given `event`:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455053,"byte_end":455098,"line_start":397,"line_end":397,"column_start":5,"column_end":50}},{"value":"/  - Received data ready to be read (RXNE)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455103,"byte_end":455147,"line_start":398,"line_end":398,"column_start":5,"column_end":49}},{"value":"/  - Transmit data register empty (TXE)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455152,"byte_end":455193,"line_start":399,"line_end":399,"column_start":5,"column_end":46}},{"value":"/  - Transfer error","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455198,"byte_end":455219,"line_start":400,"line_end":400,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455659,"byte_end":455665,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"is_txe","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::is_txe","value":"pub fn is_txe(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the TXE flag is set, i.e. new data to transmit\n can be written to the SPI.\n","sig":null,"attributes":[{"value":"/ Return `true` if the TXE flag is set, i.e. new data to transmit","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455545,"byte_end":455612,"line_start":409,"line_end":409,"column_start":5,"column_end":72}},{"value":"/ can be written to the SPI.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455617,"byte_end":455647,"line_start":410,"line_end":410,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3679},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455864,"byte_end":455871,"line_start":417,"line_end":417,"column_start":12,"column_end":19},"name":"is_rxne","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::is_rxne","value":"pub fn is_rxne(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the RXNE flag is set, i.e. new data has been received\n and can be read from the SPI.\n","sig":null,"attributes":[{"value":"/ Return `true` if the RXNE flag is set, i.e. new data has been received","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455740,"byte_end":455814,"line_start":415,"line_end":415,"column_start":5,"column_end":79}},{"value":"/ and can be read from the SPI.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455819,"byte_end":455852,"line_start":416,"line_end":416,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":456113,"byte_end":456120,"line_start":423,"line_end":423,"column_start":12,"column_end":19},"name":"is_modf","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::is_modf","value":"pub fn is_modf(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the MODF flag is set, i.e. the SPI has experienced a\n Master Mode Fault. (see chapter 28.3.10 of the STM32F4 Reference Manual)\n","sig":null,"attributes":[{"value":"/ Return `true` if the MODF flag is set, i.e. the SPI has experienced a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":455947,"byte_end":456020,"line_start":421,"line_end":421,"column_start":5,"column_end":78}},{"value":"/ Master Mode Fault. (see chapter 28.3.10 of the STM32F4 Reference Manual)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":456025,"byte_end":456101,"line_start":422,"line_end":422,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3681},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":456341,"byte_end":456347,"line_start":429,"line_end":429,"column_start":12,"column_end":18},"name":"is_ovr","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::is_ovr","value":"pub fn is_ovr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the OVR flag is set, i.e. new data has been received\n while the receive data register was already filled.\n","sig":null,"attributes":[{"value":"/ Return `true` if the OVR flag is set, i.e. new data has been received","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":456196,"byte_end":456269,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ while the receive data register was already filled.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":456274,"byte_end":456329,"line_start":428,"line_end":428,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":456429,"byte_end":456436,"line_start":433,"line_end":433,"column_start":12,"column_end":19},"name":"use_dma","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::use_dma","value":"pub fn use_dma(Self) -> DmaBuilder<SPI>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3689},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":458303,"byte_end":458313,"line_start":494,"line_end":494,"column_start":12,"column_end":22},"name":"DmaBuilder","qualname":"::spi::DmaBuilder","value":"DmaBuilder {  }","parent":null,"children":[{"krate":0,"index":3691}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3692},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":458349,"byte_end":458351,"line_start":498,"line_end":498,"column_start":12,"column_end":14},"name":"Tx","qualname":"::spi::Tx","value":"Tx {  }","parent":null,"children":[{"krate":0,"index":3694}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3695},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":458400,"byte_end":458402,"line_start":502,"line_end":502,"column_start":12,"column_end":14},"name":"Rx","qualname":"::spi::Rx","value":"Rx {  }","parent":null,"children":[{"krate":0,"index":3697}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":458504,"byte_end":458506,"line_start":510,"line_end":510,"column_start":12,"column_end":14},"name":"tx","qualname":"<DmaBuilder<SPI>>::tx","value":"pub fn tx(Self) -> Tx<SPI>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":458566,"byte_end":458568,"line_start":514,"line_end":514,"column_start":12,"column_end":14},"name":"rx","qualname":"<DmaBuilder<SPI>>::rx","value":"pub fn rx(Self) -> Rx<SPI>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3702},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":458628,"byte_end":458632,"line_start":518,"line_end":518,"column_start":12,"column_end":16},"name":"txrx","qualname":"<DmaBuilder<SPI>>::txrx","value":"pub fn txrx(Self) -> (Tx<SPI>, Rx<SPI>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3715},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"syscfg","qualname":"::syscfg","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","parent":null,"children":[{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3720},{"krate":0,"index":3723},{"krate":0,"index":3726},{"krate":0,"index":3729},{"krate":0,"index":3732},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3739},{"krate":0,"index":3742}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5462,"byte_end":5497,"line_start":169,"line_end":169,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":3732},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":469373,"byte_end":469382,"line_start":7,"line_end":7,"column_start":11,"column_end":20},"name":"SysCfgExt","qualname":"::syscfg::SysCfgExt","value":"SysCfgExt","parent":null,"children":[{"krate":0,"index":3733}],"decl_id":null,"docs":" Extension trait that constrains the `SYSCFG` peripheral\n","sig":null,"attributes":[{"value":"/ Extension trait that constrains the `SYSCFG` peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":469303,"byte_end":469362,"line_start":6,"line_end":6,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3733},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":469482,"byte_end":469491,"line_start":9,"line_end":9,"column_start":8,"column_end":17},"name":"constrain","qualname":"::syscfg::SysCfgExt::constrain","value":"pub fn constrain(Self) -> SysCfg","parent":{"krate":0,"index":3732},"children":[],"decl_id":null,"docs":" Constrains the `SYSCFG` peripheral so it plays nicely with the other abstractions\n","sig":null,"attributes":[{"value":"/ Constrains the `SYSCFG` peripheral so it plays nicely with the other abstractions","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":469389,"byte_end":469474,"line_start":8,"line_end":8,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":3736},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":469846,"byte_end":469852,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"SysCfg","qualname":"::syscfg::SysCfg","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3744},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","parent":null,"children":[{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":8346},{"krate":0,"index":8349},{"krate":0,"index":8350},{"krate":0,"index":8352},{"krate":0,"index":8353},{"krate":0,"index":8356},{"krate":0,"index":8357},{"krate":0,"index":8359},{"krate":0,"index":8361},{"krate":0,"index":8363},{"krate":0,"index":3755},{"krate":0,"index":3757}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5514,"byte_end":5549,"line_start":171,"line_end":171,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8346},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","byte_start":470482,"byte_end":470485,"line_start":5,"line_end":5,"column_start":12,"column_end":15},"name":"Bps","qualname":"::time::Bps","value":"","parent":null,"children":[],"decl_id":null,"docs":" Bits per second\n","sig":null,"attributes":[{"value":"/ Bits per second","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","byte_start":470389,"byte_end":470408,"line_start":3,"line_end":3,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":8348},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","byte_start":470486,"byte_end":470493,"line_start":5,"line_end":5,"column_start":16,"column_end":23},"name":"0","qualname":"::time::Bps::0","value":"u32","parent":{"krate":0,"index":8346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3755},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","byte_start":470575,"byte_end":470581,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"U32Ext","qualname":"::time::U32Ext","value":"U32Ext","parent":null,"children":[{"krate":0,"index":3756}],"decl_id":null,"docs":" Extension trait that adds convenience methods to the `u32` type\n","sig":null,"attributes":[{"value":"/ Extension trait that adds convenience methods to the `u32` type","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","byte_start":470497,"byte_end":470564,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","byte_start":470613,"byte_end":470616,"line_start":10,"line_end":10,"column_start":8,"column_end":11},"name":"bps","qualname":"::time::U32Ext::bps","value":"pub fn bps(Self) -> Bps","parent":{"krate":0,"index":3755},"children":[],"decl_id":null,"docs":" Wrap in `Bps`\n","sig":null,"attributes":[{"value":"/ Wrap in `Bps`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/time.rs","byte_start":470588,"byte_end":470605,"line_start":9,"line_end":9,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":3759},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","parent":null,"children":[{"krate":0,"index":3760},{"krate":0,"index":3763},{"krate":0,"index":3766},{"krate":0,"index":3769},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3783},{"krate":0,"index":3786},{"krate":0,"index":3789},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4302},{"krate":0,"index":4305},{"krate":0,"index":4504},{"krate":0,"index":4537},{"krate":0,"index":8750},{"krate":0,"index":8763},{"krate":0,"index":8765},{"krate":0,"index":8766},{"krate":0,"index":8767},{"krate":0,"index":8769},{"krate":0,"index":8772},{"krate":0,"index":8774},{"krate":0,"index":8775},{"krate":0,"index":8776},{"krate":0,"index":8778},{"krate":0,"index":8780},{"krate":0,"index":8781},{"krate":0,"index":8782},{"krate":0,"index":8785},{"krate":0,"index":8786},{"krate":0,"index":8788},{"krate":0,"index":8790},{"krate":0,"index":8792},{"krate":0,"index":8794},{"krate":0,"index":8797},{"krate":0,"index":8806},{"krate":0,"index":8808},{"krate":0,"index":8810},{"krate":0,"index":8812},{"krate":0,"index":8814},{"krate":0,"index":8839},{"krate":0,"index":8842},{"krate":0,"index":8844},{"krate":0,"index":8847},{"krate":0,"index":8849},{"krate":0,"index":8852},{"krate":0,"index":8854},{"krate":0,"index":8857},{"krate":0,"index":8859},{"krate":0,"index":8862},{"krate":0,"index":8865},{"krate":0,"index":8885},{"krate":0,"index":8890},{"krate":0,"index":8892},{"krate":0,"index":8893},{"krate":0,"index":8895},{"krate":0,"index":8896},{"krate":0,"index":8898},{"krate":0,"index":8899},{"krate":0,"index":4541},{"krate":0,"index":4555},{"krate":0,"index":4562},{"krate":0,"index":4569},{"krate":0,"index":4574},{"krate":0,"index":8901},{"krate":0,"index":8926},{"krate":0,"index":8928},{"krate":0,"index":8929},{"krate":0,"index":8931},{"krate":0,"index":8932},{"krate":0,"index":4582},{"krate":0,"index":4624},{"krate":0,"index":4625},{"krate":0,"index":4628},{"krate":0,"index":4631},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636},{"krate":0,"index":4637},{"krate":0,"index":4646},{"krate":0,"index":4649},{"krate":0,"index":4653},{"krate":0,"index":4656},{"krate":0,"index":4659},{"krate":0,"index":4671},{"krate":0,"index":4675},{"krate":0,"index":8934},{"krate":0,"index":8935},{"krate":0,"index":8936},{"krate":0,"index":9006},{"krate":0,"index":8970},{"krate":0,"index":8971},{"krate":0,"index":8972},{"krate":0,"index":9018},{"krate":0,"index":9028},{"krate":0,"index":9029},{"krate":0,"index":9030},{"krate":0,"index":9264},{"krate":0,"index":9064},{"krate":0,"index":9068},{"krate":0,"index":9069},{"krate":0,"index":9070},{"krate":0,"index":9278},{"krate":0,"index":9104},{"krate":0,"index":9108},{"krate":0,"index":9109},{"krate":0,"index":9110},{"krate":0,"index":9291},{"krate":0,"index":9144},{"krate":0,"index":9148},{"krate":0,"index":9149},{"krate":0,"index":9150},{"krate":0,"index":9304},{"krate":0,"index":9184},{"krate":0,"index":9188},{"krate":0,"index":9189},{"krate":0,"index":9190},{"krate":0,"index":9317},{"krate":0,"index":9224},{"krate":0,"index":9228},{"krate":0,"index":9229},{"krate":0,"index":9230},{"krate":0,"index":9330}],"decl_id":null,"docs":" Timers","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5564,"byte_end":5599,"line_start":173,"line_end":173,"column_start":1,"column_end":36}},{"value":"/ Timers","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":470709,"byte_end":470719,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":470720,"byte_end":470723,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Pins can be used for PWM output in both push-pull mode (`Alternate`) and open-drain mode","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":470724,"byte_end":470816,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ (`AlternateOD`).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":470817,"byte_end":470837,"line_start":4,"line_end":4,"column_start":1,"column_end":21}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":470838,"byte_end":470871,"line_start":5,"line_end":5,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":3789},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"counter","qualname":"::timer::counter","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","parent":null,"children":[{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":3800},{"krate":0,"index":3803},{"krate":0,"index":3806},{"krate":0,"index":3809},{"krate":0,"index":3812},{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3819},{"krate":0,"index":3822},{"krate":0,"index":3823},{"krate":0,"index":3826},{"krate":0,"index":3829},{"krate":0,"index":3832},{"krate":0,"index":3836},{"krate":0,"index":3840},{"krate":0,"index":3843},{"krate":0,"index":3846},{"krate":0,"index":3851},{"krate":0,"index":3856},{"krate":0,"index":3861},{"krate":0,"index":3865},{"krate":0,"index":3868},{"krate":0,"index":3871},{"krate":0,"index":3879},{"krate":0,"index":3887},{"krate":0,"index":3892},{"krate":0,"index":3895},{"krate":0,"index":3898},{"krate":0,"index":3900},{"krate":0,"index":3904},{"krate":0,"index":3906},{"krate":0,"index":3910},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":3925}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3832},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495340,"byte_end":495349,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"CounterHz","qualname":"::timer::counter::CounterHz","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hardware timers\n","sig":null,"attributes":[{"value":"/ Hardware timers","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495309,"byte_end":495328,"line_start":6,"line_end":6,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495705,"byte_end":495712,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"release","qualname":"<CounterHz<TIM>>::release","value":"pub fn release(Self) -> Timer<TIM>","parent":null,"children":[],"decl_id":null,"docs":" Releases the TIM peripheral\n","sig":null,"attributes":[{"value":"/ Releases the TIM peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495662,"byte_end":495693,"line_start":23,"line_end":23,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495863,"byte_end":495868,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"start","qualname":"<CounterHz<TIM>>::start","value":"pub fn start(&mut Self, Hertz) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":496369,"byte_end":496373,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"wait","qualname":"<CounterHz<TIM>>::wait","value":"pub fn wait(&mut Self) -> nb::Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3850},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":496640,"byte_end":496646,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CounterHz<TIM>>::cancel","value":"pub fn cancel(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3851},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":496955,"byte_end":496962,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"Counter","qualname":"::timer::counter::Counter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Periodic non-blocking timer that imlements [embedded_hal::timer::CountDown]\n","sig":null,"attributes":[{"value":"/ Periodic non-blocking timer that imlements [embedded_hal::timer::CountDown]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":496864,"byte_end":496943,"line_start":71,"line_end":71,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":3865},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497371,"byte_end":497380,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"name":"CounterUs","qualname":"::timer::counter::CounterUs","value":"Counter<TIM, >","parent":null,"children":[],"decl_id":null,"docs":" `Counter` with precision of 1 μs (1 MHz sampling)\n","sig":null,"attributes":[{"value":"/ `Counter` with precision of 1 μs (1 MHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497307,"byte_end":497361,"line_start":87,"line_end":87,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":3868},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497551,"byte_end":497560,"line_start":93,"line_end":93,"column_start":10,"column_end":19},"name":"CounterMs","qualname":"::timer::counter::CounterMs","value":"Counter<TIM, >","parent":null,"children":[],"decl_id":null,"docs":" `Counter` with precision of of 1 ms (1 kHz sampling)","sig":null,"attributes":[{"value":"/ `Counter` with precision of of 1 ms (1 kHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497414,"byte_end":497470,"line_start":90,"line_end":90,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497471,"byte_end":497474,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ NOTE: don't use this if your system frequency more than 65 MHz","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497475,"byte_end":497541,"line_start":92,"line_end":92,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497695,"byte_end":497702,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"release","qualname":"<Counter<TIM, FREQ>>::release","value":"pub fn release(Self) -> FTimer<TIM, >","parent":null,"children":[],"decl_id":null,"docs":" Releases the TIM peripheral\n","sig":null,"attributes":[{"value":"/ Releases the TIM peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497652,"byte_end":497683,"line_start":96,"line_end":96,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3875},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497823,"byte_end":497826,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"now","qualname":"<Counter<TIM, FREQ>>::now","value":"pub fn now(&Self) -> TimerInstantU32<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3876},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497945,"byte_end":497950,"line_start":107,"line_end":107,"column_start":12,"column_end":17},"name":"start","qualname":"<Counter<TIM, FREQ>>::start","value":"pub fn start(&mut Self, TimerDurationU32<>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3877},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":498372,"byte_end":498376,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"wait","qualname":"<Counter<TIM, FREQ>>::wait","value":"pub fn wait(&mut Self) -> nb::Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":498643,"byte_end":498649,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"cancel","qualname":"<Counter<TIM, FREQ>>::cancel","value":"pub fn cancel(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499443,"byte_end":499453,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"counter_hz","qualname":"<Timer<SYST>>::counter_hz","value":"pub fn counter_hz(Self) -> SysCounterHz","parent":null,"children":[],"decl_id":null,"docs":" Creates [SysCounterHz] which takes [Hertz] as Duration\n","sig":null,"attributes":[{"value":"/ Creates [SysCounterHz] which takes [Hertz] as Duration","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499373,"byte_end":499431,"line_start":165,"line_end":165,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499612,"byte_end":499619,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"counter","qualname":"<Timer<SYST>>::counter","value":"pub fn counter<const FREQ: u32>(Self) -> SysCounter<>","parent":null,"children":[],"decl_id":null,"docs":" Creates [SysCounter] with custom precision (core frequency recommended is known)\n","sig":null,"attributes":[{"value":"/ Creates [SysCounter] with custom precision (core frequency recommended is known)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499516,"byte_end":499600,"line_start":170,"line_end":170,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3891},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499761,"byte_end":499771,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"counter_us","qualname":"<Timer<SYST>>::counter_us","value":"pub fn counter_us(Self) -> SysCounterUs","parent":null,"children":[],"decl_id":null,"docs":" Creates [SysCounter] 1 microsecond precision\n","sig":null,"attributes":[{"value":"/ Creates [SysCounter] 1 microsecond precision","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499701,"byte_end":499749,"line_start":175,"line_end":175,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3892},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499861,"byte_end":499873,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"SysCounterHz","qualname":"::timer::counter::SysCounterHz","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hardware timers\n","sig":null,"attributes":[{"value":"/ Hardware timers","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499830,"byte_end":499849,"line_start":181,"line_end":181,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":500158,"byte_end":500163,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"start","qualname":"<SysCounterHz>::start","value":"pub fn start(&mut Self, Hertz) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":500495,"byte_end":500499,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"wait","qualname":"<SysCounterHz>::wait","value":"pub fn wait(&mut Self) -> nb::Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":500677,"byte_end":500683,"line_start":220,"line_end":220,"column_start":12,"column_end":18},"name":"cancel","qualname":"<SysCounterHz>::cancel","value":"pub fn cancel(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3904},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":500883,"byte_end":500895,"line_start":230,"line_end":230,"column_start":10,"column_end":22},"name":"SysCounterUs","qualname":"::timer::counter::SysCounterUs","value":"SysCounter<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3906},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":500992,"byte_end":501002,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"name":"SysCounter","qualname":"::timer::counter::SysCounter","value":"","parent":null,"children":[],"decl_id":null,"docs":" SysTick timer with precision of 1 μs (1 MHz sampling)\n","sig":null,"attributes":[{"value":"/ SysTick timer with precision of 1 μs (1 MHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":500922,"byte_end":500980,"line_start":232,"line_end":232,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3919},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501407,"byte_end":501413,"line_start":250,"line_end":250,"column_start":12,"column_end":18},"name":"listen","qualname":"<SysCounter<FREQ>>::listen","value":"pub fn listen(&mut Self, SysEvent)","parent":null,"children":[],"decl_id":null,"docs":" Starts listening for an `event`\n","sig":null,"attributes":[{"value":"/ Starts listening for an `event`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501360,"byte_end":501395,"line_start":249,"line_end":249,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501594,"byte_end":501602,"line_start":257,"line_end":257,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<SysCounter<FREQ>>::unlisten","value":"pub fn unlisten(&mut Self, SysEvent)","parent":null,"children":[],"decl_id":null,"docs":" Stops listening for an `event`\n","sig":null,"attributes":[{"value":"/ Stops listening for an `event`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501548,"byte_end":501582,"line_start":256,"line_end":256,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3921},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501745,"byte_end":501748,"line_start":263,"line_end":263,"column_start":12,"column_end":15},"name":"now","qualname":"<SysCounter<FREQ>>::now","value":"pub fn now(&Self) -> TimerInstantU32<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3922},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501930,"byte_end":501935,"line_start":269,"line_end":269,"column_start":12,"column_end":17},"name":"start","qualname":"<SysCounter<FREQ>>::start","value":"pub fn start(&mut Self, TimerDurationU32<>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3923},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":502295,"byte_end":502299,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"wait","qualname":"<SysCounter<FREQ>>::wait","value":"pub fn wait(&mut Self) -> nb::Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3924},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":502477,"byte_end":502483,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"cancel","qualname":"<SysCounter<FREQ>>::cancel","value":"pub fn cancel(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3933},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay","qualname":"::timer::delay","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","parent":null,"children":[{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3938},{"krate":0,"index":3941},{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3948},{"krate":0,"index":3951},{"krate":0,"index":3954},{"krate":0,"index":3955},{"krate":0,"index":3958},{"krate":0,"index":3961},{"krate":0,"index":3964},{"krate":0,"index":3967},{"krate":0,"index":3969},{"krate":0,"index":3971},{"krate":0,"index":3973},{"krate":0,"index":3976},{"krate":0,"index":3981},{"krate":0,"index":3986},{"krate":0,"index":3990},{"krate":0,"index":3993},{"krate":0,"index":3996},{"krate":0,"index":4002},{"krate":0,"index":4007}],"decl_id":null,"docs":" Delays\n","sig":null,"attributes":[{"value":"/ Delays","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503140,"byte_end":503150,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3961},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503369,"byte_end":503377,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"SysDelay","qualname":"::timer::delay::SysDelay","value":"","parent":null,"children":[],"decl_id":null,"docs":" Timer as a delay provider (SysTick by default)\n","sig":null,"attributes":[{"value":"/ Timer as a delay provider (SysTick by default)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503307,"byte_end":503357,"line_start":8,"line_end":8,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3970},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503686,"byte_end":503693,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"release","qualname":"<SysDelay>::release","value":"pub fn release(Self) -> Timer<SYST>","parent":null,"children":[],"decl_id":null,"docs":" Releases the timer resource\n","sig":null,"attributes":[{"value":"/ Releases the timer resource","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503643,"byte_end":503674,"line_start":25,"line_end":25,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503771,"byte_end":503776,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"delay","qualname":"<Timer<SYST>>::delay","value":"pub fn delay(Self) -> SysDelay","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503856,"byte_end":503861,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"delay","qualname":"<SysDelay>::delay","value":"pub fn delay(&mut Self, MicrosDurationU32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3976},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":504619,"byte_end":504624,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"Delay","qualname":"::timer::delay::Delay","value":"","parent":null,"children":[],"decl_id":null,"docs":" Periodic non-blocking timer that imlements [embedded_hal::blocking::delay] traits\n","sig":null,"attributes":[{"value":"/ Periodic non-blocking timer that imlements [embedded_hal::blocking::delay] traits","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":504522,"byte_end":504607,"line_start":61,"line_end":61,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":3990},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":505027,"byte_end":505034,"line_start":78,"line_end":78,"column_start":10,"column_end":17},"name":"DelayUs","qualname":"::timer::delay::DelayUs","value":"Delay<TIM, >","parent":null,"children":[],"decl_id":null,"docs":" `Delay` with precision of 1 μs (1 MHz sampling)\n","sig":null,"attributes":[{"value":"/ `Delay` with precision of 1 μs (1 MHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":504965,"byte_end":505017,"line_start":77,"line_end":77,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":3993},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":505198,"byte_end":505205,"line_start":83,"line_end":83,"column_start":10,"column_end":17},"name":"DelayMs","qualname":"::timer::delay::DelayMs","value":"Delay<TIM, >","parent":null,"children":[],"decl_id":null,"docs":" `Delay` with precision of 1 ms (1 kHz sampling)","sig":null,"attributes":[{"value":"/ `Delay` with precision of 1 ms (1 kHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":505066,"byte_end":505117,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":505118,"byte_end":505121,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ NOTE: don't use this if your system frequency more than 65 MHz","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":505122,"byte_end":505188,"line_start":82,"line_end":82,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":505329,"byte_end":505334,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"delay","qualname":"<Delay<TIM, FREQ>>::delay","value":"pub fn delay(&mut Self, TimerDurationU32<>)","parent":null,"children":[],"decl_id":null,"docs":" Sleep for given time\n","sig":null,"attributes":[{"value":"/ Sleep for given time","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":505293,"byte_end":505317,"line_start":86,"line_end":86,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4000},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":506271,"byte_end":506280,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"max_delay","qualname":"<Delay<TIM, FREQ>>::max_delay","value":"pub fn max_delay(&Self) -> TimerDurationU32<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4001},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":506431,"byte_end":506438,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"release","qualname":"<Delay<TIM, FREQ>>::release","value":"pub fn release(Self) -> FTimer<TIM, >","parent":null,"children":[],"decl_id":null,"docs":" Releases the TIM peripheral\n","sig":null,"attributes":[{"value":"/ Releases the TIM peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":506388,"byte_end":506419,"line_start":116,"line_end":116,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":4020},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pins.rs","byte_start":507126,"byte_end":507130,"line_start":4,"line_end":4,"column_start":11,"column_end":15},"name":"CPin","qualname":"::timer::pins::CPin","value":"CPin<TIM, const C: u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4023},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pins.rs","byte_start":507163,"byte_end":507165,"line_start":5,"line_end":5,"column_start":12,"column_end":14},"name":"Ch","qualname":"::timer::pins::Ch","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4026},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pins.rs","byte_start":507190,"byte_end":507192,"line_start":6,"line_end":6,"column_start":11,"column_end":13},"name":"C1","qualname":"::timer::pins::C1","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4027},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pins.rs","byte_start":507212,"byte_end":507214,"line_start":7,"line_end":7,"column_start":11,"column_end":13},"name":"C2","qualname":"::timer::pins::C2","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4028},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pins.rs","byte_start":507234,"byte_end":507236,"line_start":8,"line_end":8,"column_start":11,"column_end":13},"name":"C3","qualname":"::timer::pins::C3","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4029},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pins.rs","byte_start":507256,"byte_end":507258,"line_start":9,"line_end":9,"column_start":11,"column_end":13},"name":"C4","qualname":"::timer::pins::C4","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4032},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pwm","qualname":"::timer::pwm","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","parent":null,"children":[{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4037},{"krate":0,"index":4040},{"krate":0,"index":4043},{"krate":0,"index":4046},{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4055},{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4065},{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4072},{"krate":0,"index":4075},{"krate":0,"index":4085},{"krate":0,"index":4086},{"krate":0,"index":4089},{"krate":0,"index":4090},{"krate":0,"index":4092},{"krate":0,"index":4095},{"krate":0,"index":4098},{"krate":0,"index":4101},{"krate":0,"index":4104},{"krate":0,"index":4108},{"krate":0,"index":8500},{"krate":0,"index":8512},{"krate":0,"index":8522},{"krate":0,"index":8532},{"krate":0,"index":8542},{"krate":0,"index":8552},{"krate":0,"index":8560},{"krate":0,"index":8568},{"krate":0,"index":8576},{"krate":0,"index":8584},{"krate":0,"index":8592},{"krate":0,"index":8600},{"krate":0,"index":8606},{"krate":0,"index":8612},{"krate":0,"index":8618},{"krate":0,"index":4109},{"krate":0,"index":4114},{"krate":0,"index":4120},{"krate":0,"index":4127},{"krate":0,"index":4141},{"krate":0,"index":4150},{"krate":0,"index":4154},{"krate":0,"index":4162},{"krate":0,"index":4168},{"krate":0,"index":4174},{"krate":0,"index":4180},{"krate":0,"index":4185},{"krate":0,"index":4190},{"krate":0,"index":4201},{"krate":0,"index":4208},{"krate":0,"index":4215},{"krate":0,"index":4222},{"krate":0,"index":4228},{"krate":0,"index":4234}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4075},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":511924,"byte_end":511928,"line_start":7,"line_end":7,"column_start":11,"column_end":15},"name":"Pins","qualname":"::timer::pwm::Pins","value":"Pins<TIM, P>","parent":null,"children":[{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4081},{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4084}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4078},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":511949,"byte_end":511951,"line_start":8,"line_end":8,"column_start":11,"column_end":13},"name":"C1","qualname":"::timer::pwm::Pins::C1","value":"bool","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4079},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":511977,"byte_end":511979,"line_start":9,"line_end":9,"column_start":11,"column_end":13},"name":"C2","qualname":"::timer::pwm::Pins::C2","value":"bool","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4080},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512005,"byte_end":512007,"line_start":10,"line_end":10,"column_start":11,"column_end":13},"name":"C3","qualname":"::timer::pwm::Pins::C3","value":"bool","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4081},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512033,"byte_end":512035,"line_start":11,"line_end":11,"column_start":11,"column_end":13},"name":"C4","qualname":"::timer::pwm::Pins::C4","value":"bool","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4082},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512060,"byte_end":512068,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"Channels","qualname":"::timer::pwm::Pins::Channels","value":"type Channels;","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4083},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512078,"byte_end":512088,"line_start":14,"line_end":14,"column_start":8,"column_end":18},"name":"check_used","qualname":"::timer::pwm::Pins::check_used","value":"pub fn check_used(Channel) -> Channel","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4084},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512396,"byte_end":512401,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"split","qualname":"::timer::pwm::Pins::split","value":"pub fn split() -> Self::Channels","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4104},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":512480,"byte_end":512490,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"PwmChannel","qualname":"::timer::pwm::PwmChannel","value":"PwmChannel {  }","parent":null,"children":[{"krate":0,"index":4107}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4127},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":513985,"byte_end":513991,"line_start":93,"line_end":93,"column_start":11,"column_end":17},"name":"PwmExt","qualname":"::timer::pwm::PwmExt","value":"PwmExt","parent":null,"children":[{"krate":0,"index":4128},{"krate":0,"index":4132},{"krate":0,"index":4135}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4128},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":514045,"byte_end":514048,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"pwm","qualname":"::timer::pwm::PwmExt::pwm","value":"pub fn pwm<P, PINS, const FREQ: u32>(Self, PINS, TimerDurationU32<>, &Clocks)\n-> Pwm<Self, P, PINS, > where PINS: Pins<Self, P>","parent":{"krate":0,"index":4127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":514254,"byte_end":514260,"line_start":106,"line_end":106,"column_start":8,"column_end":14},"name":"pwm_hz","qualname":"::timer::pwm::PwmExt::pwm_hz","value":"pub fn pwm_hz<P, PINS>(Self, PINS, Hertz, &Clocks) -> PwmHz<Self, P, PINS>\nwhere PINS: Pins<Self, P>","parent":{"krate":0,"index":4127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":514389,"byte_end":514395,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"pwm_us","qualname":"::timer::pwm::PwmExt::pwm_us","value":"pub fn pwm_us<P, PINS>(Self, PINS, TimerDurationU32<>, &Clocks)\n-> Pwm<Self, P, PINS, > where PINS: Pins<Self, P>","parent":{"krate":0,"index":4127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4157},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515478,"byte_end":515485,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"disable","qualname":"<PwmChannel<TIM, C>>::disable","value":"pub fn disable(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515457,"byte_end":515466,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4158},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515570,"byte_end":515576,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"enable","qualname":"<PwmChannel<TIM, C>>::enable","value":"pub fn enable(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515549,"byte_end":515558,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4159},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515660,"byte_end":515668,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"get_duty","qualname":"<PwmChannel<TIM, C>>::get_duty","value":"pub fn get_duty(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515639,"byte_end":515648,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4160},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515801,"byte_end":515813,"line_start":173,"line_end":173,"column_start":12,"column_end":24},"name":"get_max_duty","qualname":"<PwmChannel<TIM, C>>::get_max_duty","value":"pub fn get_max_duty(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" If `0` returned means max_duty is 2^16\n","sig":null,"attributes":[{"value":"/ If `0` returned means max_duty is 2^16","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515733,"byte_end":515775,"line_start":171,"line_end":171,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515780,"byte_end":515789,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4161},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515919,"byte_end":515927,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"set_duty","qualname":"<PwmChannel<TIM, C>>::set_duty","value":"pub fn set_duty(&mut Self, u16)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515898,"byte_end":515907,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4162},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516014,"byte_end":516019,"line_start":183,"line_end":183,"column_start":12,"column_end":17},"name":"PwmHz","qualname":"::timer::pwm::PwmHz","value":"PwmHz {  }","parent":null,"children":[{"krate":0,"index":4166},{"krate":0,"index":4167}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4172},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516267,"byte_end":516274,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"release","qualname":"<PwmHz<TIM, P, PINS>>::release","value":"pub fn release(Self) -> Timer<TIM>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4173},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516390,"byte_end":516395,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"split","qualname":"<PwmHz<TIM, P, PINS>>::split","value":"pub fn split(Self) -> PINS::Channels","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516912,"byte_end":516918,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"pwm_hz","qualname":"<Timer<TIM>>::pwm_hz","value":"pub fn pwm_hz<P, PINS>(Self, PINS, Hertz) -> PwmHz<TIM, P, PINS> where\nPINS: Pins<TIM, P>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4194},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":518377,"byte_end":518383,"line_start":277,"line_end":277,"column_start":12,"column_end":18},"name":"enable","qualname":"<PwmHz<TIM, P, PINS>>::enable","value":"pub fn enable(&mut Self, Channel)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":518500,"byte_end":518507,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"disable","qualname":"<PwmHz<TIM, P, PINS>>::disable","value":"pub fn disable(&mut Self, Channel)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4196},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":518625,"byte_end":518633,"line_start":285,"line_end":285,"column_start":12,"column_end":20},"name":"get_duty","qualname":"<PwmHz<TIM, P, PINS>>::get_duty","value":"pub fn get_duty(&Self, Channel) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4197},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":518753,"byte_end":518761,"line_start":289,"line_end":289,"column_start":12,"column_end":20},"name":"set_duty","qualname":"<PwmHz<TIM, P, PINS>>::set_duty","value":"pub fn set_duty(&mut Self, Channel, u16)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":518941,"byte_end":518953,"line_start":294,"line_end":294,"column_start":12,"column_end":24},"name":"get_max_duty","qualname":"<PwmHz<TIM, P, PINS>>::get_max_duty","value":"pub fn get_max_duty(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" If `0` returned means max_duty is 2^16\n","sig":null,"attributes":[{"value":"/ If `0` returned means max_duty is 2^16","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":518887,"byte_end":518929,"line_start":293,"line_end":293,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4199},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":519045,"byte_end":519055,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"get_period","qualname":"<PwmHz<TIM, P, PINS>>::get_period","value":"pub fn get_period(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":519293,"byte_end":519303,"line_start":307,"line_end":307,"column_start":12,"column_end":22},"name":"set_period","qualname":"<PwmHz<TIM, P, PINS>>::set_period","value":"pub fn set_period(&mut Self, Hertz)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4201},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":519535,"byte_end":519538,"line_start":316,"line_end":316,"column_start":12,"column_end":15},"name":"Pwm","qualname":"::timer::pwm::Pwm","value":"Pwm {  }","parent":null,"children":[{"krate":0,"index":4206},{"krate":0,"index":4207}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4213},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":519831,"byte_end":519836,"line_start":330,"line_end":330,"column_start":12,"column_end":17},"name":"split","qualname":"<Pwm<TIM, P, PINS, FREQ>>::split","value":"pub fn split(Self) -> PINS::Channels","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4214},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":519903,"byte_end":519910,"line_start":334,"line_end":334,"column_start":12,"column_end":19},"name":"release","qualname":"<Pwm<TIM, P, PINS, FREQ>>::release","value":"pub fn release(Self) -> FTimer<TIM, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4231},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":520558,"byte_end":520561,"line_start":363,"line_end":363,"column_start":12,"column_end":15},"name":"pwm","qualname":"<FTimer<TIM, FREQ>>::pwm","value":"pub fn pwm<P, PINS>(Self, PINS, TimerDurationU32<>) -> Pwm<TIM, P, PINS, >\nwhere PINS: Pins<TIM, P>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4239},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":521995,"byte_end":522001,"line_start":412,"line_end":412,"column_start":12,"column_end":18},"name":"enable","qualname":"<Pwm<TIM, P, PINS, FREQ>>::enable","value":"pub fn enable(&mut Self, Channel)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4240},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":522118,"byte_end":522125,"line_start":416,"line_end":416,"column_start":12,"column_end":19},"name":"disable","qualname":"<Pwm<TIM, P, PINS, FREQ>>::disable","value":"pub fn disable(&mut Self, Channel)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4241},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":522243,"byte_end":522251,"line_start":420,"line_end":420,"column_start":12,"column_end":20},"name":"get_duty","qualname":"<Pwm<TIM, P, PINS, FREQ>>::get_duty","value":"pub fn get_duty(&Self, Channel) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":522371,"byte_end":522379,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"set_duty","qualname":"<Pwm<TIM, P, PINS, FREQ>>::set_duty","value":"pub fn set_duty(&mut Self, Channel, u16)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":522559,"byte_end":522571,"line_start":429,"line_end":429,"column_start":12,"column_end":24},"name":"get_max_duty","qualname":"<Pwm<TIM, P, PINS, FREQ>>::get_max_duty","value":"pub fn get_max_duty(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" If `0` returned means max_duty is 2^16\n","sig":null,"attributes":[{"value":"/ If `0` returned means max_duty is 2^16","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":522505,"byte_end":522547,"line_start":428,"line_end":428,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":522663,"byte_end":522673,"line_start":433,"line_end":433,"column_start":12,"column_end":22},"name":"get_period","qualname":"<Pwm<TIM, P, PINS, FREQ>>::get_period","value":"pub fn get_period(&Self) -> TimerDurationU32<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4245},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":522793,"byte_end":522803,"line_start":437,"line_end":437,"column_start":12,"column_end":22},"name":"set_period","qualname":"<Pwm<TIM, P, PINS, FREQ>>::set_period","value":"pub fn set_period(&mut Self, TimerDurationU32<>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4247},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pwm_input","qualname":"::timer::pwm_input","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","parent":null,"children":[{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4252},{"krate":0,"index":4255},{"krate":0,"index":4258},{"krate":0,"index":4261},{"krate":0,"index":4264},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4271},{"krate":0,"index":4274},{"krate":0,"index":4277},{"krate":0,"index":4279},{"krate":0,"index":4283},{"krate":0,"index":4288},{"krate":0,"index":4293},{"krate":0,"index":4297},{"krate":0,"index":4301},{"krate":0,"index":8624},{"krate":0,"index":8627},{"krate":0,"index":8639},{"krate":0,"index":8645},{"krate":0,"index":8648},{"krate":0,"index":8660},{"krate":0,"index":8666},{"krate":0,"index":8669},{"krate":0,"index":8681},{"krate":0,"index":8687},{"krate":0,"index":8690},{"krate":0,"index":8702},{"krate":0,"index":8708},{"krate":0,"index":8711},{"krate":0,"index":8723},{"krate":0,"index":8729},{"krate":0,"index":8732},{"krate":0,"index":8744}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4277},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523078,"byte_end":523082,"line_start":6,"line_end":6,"column_start":11,"column_end":15},"name":"Pins","qualname":"::timer::pwm_input::Pins","value":"Pins<TIM>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4283},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524290,"byte_end":524298,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"PwmInput","qualname":"::timer::pwm_input::PwmInput","value":"PwmInput {  }","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4287}],"decl_id":null,"docs":" Represents a TIMer configured as a PWM input.\n This peripheral will emit an interrupt on CC2 events, which occurs at two times in this mode:\n 1. When a new cycle is started: the duty cycle will be `1.00`\n 2. When the period is captured. the duty cycle will be an observable value.\n An example interrupt handler is provided:\n ```\n use stm32f4xx_hal::pac::TIM8;\n use stm32f4xx_hal::timer::Timer;\n use stm32f4xx_hal::pwm_input::PwmInput;\n use stm32f4xx_hal::gpio::gpioc::PC6;\n use stm32f4xx_hal::gpio::Alternate;","sig":null,"attributes":[{"value":"/ Represents a TIMer configured as a PWM input.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523216,"byte_end":523265,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/ This peripheral will emit an interrupt on CC2 events, which occurs at two times in this mode:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523266,"byte_end":523363,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ 1. When a new cycle is started: the duty cycle will be `1.00`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523364,"byte_end":523429,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/ 2. When the period is captured. the duty cycle will be an observable value.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523430,"byte_end":523509,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ An example interrupt handler is provided:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523510,"byte_end":523555,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523556,"byte_end":523563,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::pac::TIM8;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523564,"byte_end":523597,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ use stm32f4xx_hal::timer::Timer;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523598,"byte_end":523634,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ use stm32f4xx_hal::pwm_input::PwmInput;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523635,"byte_end":523678,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/ use stm32f4xx_hal::gpio::gpioc::PC6;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523679,"byte_end":523719,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/ use stm32f4xx_hal::gpio::Alternate;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523720,"byte_end":523759,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523760,"byte_end":523763,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ type Monitor = PwmInput<TIM8, PC6<Alternate<3>>>;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523764,"byte_end":523817,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523818,"byte_end":523821,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ fn tim8_cc2(monitor: &Monitor) {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523822,"byte_end":523858,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/             let duty_clocks = monitor.get_duty_cycle_clocks();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523859,"byte_end":523925,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/             let period_clocks = monitor.get_period_clocks();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523926,"byte_end":523990,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/             // check if this interrupt was caused by a capture at the wrong CC2,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523991,"byte_end":524075,"line_start":28,"line_end":28,"column_start":1,"column_end":85}},{"value":"/             // peripheral limitation.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524076,"byte_end":524117,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/             if !monitor.is_valid_capture(){","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524118,"byte_end":524165,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/                 return;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524166,"byte_end":524193,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524194,"byte_end":524211,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/             let duty = monitor.get_duty_cycle();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524212,"byte_end":524264,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524265,"byte_end":524270,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524271,"byte_end":524278,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4300},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524909,"byte_end":524916,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"release","qualname":"<PwmInput<TIM, PINS>>::release","value":"pub fn release(Self) -> Timer<TIM>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4537},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471408,"byte_end":471413,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"Timer","qualname":"::timer::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":4539},{"krate":0,"index":4540}],"decl_id":null,"docs":" Timer wrapper\n","sig":null,"attributes":[{"value":"/ Timer wrapper","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471379,"byte_end":471396,"line_start":35,"line_end":35,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8751},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471545,"byte_end":471547,"line_start":44,"line_end":44,"column_start":5,"column_end":7},"name":"C1","qualname":"::timer::Channel::C1","value":"Channel::C1","parent":{"krate":0,"index":8750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8754},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471557,"byte_end":471559,"line_start":45,"line_end":45,"column_start":5,"column_end":7},"name":"C2","qualname":"::timer::Channel::C2","value":"Channel::C2","parent":{"krate":0,"index":8750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8757},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471569,"byte_end":471571,"line_start":46,"line_end":46,"column_start":5,"column_end":7},"name":"C3","qualname":"::timer::Channel::C3","value":"Channel::C3","parent":{"krate":0,"index":8750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8760},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471581,"byte_end":471583,"line_start":47,"line_end":47,"column_start":5,"column_end":7},"name":"C4","qualname":"::timer::Channel::C4","value":"Channel::C4","parent":{"krate":0,"index":8750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8750},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471531,"byte_end":471538,"line_start":43,"line_end":43,"column_start":10,"column_end":17},"name":"Channel","qualname":"::timer::Channel","value":"pub enum Channel { C1 = , C2 = , C3 = , C4 = , }","parent":null,"children":[{"krate":0,"index":8751},{"krate":0,"index":8754},{"krate":0,"index":8757},{"krate":0,"index":8760}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471510,"byte_end":471521,"line_start":42,"line_end":42,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8770},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471716,"byte_end":471722,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Update","qualname":"::timer::SysEvent::Update","value":"SysEvent::Update","parent":{"krate":0,"index":8769},"children":[],"decl_id":null,"docs":" [Timer] timed out / count down ended\n","sig":null,"attributes":[{"value":"/ [Timer] timed out / count down ended","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471671,"byte_end":471711,"line_start":53,"line_end":53,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":8769},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471656,"byte_end":471664,"line_start":52,"line_end":52,"column_start":10,"column_end":18},"name":"SysEvent","qualname":"::timer::SysEvent","value":"pub enum SysEvent { Update, }","parent":null,"children":[{"krate":0,"index":8770}],"decl_id":null,"docs":" Interrupt events\n","sig":null,"attributes":[{"value":"/ Interrupt events","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471592,"byte_end":471612,"line_start":50,"line_end":50,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":8778},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471764,"byte_end":471769,"line_start":58,"line_end":58,"column_start":16,"column_end":21},"name":"Event","qualname":"::timer::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":8779}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8815},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471791,"byte_end":471797,"line_start":59,"line_end":59,"column_start":15,"column_end":21},"name":"Update","qualname":"::timer::Event::Update","value":"Self","parent":{"krate":0,"index":8814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8816},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471823,"byte_end":471825,"line_start":60,"line_end":60,"column_start":15,"column_end":17},"name":"C1","qualname":"::timer::Event::C1","value":"Self","parent":{"krate":0,"index":8814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8817},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471850,"byte_end":471852,"line_start":61,"line_end":61,"column_start":15,"column_end":17},"name":"C2","qualname":"::timer::Event::C2","value":"Self","parent":{"krate":0,"index":8814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8818},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471877,"byte_end":471879,"line_start":62,"line_end":62,"column_start":15,"column_end":17},"name":"C3","qualname":"::timer::Event::C3","value":"Self","parent":{"krate":0,"index":8814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8819},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471904,"byte_end":471906,"line_start":63,"line_end":63,"column_start":15,"column_end":17},"name":"C4","qualname":"::timer::Event::C4","value":"Self","parent":{"krate":0,"index":8814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8886},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472018,"byte_end":472026,"line_start":70,"line_end":70,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::timer::Error::Disabled","value":"Error::Disabled","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" Timer is disabled\n","sig":null,"attributes":[{"value":"/ Timer is disabled","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471992,"byte_end":472013,"line_start":69,"line_end":69,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8888},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472032,"byte_end":472047,"line_start":71,"line_end":71,"column_start":5,"column_end":20},"name":"WrongAutoReload","qualname":"::timer::Error::WrongAutoReload","value":"Error::WrongAutoReload","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8885},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471980,"byte_end":471985,"line_start":68,"line_end":68,"column_start":10,"column_end":15},"name":"Error","qualname":"::timer::Error","value":"pub enum Error { Disabled, WrongAutoReload, }","parent":null,"children":[{"krate":0,"index":8886},{"krate":0,"index":8888}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4541},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472062,"byte_end":472070,"line_start":74,"line_end":74,"column_start":11,"column_end":19},"name":"TimerExt","qualname":"::timer::TimerExt","value":"TimerExt: Sized","parent":null,"children":[{"krate":0,"index":4542},{"krate":0,"index":4544},{"krate":0,"index":4546},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4551},{"krate":0,"index":4553}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4542},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472146,"byte_end":472153,"line_start":76,"line_end":76,"column_start":8,"column_end":15},"name":"counter","qualname":"::timer::TimerExt::counter","value":"pub fn counter<const FREQ: u32>(Self, &Clocks) -> Counter<Self, >","parent":{"krate":0,"index":4541},"children":[],"decl_id":null,"docs":" Non-blocking [Counter] with custom fixed precision\n","sig":null,"attributes":[{"value":"/ Non-blocking [Counter] with custom fixed precision","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472084,"byte_end":472138,"line_start":75,"line_end":75,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4544},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472486,"byte_end":472496,"line_start":82,"line_end":82,"column_start":8,"column_end":18},"name":"counter_ms","qualname":"::timer::TimerExt::counter_ms","value":"pub fn counter_ms(Self, &Clocks) -> CounterMs<Self>","parent":{"krate":0,"index":4541},"children":[],"decl_id":null,"docs":" Non-blocking [Counter] with fixed precision of 1 ms (1 kHz sampling)","sig":null,"attributes":[{"value":"/ Non-blocking [Counter] with fixed precision of 1 ms (1 kHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472222,"byte_end":472294,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472299,"byte_end":472302,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Can wait from 2 ms to 65 sec for 16-bit timer and from 2 ms to 49 days for 32-bit timer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472307,"byte_end":472399,"line_start":79,"line_end":79,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472404,"byte_end":472407,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ NOTE: don't use this if your system frequency more than 65 MHz","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472412,"byte_end":472478,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4546},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472775,"byte_end":472785,"line_start":88,"line_end":88,"column_start":8,"column_end":18},"name":"counter_us","qualname":"::timer::TimerExt::counter_us","value":"pub fn counter_us(Self, &Clocks) -> CounterUs<Self>","parent":{"krate":0,"index":4541},"children":[],"decl_id":null,"docs":" Non-blocking [Counter] with fixed precision of 1 μs (1 MHz sampling)","sig":null,"attributes":[{"value":"/ Non-blocking [Counter] with fixed precision of 1 μs (1 MHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472589,"byte_end":472662,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472667,"byte_end":472670,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Can wait from 2 μs to 65 ms for 16-bit timer and from 2 μs to 71 min for 32-bit timer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472675,"byte_end":472767,"line_start":87,"line_end":87,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":4548},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472976,"byte_end":472986,"line_start":92,"line_end":92,"column_start":8,"column_end":18},"name":"counter_hz","qualname":"::timer::TimerExt::counter_hz","value":"pub fn counter_hz(Self, &Clocks) -> CounterHz<Self>","parent":{"krate":0,"index":4541},"children":[],"decl_id":null,"docs":" Non-blocking [Counter] with dynamic precision which uses `Hertz` as Duration units\n","sig":null,"attributes":[{"value":"/ Non-blocking [Counter] with dynamic precision which uses `Hertz` as Duration units","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472882,"byte_end":472968,"line_start":91,"line_end":91,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":4549},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473091,"byte_end":473096,"line_start":95,"line_end":95,"column_start":8,"column_end":13},"name":"delay","qualname":"::timer::TimerExt::delay","value":"pub fn delay<const FREQ: u32>(Self, &Clocks) -> Delay<Self, >","parent":{"krate":0,"index":4541},"children":[],"decl_id":null,"docs":" Blocking [Delay] with custom fixed precision\n","sig":null,"attributes":[{"value":"/ Blocking [Delay] with custom fixed precision","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473035,"byte_end":473083,"line_start":94,"line_end":94,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4551},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473363,"byte_end":473371,"line_start":101,"line_end":101,"column_start":8,"column_end":16},"name":"delay_ms","qualname":"::timer::TimerExt::delay_ms","value":"pub fn delay_ms(Self, &Clocks) -> DelayMs<Self>","parent":{"krate":0,"index":4541},"children":[],"decl_id":null,"docs":" Blocking [Delay] with fixed precision of 1 ms (1 kHz sampling)","sig":null,"attributes":[{"value":"/ Blocking [Delay] with fixed precision of 1 ms (1 kHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473163,"byte_end":473229,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473234,"byte_end":473237,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Can wait from 2 ms to 49 days.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473242,"byte_end":473276,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473281,"byte_end":473284,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ NOTE: don't use this if your system frequency more than 65 MHz","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473289,"byte_end":473355,"line_start":100,"line_end":100,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4553},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473582,"byte_end":473590,"line_start":107,"line_end":107,"column_start":8,"column_end":16},"name":"delay_us","qualname":"::timer::TimerExt::delay_us","value":"pub fn delay_us(Self, &Clocks) -> DelayUs<Self>","parent":{"krate":0,"index":4541},"children":[],"decl_id":null,"docs":" Blocking [Delay] with fixed precision of 1 μs (1 MHz sampling)","sig":null,"attributes":[{"value":"/ Blocking [Delay] with fixed precision of 1 μs (1 MHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473460,"byte_end":473527,"line_start":104,"line_end":104,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473532,"byte_end":473535,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Can wait from 2 μs to 71 min.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473540,"byte_end":473574,"line_start":106,"line_end":106,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":4562},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474102,"byte_end":474113,"line_start":124,"line_end":124,"column_start":11,"column_end":22},"name":"SysTimerExt","qualname":"::timer::SysTimerExt","value":"SysTimerExt: Sized","parent":null,"children":[{"krate":0,"index":4563},{"krate":0,"index":4564},{"krate":0,"index":4566},{"krate":0,"index":4568}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4563},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474184,"byte_end":474194,"line_start":126,"line_end":126,"column_start":8,"column_end":18},"name":"counter_hz","qualname":"::timer::SysTimerExt::counter_hz","value":"pub fn counter_hz(Self, &Clocks) -> SysCounterHz","parent":{"krate":0,"index":4562},"children":[],"decl_id":null,"docs":" Creates timer which takes [Hertz] as Duration\n","sig":null,"attributes":[{"value":"/ Creates timer which takes [Hertz] as Duration","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474127,"byte_end":474176,"line_start":125,"line_end":125,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474325,"byte_end":474332,"line_start":129,"line_end":129,"column_start":8,"column_end":15},"name":"counter","qualname":"::timer::SysTimerExt::counter","value":"pub fn counter<const FREQ: u32>(Self, &Clocks) -> SysCounter<>","parent":{"krate":0,"index":4562},"children":[],"decl_id":null,"docs":" Creates timer with custom precision (core frequency recommended is known)\n","sig":null,"attributes":[{"value":"/ Creates timer with custom precision (core frequency recommended is known)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474240,"byte_end":474317,"line_start":128,"line_end":128,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":4566},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474464,"byte_end":474474,"line_start":131,"line_end":131,"column_start":8,"column_end":18},"name":"counter_us","qualname":"::timer::SysTimerExt::counter_us","value":"pub fn counter_us(Self, &Clocks) -> SysCounterUs","parent":{"krate":0,"index":4562},"children":[],"decl_id":null,"docs":" Creates timer with precision of 1 μs (1 MHz sampling)\n","sig":null,"attributes":[{"value":"/ Creates timer with precision of 1 μs (1 MHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474398,"byte_end":474456,"line_start":130,"line_end":130,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4568},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474618,"byte_end":474623,"line_start":135,"line_end":135,"column_start":8,"column_end":13},"name":"delay","qualname":"::timer::SysTimerExt::delay","value":"pub fn delay(Self, &Clocks) -> SysDelay","parent":{"krate":0,"index":4562},"children":[],"decl_id":null,"docs":" Blocking [Delay] with custom precision\n","sig":null,"attributes":[{"value":"/ Blocking [Delay] with custom precision","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474568,"byte_end":474610,"line_start":134,"line_end":134,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4575},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":475103,"byte_end":475107,"line_start":152,"line_end":152,"column_start":12,"column_end":16},"name":"syst","qualname":"<Timer<SYST>>::syst","value":"pub fn syst(SYST, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize SysTick timer\n","sig":null,"attributes":[{"value":"/ Initialize SysTick timer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":475063,"byte_end":475091,"line_start":151,"line_end":151,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4576},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":475361,"byte_end":475374,"line_start":161,"line_end":161,"column_start":12,"column_end":25},"name":"syst_external","qualname":"<Timer<SYST>>::syst_external","value":"pub fn syst_external(SYST, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize SysTick timer and set it frequency to `HCLK / 8`\n","sig":null,"attributes":[{"value":"/ Initialize SysTick timer and set it frequency to `HCLK / 8`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":475286,"byte_end":475349,"line_start":160,"line_end":160,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4577},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":475568,"byte_end":475577,"line_start":169,"line_end":169,"column_start":12,"column_end":21},"name":"configure","qualname":"<Timer<SYST>>::configure","value":"pub fn configure(&mut Self, &Clocks)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4578},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":475716,"byte_end":475734,"line_start":174,"line_end":174,"column_start":12,"column_end":30},"name":"configure_external","qualname":"<Timer<SYST>>::configure_external","value":"pub fn configure_external(&mut Self, &Clocks)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4579},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":475881,"byte_end":475888,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"release","qualname":"<Timer<SYST>>::release","value":"pub fn release(Self) -> SYST","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4580},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":475980,"byte_end":475986,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"listen","qualname":"<Timer<SYST>>::listen","value":"pub fn listen(&mut Self, SysEvent)","parent":null,"children":[],"decl_id":null,"docs":" Starts listening for an `event`\n","sig":null,"attributes":[{"value":"/ Starts listening for an `event`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":475933,"byte_end":475968,"line_start":183,"line_end":183,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4581},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476167,"byte_end":476175,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<Timer<SYST>>::unlisten","value":"pub fn unlisten(&mut Self, SysEvent)","parent":null,"children":[],"decl_id":null,"docs":" Stops listening for an `event`\n","sig":null,"attributes":[{"value":"/ Stops listening for an `event`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476121,"byte_end":476155,"line_start":190,"line_end":190,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8902},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476381,"byte_end":476387,"line_start":201,"line_end":201,"column_start":5,"column_end":11},"name":"Frozen","qualname":"::timer::Ocm::Frozen","value":"Ocm::Frozen","parent":{"krate":0,"index":8901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8905},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476397,"byte_end":476410,"line_start":202,"line_end":202,"column_start":5,"column_end":18},"name":"ActiveOnMatch","qualname":"::timer::Ocm::ActiveOnMatch","value":"Ocm::ActiveOnMatch","parent":{"krate":0,"index":8901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8908},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476420,"byte_end":476435,"line_start":203,"line_end":203,"column_start":5,"column_end":20},"name":"InactiveOnMatch","qualname":"::timer::Ocm::InactiveOnMatch","value":"Ocm::InactiveOnMatch","parent":{"krate":0,"index":8901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8911},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476445,"byte_end":476451,"line_start":204,"line_end":204,"column_start":5,"column_end":11},"name":"Toggle","qualname":"::timer::Ocm::Toggle","value":"Ocm::Toggle","parent":{"krate":0,"index":8901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8914},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476461,"byte_end":476474,"line_start":205,"line_end":205,"column_start":5,"column_end":18},"name":"ForceInactive","qualname":"::timer::Ocm::ForceInactive","value":"Ocm::ForceInactive","parent":{"krate":0,"index":8901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8917},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476484,"byte_end":476495,"line_start":206,"line_end":206,"column_start":5,"column_end":16},"name":"ForceActive","qualname":"::timer::Ocm::ForceActive","value":"Ocm::ForceActive","parent":{"krate":0,"index":8901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8920},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476505,"byte_end":476513,"line_start":207,"line_end":207,"column_start":5,"column_end":13},"name":"PwmMode1","qualname":"::timer::Ocm::PwmMode1","value":"Ocm::PwmMode1","parent":{"krate":0,"index":8901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8923},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476523,"byte_end":476531,"line_start":208,"line_end":208,"column_start":5,"column_end":13},"name":"PwmMode2","qualname":"::timer::Ocm::PwmMode2","value":"Ocm::PwmMode2","parent":{"krate":0,"index":8901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8901},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476371,"byte_end":476374,"line_start":200,"line_end":200,"column_start":10,"column_end":13},"name":"Ocm","qualname":"::timer::Ocm","value":"pub enum Ocm {\n    Frozen = ,\n    ActiveOnMatch = ,\n    InactiveOnMatch = ,\n    Toggle = ,\n    ForceInactive = ,\n    ForceActive = ,\n    PwmMode1 = ,\n    PwmMode2 = ,\n}","parent":null,"children":[{"krate":0,"index":8902},{"krate":0,"index":8905},{"krate":0,"index":8908},{"krate":0,"index":8911},{"krate":0,"index":8914},{"krate":0,"index":8917},{"krate":0,"index":8920},{"krate":0,"index":8923}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476350,"byte_end":476361,"line_start":199,"line_end":199,"column_start":1,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4593},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476605,"byte_end":476612,"line_start":213,"line_end":213,"column_start":15,"column_end":22},"name":"General","qualname":"::timer::sealed::General","value":"General","parent":null,"children":[{"krate":0,"index":4594},{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4597},{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4600},{"krate":0,"index":4601},{"krate":0,"index":4602},{"krate":0,"index":4603},{"krate":0,"index":4604},{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4607},{"krate":0,"index":4608},{"krate":0,"index":4609},{"krate":0,"index":4610},{"krate":0,"index":4611},{"krate":0,"index":4612},{"krate":0,"index":4613}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4594},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476628,"byte_end":476633,"line_start":214,"line_end":214,"column_start":14,"column_end":19},"name":"Width","qualname":"::timer::sealed::General::Width","value":"type Width: Into<u32> + From<u16>;","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4595},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476669,"byte_end":476684,"line_start":215,"line_end":215,"column_start":12,"column_end":27},"name":"max_auto_reload","qualname":"::timer::sealed::General::max_auto_reload","value":"pub fn max_auto_reload() -> u32","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4596},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476713,"byte_end":476738,"line_start":216,"line_end":216,"column_start":19,"column_end":44},"name":"set_auto_reload_unchecked","qualname":"::timer::sealed::General::set_auto_reload_unchecked","value":"pub unsafe fn set_auto_reload_unchecked(&mut Self, u32)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4597},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476772,"byte_end":476787,"line_start":217,"line_end":217,"column_start":12,"column_end":27},"name":"set_auto_reload","qualname":"::timer::sealed::General::set_auto_reload","value":"pub fn set_auto_reload(&mut Self, u32) -> Result<(), super::Error>","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4598},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476849,"byte_end":476865,"line_start":218,"line_end":218,"column_start":12,"column_end":28},"name":"read_auto_reload","qualname":"::timer::sealed::General::read_auto_reload","value":"pub fn read_auto_reload() -> u32","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4599},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476887,"byte_end":476901,"line_start":219,"line_end":219,"column_start":12,"column_end":26},"name":"enable_preload","qualname":"::timer::sealed::General::enable_preload","value":"pub fn enable_preload(&mut Self, bool)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4600},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476934,"byte_end":476948,"line_start":220,"line_end":220,"column_start":12,"column_end":26},"name":"enable_counter","qualname":"::timer::sealed::General::enable_counter","value":"pub fn enable_counter(&mut Self)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4601},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":476972,"byte_end":476987,"line_start":221,"line_end":221,"column_start":12,"column_end":27},"name":"disable_counter","qualname":"::timer::sealed::General::disable_counter","value":"pub fn disable_counter(&mut Self)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4602},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477011,"byte_end":477029,"line_start":222,"line_end":222,"column_start":12,"column_end":30},"name":"is_counter_enabled","qualname":"::timer::sealed::General::is_counter_enabled","value":"pub fn is_counter_enabled(&Self) -> bool","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4603},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477057,"byte_end":477070,"line_start":223,"line_end":223,"column_start":12,"column_end":25},"name":"reset_counter","qualname":"::timer::sealed::General::reset_counter","value":"pub fn reset_counter(&mut Self)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4604},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477094,"byte_end":477107,"line_start":224,"line_end":224,"column_start":12,"column_end":25},"name":"set_prescaler","qualname":"::timer::sealed::General::set_prescaler","value":"pub fn set_prescaler(&mut Self, u16)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4605},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477141,"byte_end":477155,"line_start":225,"line_end":225,"column_start":12,"column_end":26},"name":"read_prescaler","qualname":"::timer::sealed::General::read_prescaler","value":"pub fn read_prescaler(&Self) -> u16","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4606},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477182,"byte_end":477196,"line_start":226,"line_end":226,"column_start":12,"column_end":26},"name":"trigger_update","qualname":"::timer::sealed::General::trigger_update","value":"pub fn trigger_update(&mut Self)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4607},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477220,"byte_end":477240,"line_start":227,"line_end":227,"column_start":12,"column_end":32},"name":"clear_interrupt_flag","qualname":"::timer::sealed::General::clear_interrupt_flag","value":"pub fn clear_interrupt_flag(&mut Self, Event)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4608},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477278,"byte_end":477294,"line_start":228,"line_end":228,"column_start":12,"column_end":28},"name":"listen_interrupt","qualname":"::timer::sealed::General::listen_interrupt","value":"pub fn listen_interrupt(&mut Self, Event, bool)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4609},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477341,"byte_end":477359,"line_start":229,"line_end":229,"column_start":12,"column_end":30},"name":"get_interrupt_flag","qualname":"::timer::sealed::General::get_interrupt_flag","value":"pub fn get_interrupt_flag(&Self) -> Event","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4610},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477388,"byte_end":477398,"line_start":230,"line_end":230,"column_start":12,"column_end":22},"name":"read_count","qualname":"::timer::sealed::General::read_count","value":"pub fn read_count(&Self) -> Self::Width","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4611},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477433,"byte_end":477448,"line_start":231,"line_end":231,"column_start":12,"column_end":27},"name":"start_one_pulse","qualname":"::timer::sealed::General::start_one_pulse","value":"pub fn start_one_pulse(&mut Self)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4612},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477472,"byte_end":477487,"line_start":232,"line_end":232,"column_start":12,"column_end":27},"name":"start_no_update","qualname":"::timer::sealed::General::start_no_update","value":"pub fn start_no_update(&mut Self)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4613},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477511,"byte_end":477520,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"cr1_reset","qualname":"::timer::sealed::General::cr1_reset","value":"pub fn cr1_reset(&mut Self)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4614},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477554,"byte_end":477561,"line_start":236,"line_end":236,"column_start":15,"column_end":22},"name":"WithPwm","qualname":"::timer::sealed::WithPwm","value":"WithPwm: General","parent":null,"children":[{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4617},{"krate":0,"index":4618},{"krate":0,"index":4619},{"krate":0,"index":4620}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4615},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477587,"byte_end":477596,"line_start":237,"line_end":237,"column_start":15,"column_end":24},"name":"CH_NUMBER","qualname":"::timer::sealed::WithPwm::CH_NUMBER","value":"u8","parent":{"krate":0,"index":4614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4616},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477613,"byte_end":477626,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"read_cc_value","qualname":"::timer::sealed::WithPwm::read_cc_value","value":"pub fn read_cc_value(u8) -> u32","parent":{"krate":0,"index":4614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4617},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477659,"byte_end":477671,"line_start":239,"line_end":239,"column_start":12,"column_end":24},"name":"set_cc_value","qualname":"::timer::sealed::WithPwm::set_cc_value","value":"pub fn set_cc_value(u8, u32)","parent":{"krate":0,"index":4614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4618},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477709,"byte_end":477739,"line_start":240,"line_end":240,"column_start":12,"column_end":42},"name":"preload_output_channel_in_mode","qualname":"::timer::sealed::WithPwm::preload_output_channel_in_mode","value":"pub fn preload_output_channel_in_mode(&mut Self, Channel, Ocm)","parent":{"krate":0,"index":4614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4619},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477792,"byte_end":477801,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"start_pwm","qualname":"::timer::sealed::WithPwm::start_pwm","value":"pub fn start_pwm(&mut Self)","parent":{"krate":0,"index":4614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4620},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477825,"byte_end":477839,"line_start":242,"line_end":242,"column_start":12,"column_end":26},"name":"enable_channel","qualname":"::timer::sealed::WithPwm::enable_channel","value":"pub fn enable_channel(u8, bool)","parent":{"krate":0,"index":4614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4621},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477884,"byte_end":477895,"line_start":245,"line_end":245,"column_start":15,"column_end":26},"name":"MasterTimer","qualname":"::timer::sealed::MasterTimer","value":"MasterTimer: General","parent":null,"children":[{"krate":0,"index":4622},{"krate":0,"index":4623}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4622},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477920,"byte_end":477923,"line_start":246,"line_end":246,"column_start":14,"column_end":17},"name":"Mms","qualname":"::timer::sealed::MasterTimer::Mms","value":"type Mms;","parent":{"krate":0,"index":4621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4623},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477936,"byte_end":477947,"line_start":247,"line_end":247,"column_start":12,"column_end":23},"name":"master_mode","qualname":"::timer::sealed::MasterTimer::master_mode","value":"pub fn master_mode(&mut Self, Self::Mms)","parent":{"krate":0,"index":4621},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4634},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":478052,"byte_end":478060,"line_start":252,"line_end":252,"column_start":11,"column_end":19},"name":"Instance","qualname":"::timer::Instance","value":"Instance: crate::Sealed + rcc::Enable + rcc::Reset + rcc::BusTimerClock + General","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4639},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":489564,"byte_end":489567,"line_start":585,"line_end":585,"column_start":12,"column_end":15},"name":"new","qualname":"<Timer<TIM>>::new","value":"pub fn new(TIM, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize timer\n","sig":null,"attributes":[{"value":"/ Initialize timer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":489532,"byte_end":489552,"line_start":584,"line_end":584,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":4640},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":489985,"byte_end":489994,"line_start":600,"line_end":600,"column_start":12,"column_end":21},"name":"configure","qualname":"<Timer<TIM>>::configure","value":"pub fn configure(&mut Self, &Clocks)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4641},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490088,"byte_end":490098,"line_start":604,"line_end":604,"column_start":12,"column_end":22},"name":"counter_hz","qualname":"<Timer<TIM>>::counter_hz","value":"pub fn counter_hz(Self) -> CounterHz<TIM>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4642},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490167,"byte_end":490174,"line_start":608,"line_end":608,"column_start":12,"column_end":19},"name":"release","qualname":"<Timer<TIM>>::release","value":"pub fn release(Self) -> TIM","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4643},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490382,"byte_end":490388,"line_start":616,"line_end":616,"column_start":12,"column_end":18},"name":"listen","qualname":"<Timer<TIM>>::listen","value":"pub fn listen(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Starts listening for an `event`","sig":null,"attributes":[{"value":"/ Starts listening for an `event`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490218,"byte_end":490253,"line_start":612,"line_end":612,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490258,"byte_end":490261,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Note, you will also have to enable the TIM2 interrupt in the NVIC to start","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490266,"byte_end":490344,"line_start":614,"line_end":614,"column_start":5,"column_end":83}},{"value":"/ receiving events.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490349,"byte_end":490370,"line_start":615,"line_end":615,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4644},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490647,"byte_end":490662,"line_start":624,"line_end":624,"column_start":12,"column_end":27},"name":"clear_interrupt","qualname":"<Timer<TIM>>::clear_interrupt","value":"pub fn clear_interrupt(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Clears interrupt associated with `event`.","sig":null,"attributes":[{"value":"/ Clears interrupt associated with `event`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490475,"byte_end":490520,"line_start":620,"line_end":620,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490525,"byte_end":490528,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ If the interrupt is not cleared, it will immediately retrigger after","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490533,"byte_end":490605,"line_start":622,"line_end":622,"column_start":5,"column_end":77}},{"value":"/ the ISR has finished.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490610,"byte_end":490635,"line_start":623,"line_end":623,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4645},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490793,"byte_end":490801,"line_start":629,"line_end":629,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<Timer<TIM>>::unlisten","value":"pub fn unlisten(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Stops listening for an `event`\n","sig":null,"attributes":[{"value":"/ Stops listening for an `event`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490747,"byte_end":490781,"line_start":628,"line_end":628,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4648},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490945,"byte_end":490960,"line_start":635,"line_end":635,"column_start":12,"column_end":27},"name":"set_master_mode","qualname":"<Timer<TIM>>::set_master_mode","value":"pub fn set_master_mode(&mut Self, TIM::Mms)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4649},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491153,"byte_end":491159,"line_start":643,"line_end":643,"column_start":12,"column_end":18},"name":"FTimer","qualname":"::timer::FTimer","value":"FTimer {  }","parent":null,"children":[{"krate":0,"index":4652}],"decl_id":null,"docs":" Timer wrapper for fixed precision timers.","sig":null,"attributes":[{"value":"/ Timer wrapper for fixed precision timers.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491034,"byte_end":491079,"line_start":640,"line_end":640,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491080,"byte_end":491083,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ Uses `fugit::TimerDurationU32` for most of operations","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491084,"byte_end":491141,"line_start":642,"line_end":642,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":4653},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491264,"byte_end":491272,"line_start":648,"line_end":648,"column_start":10,"column_end":18},"name":"FTimerUs","qualname":"::timer::FTimerUs","value":"FTimer<TIM, >","parent":null,"children":[],"decl_id":null,"docs":" `FTimer` with precision of 1 μs (1 MHz sampling)\n","sig":null,"attributes":[{"value":"/ `FTimer` with precision of 1 μs (1 MHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491201,"byte_end":491254,"line_start":647,"line_end":647,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":4656},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491438,"byte_end":491446,"line_start":653,"line_end":653,"column_start":10,"column_end":18},"name":"FTimerMs","qualname":"::timer::FTimerMs","value":"FTimer<TIM, >","parent":null,"children":[],"decl_id":null,"docs":" `FTimer` with precision of 1 ms (1 kHz sampling)","sig":null,"attributes":[{"value":"/ `FTimer` with precision of 1 ms (1 kHz sampling)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491305,"byte_end":491357,"line_start":650,"line_end":650,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491358,"byte_end":491361,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ NOTE: don't use this if your system frequency more than 65 MHz","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491362,"byte_end":491428,"line_start":652,"line_end":652,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4662},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491568,"byte_end":491571,"line_start":657,"line_end":657,"column_start":12,"column_end":15},"name":"new","qualname":"<FTimer<TIM, FREQ>>::new","value":"pub fn new(TIM, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize timer\n","sig":null,"attributes":[{"value":"/ Initialize timer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491536,"byte_end":491556,"line_start":656,"line_end":656,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":4663},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492033,"byte_end":492042,"line_start":672,"line_end":672,"column_start":12,"column_end":21},"name":"configure","qualname":"<FTimer<TIM, FREQ>>::configure","value":"pub fn configure(&mut Self, &Clocks)","parent":null,"children":[],"decl_id":null,"docs":" Calculate prescaler depending on `Clocks` state\n","sig":null,"attributes":[{"value":"/ Calculate prescaler depending on `Clocks` state","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491970,"byte_end":492021,"line_start":671,"line_end":671,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4664},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492350,"byte_end":492357,"line_start":680,"line_end":680,"column_start":12,"column_end":19},"name":"counter","qualname":"<FTimer<TIM, FREQ>>::counter","value":"pub fn counter(Self) -> Counter<TIM, >","parent":null,"children":[],"decl_id":null,"docs":" Creates `Counter` that imlements [embedded_hal::timer::CountDown]\n","sig":null,"attributes":[{"value":"/ Creates `Counter` that imlements [embedded_hal::timer::CountDown]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492269,"byte_end":492338,"line_start":679,"line_end":679,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4665},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492506,"byte_end":492511,"line_start":685,"line_end":685,"column_start":12,"column_end":17},"name":"delay","qualname":"<FTimer<TIM, FREQ>>::delay","value":"pub fn delay(Self) -> Delay<TIM, >","parent":null,"children":[],"decl_id":null,"docs":" Creates `Delay` that imlements [embedded_hal::blocking::delay] traits\n","sig":null,"attributes":[{"value":"/ Creates `Delay` that imlements [embedded_hal::blocking::delay] traits","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492421,"byte_end":492494,"line_start":684,"line_end":684,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4666},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492614,"byte_end":492621,"line_start":690,"line_end":690,"column_start":12,"column_end":19},"name":"release","qualname":"<FTimer<TIM, FREQ>>::release","value":"pub fn release(Self) -> TIM","parent":null,"children":[],"decl_id":null,"docs":" Releases the TIM peripheral\n","sig":null,"attributes":[{"value":"/ Releases the TIM peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492571,"byte_end":492602,"line_start":689,"line_end":689,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4667},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492829,"byte_end":492835,"line_start":698,"line_end":698,"column_start":12,"column_end":18},"name":"listen","qualname":"<FTimer<TIM, FREQ>>::listen","value":"pub fn listen(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Starts listening for an `event`","sig":null,"attributes":[{"value":"/ Starts listening for an `event`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492665,"byte_end":492700,"line_start":694,"line_end":694,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492705,"byte_end":492708,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ Note, you will also have to enable the TIM2 interrupt in the NVIC to start","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492713,"byte_end":492791,"line_start":696,"line_end":696,"column_start":5,"column_end":83}},{"value":"/ receiving events.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492796,"byte_end":492817,"line_start":697,"line_end":697,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4668},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":493094,"byte_end":493109,"line_start":706,"line_end":706,"column_start":12,"column_end":27},"name":"clear_interrupt","qualname":"<FTimer<TIM, FREQ>>::clear_interrupt","value":"pub fn clear_interrupt(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Clears interrupt associated with `event`.","sig":null,"attributes":[{"value":"/ Clears interrupt associated with `event`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492922,"byte_end":492967,"line_start":702,"line_end":702,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492972,"byte_end":492975,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ If the interrupt is not cleared, it will immediately retrigger after","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":492980,"byte_end":493052,"line_start":704,"line_end":704,"column_start":5,"column_end":77}},{"value":"/ the ISR has finished.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":493057,"byte_end":493082,"line_start":705,"line_end":705,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4669},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":493201,"byte_end":493214,"line_start":710,"line_end":710,"column_start":12,"column_end":25},"name":"get_interrupt","qualname":"<FTimer<TIM, FREQ>>::get_interrupt","value":"pub fn get_interrupt(&mut Self) -> Event","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4670},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":493332,"byte_end":493340,"line_start":715,"line_end":715,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<FTimer<TIM, FREQ>>::unlisten","value":"pub fn unlisten(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Stops listening for an `event`\n","sig":null,"attributes":[{"value":"/ Stops listening for an `event`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":493286,"byte_end":493320,"line_start":714,"line_end":714,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":493508,"byte_end":493523,"line_start":721,"line_end":721,"column_start":12,"column_end":27},"name":"set_master_mode","qualname":"<FTimer<TIM, FREQ>>::set_master_mode","value":"pub fn set_master_mode(&mut Self, TIM::Mms)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8935},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":493882,"byte_end":493888,"line_start":736,"line_end":736,"column_start":17,"column_end":23},"name":"Timer9","qualname":"::timer::Timer9","value":"Timer<pac::TIM9>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8971},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":493924,"byte_end":493931,"line_start":737,"line_end":737,"column_start":18,"column_end":25},"name":"Timer11","qualname":"::timer::Timer11","value":"Timer<pac::TIM11>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9029},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":494058,"byte_end":494064,"line_start":743,"line_end":743,"column_start":17,"column_end":23},"name":"Timer1","qualname":"::timer::Timer1","value":"Timer<pac::TIM1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9069},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":494114,"byte_end":494120,"line_start":744,"line_end":744,"column_start":17,"column_end":23},"name":"Timer5","qualname":"::timer::Timer5","value":"Timer<pac::TIM5>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9109},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":494164,"byte_end":494170,"line_start":745,"line_end":745,"column_start":17,"column_end":23},"name":"Timer2","qualname":"::timer::Timer2","value":"Timer<pac::TIM2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9149},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":494214,"byte_end":494220,"line_start":746,"line_end":746,"column_start":17,"column_end":23},"name":"Timer3","qualname":"::timer::Timer3","value":"Timer<pac::TIM3>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9189},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":494264,"byte_end":494270,"line_start":747,"line_end":747,"column_start":17,"column_end":23},"name":"Timer4","qualname":"::timer::Timer4","value":"Timer<pac::TIM4>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9229},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":494315,"byte_end":494322,"line_start":748,"line_end":748,"column_start":18,"column_end":25},"name":"Timer10","qualname":"::timer::Timer10","value":"Timer<pac::TIM10>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4676},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watchdog","qualname":"::watchdog","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","parent":null,"children":[{"krate":0,"index":4677},{"krate":0,"index":4678},{"krate":0,"index":4681},{"krate":0,"index":4684},{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4691},{"krate":0,"index":4694},{"krate":0,"index":4697},{"krate":0,"index":4699},{"krate":0,"index":4701},{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4704},{"krate":0,"index":4705},{"krate":0,"index":4706},{"krate":0,"index":4726},{"krate":0,"index":4730}],"decl_id":null,"docs":" Watchdog peripherals\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5615,"byte_end":5650,"line_start":175,"line_end":175,"column_start":1,"column_end":36}},{"value":"/ Watchdog peripherals","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":540324,"byte_end":540348,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":4697},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":540564,"byte_end":540583,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"IndependentWatchdog","qualname":"::watchdog::IndependentWatchdog","value":"IndependentWatchdog {  }","parent":null,"children":[{"krate":0,"index":4698}],"decl_id":null,"docs":" Wraps the Independent Watchdog (IWDG) peripheral\n","sig":null,"attributes":[{"value":"/ Wraps the Independent Watchdog (IWDG) peripheral","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":540500,"byte_end":540552,"line_start":8,"line_end":8,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4707},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":541155,"byte_end":541158,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<IndependentWatchdog>::new","value":"pub fn new(IWDG) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap and start the watchdog\n","sig":null,"attributes":[{"value":"/ Wrap and start the watchdog","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":541112,"byte_end":541143,"line_start":33,"line_end":33,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4708},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":541299,"byte_end":541312,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"stop_on_debug","qualname":"<IndependentWatchdog>::stop_on_debug","value":"pub fn stop_on_debug(&Self, &DBGMCU, bool)","parent":null,"children":[],"decl_id":null,"docs":" Debug independent watchdog stopped when core is halted\n","sig":null,"attributes":[{"value":"/ Debug independent watchdog stopped when core is halted","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":541229,"byte_end":541287,"line_start":38,"line_end":38,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4715},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":542064,"byte_end":542072,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"interval","qualname":"<IndependentWatchdog>::interval","value":"pub fn interval(&Self) -> MilliSeconds","parent":null,"children":[],"decl_id":null,"docs":" Returns the interval in ms\n","sig":null,"attributes":[{"value":"/ Returns the interval in ms","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":542022,"byte_end":542052,"line_start":63,"line_end":63,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4722},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":543132,"byte_end":543137,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"start","qualname":"<IndependentWatchdog>::start","value":"pub fn start(&mut Self, MilliSeconds)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4724},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":543295,"byte_end":543299,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"feed","qualname":"<IndependentWatchdog>::feed","value":"pub fn feed(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4733},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5733,"byte_end":5739,"line_start":180,"line_end":180,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":1,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":8735,"byte_end":8743,"line_start":109,"line_end":109,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":10045,"byte_end":10055,"line_start":155,"line_end":155,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18010,"byte_end":18019,"line_start":410,"line_end":410,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":20040,"byte_end":20049,"line_start":471,"line_end":471,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25888,"byte_end":25891,"line_start":632,"line_end":632,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67440,"byte_end":67445,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97177,"byte_end":97182,"line_start":10,"line_end":10,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97350,"byte_end":97353,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97610,"byte_end":97613,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97998,"byte_end":98001,"line_start":44,"line_end":44,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":98186,"byte_end":98189,"line_start":51,"line_end":51,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":98370,"byte_end":98375,"line_start":61,"line_end":61,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":113213,"byte_end":113219,"line_start":6,"line_end":6,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":113356,"byte_end":113359,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":113594,"byte_end":113597,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":113821,"byte_end":113824,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":114072,"byte_end":114075,"line_start":38,"line_end":38,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":114321,"byte_end":114324,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":114571,"byte_end":114574,"line_start":56,"line_end":56,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":114810,"byte_end":114813,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":115072,"byte_end":115075,"line_start":74,"line_end":74,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":115313,"byte_end":115316,"line_start":82,"line_end":82,"column_start":71,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":115527,"byte_end":115530,"line_start":89,"line_end":89,"column_start":69,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":115748,"byte_end":115751,"line_start":97,"line_end":97,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":115952,"byte_end":115955,"line_start":105,"line_end":105,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":116183,"byte_end":116186,"line_start":113,"line_end":113,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":116431,"byte_end":116434,"line_start":122,"line_end":122,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":116655,"byte_end":116658,"line_start":130,"line_end":130,"column_start":71,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":116867,"byte_end":116870,"line_start":137,"line_end":137,"column_start":71,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":117082,"byte_end":117085,"line_start":144,"line_end":144,"column_start":74,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":117282,"byte_end":117285,"line_start":151,"line_end":151,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":117509,"byte_end":117512,"line_start":159,"line_end":159,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":117753,"byte_end":117756,"line_start":168,"line_end":168,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":117973,"byte_end":117976,"line_start":176,"line_end":176,"column_start":71,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":118186,"byte_end":118189,"line_start":183,"line_end":183,"column_start":69,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":118406,"byte_end":118409,"line_start":191,"line_end":191,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":118609,"byte_end":118612,"line_start":199,"line_end":199,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":118839,"byte_end":118842,"line_start":207,"line_end":207,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":119086,"byte_end":119089,"line_start":216,"line_end":216,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":119315,"byte_end":119318,"line_start":225,"line_end":225,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":119536,"byte_end":119539,"line_start":234,"line_end":234,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":119748,"byte_end":119751,"line_start":242,"line_end":242,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":119983,"byte_end":119986,"line_start":250,"line_end":250,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":120235,"byte_end":120238,"line_start":259,"line_end":259,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":120469,"byte_end":120472,"line_start":268,"line_end":268,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":120689,"byte_end":120692,"line_start":277,"line_end":277,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":120900,"byte_end":120903,"line_start":285,"line_end":285,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":121133,"byte_end":121136,"line_start":293,"line_end":293,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":121383,"byte_end":121386,"line_start":302,"line_end":302,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":121611,"byte_end":121614,"line_start":310,"line_end":310,"column_start":73,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":121808,"byte_end":121811,"line_start":317,"line_end":317,"column_start":74,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":122027,"byte_end":122030,"line_start":325,"line_end":325,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":122257,"byte_end":122260,"line_start":334,"line_end":334,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":122432,"byte_end":122435,"line_start":342,"line_end":342,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":126969,"byte_end":126972,"line_start":472,"line_end":472,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131111,"byte_end":131120,"line_start":596,"line_end":596,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131623,"byte_end":131628,"line_start":617,"line_end":617,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131659,"byte_end":131664,"line_start":618,"line_end":618,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131761,"byte_end":131766,"line_start":623,"line_end":623,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131797,"byte_end":131802,"line_start":624,"line_end":624,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131899,"byte_end":131904,"line_start":629,"line_end":629,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131933,"byte_end":131938,"line_start":630,"line_end":630,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132033,"byte_end":132039,"line_start":635,"line_end":635,"column_start":24,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132060,"byte_end":132066,"line_start":636,"line_end":636,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132153,"byte_end":132159,"line_start":641,"line_end":641,"column_start":24,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132191,"byte_end":132197,"line_start":642,"line_end":642,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132338,"byte_end":132344,"line_start":648,"line_end":648,"column_start":24,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132375,"byte_end":132381,"line_start":649,"line_end":649,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":132871,"byte_end":132889,"line_start":14,"line_end":14,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":133062,"byte_end":133080,"line_start":23,"line_end":23,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":133680,"byte_end":133698,"line_start":47,"line_end":47,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":133915,"byte_end":133933,"line_start":60,"line_end":60,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135289,"byte_end":135307,"line_start":115,"line_end":115,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135647,"byte_end":135665,"line_start":128,"line_end":128,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":136273,"byte_end":136282,"line_start":14,"line_end":14,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":136877,"byte_end":136886,"line_start":38,"line_end":38,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":137103,"byte_end":137112,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":138155,"byte_end":138164,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139436,"byte_end":139445,"line_start":134,"line_end":134,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139699,"byte_end":139708,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140454,"byte_end":140461,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140981,"byte_end":140991,"line_start":46,"line_end":46,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":144092,"byte_end":144095,"line_start":14,"line_end":14,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":144459,"byte_end":144462,"line_start":30,"line_end":30,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":144782,"byte_end":144785,"line_start":42,"line_end":42,"column_start":64,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":145007,"byte_end":145010,"line_start":52,"line_end":52,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":145338,"byte_end":145341,"line_start":66,"line_end":66,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":145666,"byte_end":145669,"line_start":80,"line_end":80,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":146027,"byte_end":146030,"line_start":92,"line_end":92,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":146434,"byte_end":146437,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":146821,"byte_end":146824,"line_start":117,"line_end":117,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":147226,"byte_end":147229,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":147609,"byte_end":147612,"line_start":142,"line_end":142,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":148011,"byte_end":148014,"line_start":155,"line_end":155,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":148394,"byte_end":148397,"line_start":167,"line_end":167,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":148800,"byte_end":148803,"line_start":180,"line_end":180,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":149165,"byte_end":149174,"line_start":193,"line_end":193,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":149519,"byte_end":149528,"line_start":209,"line_end":209,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":149814,"byte_end":149823,"line_start":221,"line_end":221,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":150011,"byte_end":150020,"line_start":231,"line_end":231,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":150329,"byte_end":150338,"line_start":245,"line_end":245,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":150702,"byte_end":150720,"line_start":261,"line_end":261,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":151068,"byte_end":151086,"line_start":277,"line_end":277,"column_start":49,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":151390,"byte_end":151408,"line_start":289,"line_end":289,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":151614,"byte_end":151632,"line_start":299,"line_end":299,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":151944,"byte_end":151962,"line_start":313,"line_end":313,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":152313,"byte_end":152323,"line_start":329,"line_end":329,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":152582,"byte_end":152592,"line_start":339,"line_end":339,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":153392,"byte_end":153395,"line_start":22,"line_end":22,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":153495,"byte_end":153498,"line_start":26,"line_end":26,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":153832,"byte_end":153835,"line_start":40,"line_end":40,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":154155,"byte_end":154158,"line_start":52,"line_end":52,"column_start":64,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":154350,"byte_end":154353,"line_start":60,"line_end":60,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":154651,"byte_end":154654,"line_start":72,"line_end":72,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":154949,"byte_end":154952,"line_start":84,"line_end":84,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":155322,"byte_end":155325,"line_start":96,"line_end":96,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":155741,"byte_end":155744,"line_start":109,"line_end":109,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":156140,"byte_end":156143,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":156557,"byte_end":156560,"line_start":134,"line_end":134,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":156952,"byte_end":156955,"line_start":146,"line_end":146,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":157366,"byte_end":157369,"line_start":159,"line_end":159,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":157761,"byte_end":157764,"line_start":171,"line_end":171,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":158179,"byte_end":158182,"line_start":184,"line_end":184,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":158555,"byte_end":158564,"line_start":196,"line_end":196,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":158645,"byte_end":158654,"line_start":200,"line_end":200,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":158954,"byte_end":158963,"line_start":214,"line_end":214,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":159249,"byte_end":159258,"line_start":226,"line_end":226,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":159416,"byte_end":159425,"line_start":234,"line_end":234,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":159689,"byte_end":159698,"line_start":246,"line_end":246,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":160016,"byte_end":160034,"line_start":259,"line_end":259,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":160118,"byte_end":160136,"line_start":263,"line_end":263,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":160454,"byte_end":160472,"line_start":277,"line_end":277,"column_start":49,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":160776,"byte_end":160794,"line_start":289,"line_end":289,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":160970,"byte_end":160988,"line_start":297,"line_end":297,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":161270,"byte_end":161288,"line_start":309,"line_end":309,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76545,"byte_end":76551,"line_start":158,"line_end":158,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76590,"byte_end":76595,"line_start":159,"line_end":159,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76998,"byte_end":77001,"line_start":171,"line_end":171,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1177},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":80306,"byte_end":80309,"line_start":268,"line_end":268,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":80452,"byte_end":80455,"line_start":274,"line_end":274,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":80988,"byte_end":80991,"line_start":292,"line_end":292,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":81219,"byte_end":81222,"line_start":305,"line_end":305,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":81592,"byte_end":81595,"line_start":320,"line_end":320,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":82433,"byte_end":82436,"line_start":348,"line_end":348,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":83591,"byte_end":83594,"line_start":389,"line_end":389,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84006,"byte_end":84009,"line_start":403,"line_end":403,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84610,"byte_end":84613,"line_start":421,"line_end":421,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":85855,"byte_end":85858,"line_start":455,"line_end":455,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86838,"byte_end":86841,"line_start":503,"line_end":503,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87085,"byte_end":87088,"line_start":515,"line_end":515,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":95910,"byte_end":95914,"line_start":795,"line_end":795,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_02.rs","byte_start":175480,"byte_end":175483,"line_start":5,"line_end":5,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_02.rs","byte_start":175831,"byte_end":175834,"line_start":21,"line_end":21,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1368},{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_02.rs","byte_start":176245,"byte_end":176248,"line_start":40,"line_end":40,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_02.rs","byte_start":176496,"byte_end":176499,"line_start":51,"line_end":51,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_02.rs","byte_start":176808,"byte_end":176811,"line_start":65,"line_end":65,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_1.rs","byte_start":177112,"byte_end":177117,"line_start":3,"line_end":3,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_1.rs","byte_start":177536,"byte_end":177539,"line_start":15,"line_end":15,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_1.rs","byte_start":177765,"byte_end":177768,"line_start":23,"line_end":23,"column_start":72,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162046,"byte_end":162050,"line_start":32,"line_end":32,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162512,"byte_end":162516,"line_start":52,"line_end":52,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162950,"byte_end":162953,"line_start":73,"line_end":73,"column_start":24,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162996,"byte_end":162999,"line_start":75,"line_end":75,"column_start":24,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163873,"byte_end":163878,"line_start":111,"line_end":111,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164497,"byte_end":164501,"line_start":132,"line_end":132,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164572,"byte_end":164576,"line_start":134,"line_end":134,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164673,"byte_end":164677,"line_start":138,"line_end":138,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164968,"byte_end":164971,"line_start":151,"line_end":151,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":165189,"byte_end":165192,"line_start":162,"line_end":162,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":165885,"byte_end":165888,"line_start":191,"line_end":191,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1502},{"krate":0,"index":1509},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180147,"byte_end":180150,"line_start":35,"line_end":35,"column_start":24,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182617,"byte_end":182620,"line_start":109,"line_end":109,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182770,"byte_end":182773,"line_start":115,"line_end":115,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":185966,"byte_end":185969,"line_start":229,"line_end":229,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187935,"byte_end":187938,"line_start":24,"line_end":24,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187973,"byte_end":187976,"line_start":26,"line_end":26,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253398,"byte_end":253402,"line_start":227,"line_end":227,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253422,"byte_end":253426,"line_start":228,"line_end":228,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254099,"byte_end":254103,"line_start":254,"line_end":254,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254217,"byte_end":254221,"line_start":261,"line_end":261,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190504,"byte_end":190512,"line_start":43,"line_end":43,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191243,"byte_end":191261,"line_start":68,"line_end":68,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191350,"byte_end":191368,"line_start":75,"line_end":75,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191709,"byte_end":191723,"line_start":91,"line_end":91,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191818,"byte_end":191832,"line_start":98,"line_end":98,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192136,"byte_end":192154,"line_start":112,"line_end":112,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192243,"byte_end":192261,"line_start":119,"line_end":119,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1872},{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192435,"byte_end":192449,"line_start":128,"line_end":128,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192572,"byte_end":192586,"line_start":135,"line_end":135,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1878},{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192711,"byte_end":192725,"line_start":142,"line_end":142,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193262,"byte_end":193271,"line_start":168,"line_end":168,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193883,"byte_end":193896,"line_start":191,"line_end":191,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":194258,"byte_end":194265,"line_start":208,"line_end":208,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":194376,"byte_end":194383,"line_start":214,"line_end":214,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195558,"byte_end":195565,"line_start":254,"line_end":254,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195598,"byte_end":195605,"line_start":255,"line_end":255,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195638,"byte_end":195645,"line_start":256,"line_end":256,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195678,"byte_end":195685,"line_start":257,"line_end":257,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195718,"byte_end":195725,"line_start":258,"line_end":258,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195758,"byte_end":195765,"line_start":259,"line_end":259,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195798,"byte_end":195805,"line_start":260,"line_end":260,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195838,"byte_end":195845,"line_start":261,"line_end":261,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":196172,"byte_end":196184,"line_start":275,"line_end":275,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":196799,"byte_end":196806,"line_start":297,"line_end":297,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1976},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1990},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2030}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210121,"byte_end":210129,"line_start":691,"line_end":691,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2038}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210699,"byte_end":210712,"line_start":715,"line_end":715,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211404,"byte_end":211413,"line_start":739,"line_end":739,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":212427,"byte_end":212436,"line_start":768,"line_end":768,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213143,"byte_end":213152,"line_start":788,"line_end":788,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":216581,"byte_end":216589,"line_start":887,"line_end":887,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2079}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":222584,"byte_end":222592,"line_start":1018,"line_end":1018,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":223051,"byte_end":223059,"line_start":1032,"line_end":1032,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229106,"byte_end":229114,"line_start":1166,"line_end":1166,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":233135,"byte_end":233143,"line_start":1265,"line_end":1265,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2116},{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":245560,"byte_end":245568,"line_start":1593,"line_end":1593,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291299,"byte_end":291302,"line_start":10,"line_end":10,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2156}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291699,"byte_end":291702,"line_start":29,"line_end":29,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292882,"byte_end":292887,"line_start":63,"line_end":63,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":294433,"byte_end":294438,"line_start":100,"line_end":100,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2175}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":294734,"byte_end":294739,"line_start":108,"line_end":108,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":295019,"byte_end":295024,"line_start":117,"line_end":117,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":295997,"byte_end":296006,"line_start":147,"line_end":147,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297625,"byte_end":297638,"line_start":203,"line_end":203,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298885,"byte_end":298894,"line_start":241,"line_end":241,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":299654,"byte_end":299661,"line_start":274,"line_end":274,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300172,"byte_end":300177,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":301520,"byte_end":301525,"line_start":57,"line_end":57,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303389,"byte_end":303400,"line_start":125,"line_end":125,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2252}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303492,"byte_end":303503,"line_start":131,"line_end":131,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304784,"byte_end":304797,"line_start":183,"line_end":183,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304869,"byte_end":304882,"line_start":189,"line_end":189,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2270},{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307704,"byte_end":307715,"line_start":289,"line_end":289,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":308147,"byte_end":308166,"line_start":305,"line_end":305,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":308398,"byte_end":308417,"line_start":316,"line_end":316,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2293},{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":309818,"byte_end":309829,"line_start":360,"line_end":360,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":310208,"byte_end":310221,"line_start":376,"line_end":376,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":310600,"byte_end":310613,"line_start":392,"line_end":392,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2313}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":311455,"byte_end":311468,"line_start":421,"line_end":421,"column_start":33,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315172,"byte_end":315175,"line_start":11,"line_end":11,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2421}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315554,"byte_end":315557,"line_start":34,"line_end":34,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2436}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316041,"byte_end":316044,"line_start":52,"line_end":52,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316236,"byte_end":316239,"line_start":59,"line_end":59,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/pll.rs","byte_start":368444,"byte_end":368451,"line_start":13,"line_end":13,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2489}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/pll.rs","byte_start":376322,"byte_end":376328,"line_start":235,"line_end":235,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2503},{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/pll.rs","byte_start":383918,"byte_end":383933,"line_start":479,"line_end":479,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2511}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321995,"byte_end":321996,"line_start":108,"line_end":108,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2544}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":322148,"byte_end":322149,"line_start":118,"line_end":118,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":322379,"byte_end":322383,"line_start":133,"line_end":133,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":322831,"byte_end":322835,"line_start":155,"line_end":155,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":323715,"byte_end":323719,"line_start":198,"line_end":198,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324095,"byte_end":324099,"line_start":218,"line_end":218,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324408,"byte_end":324412,"line_start":233,"line_end":233,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324538,"byte_end":324542,"line_start":240,"line_end":240,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324775,"byte_end":324779,"line_start":253,"line_end":253,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324871,"byte_end":324875,"line_start":259,"line_end":259,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2579}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324972,"byte_end":324976,"line_start":265,"line_end":265,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":325175,"byte_end":325179,"line_start":272,"line_end":272,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":325371,"byte_end":325374,"line_start":279,"line_end":279,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2585}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":331693,"byte_end":331697,"line_start":509,"line_end":509,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":357166,"byte_end":357175,"line_start":1275,"line_end":1275,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2631}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":358869,"byte_end":358882,"line_start":1341,"line_end":1341,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2633}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365023,"byte_end":365029,"line_start":1559,"line_end":1559,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393138,"byte_end":393141,"line_start":40,"line_end":40,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2702}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393672,"byte_end":393675,"line_start":57,"line_end":57,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":396257,"byte_end":396260,"line_start":136,"line_end":136,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":398229,"byte_end":398232,"line_start":198,"line_end":198,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2729},{"krate":0,"index":2736},{"krate":0,"index":2739},{"krate":0,"index":2742},{"krate":0,"index":2745},{"krate":0,"index":2748},{"krate":0,"index":2751},{"krate":0,"index":2754},{"krate":0,"index":2757},{"krate":0,"index":2760},{"krate":0,"index":2763},{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":435376,"byte_end":435382,"line_start":5,"line_end":5,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2819},{"krate":0,"index":2820}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":435669,"byte_end":435671,"line_start":17,"line_end":17,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":436177,"byte_end":436179,"line_start":30,"line_end":30,"column_start":41,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2827},{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":436369,"byte_end":436375,"line_start":38,"line_end":38,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":436780,"byte_end":436782,"line_start":54,"line_end":54,"column_start":41,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":437405,"byte_end":437407,"line_start":71,"line_end":71,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":437824,"byte_end":437826,"line_start":88,"line_end":88,"column_start":41,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":438138,"byte_end":438144,"line_start":100,"line_end":100,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":438463,"byte_end":438465,"line_start":112,"line_end":112,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":438780,"byte_end":438786,"line_start":124,"line_end":124,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":439155,"byte_end":439161,"line_start":3,"line_end":3,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":439256,"byte_end":439258,"line_start":7,"line_end":7,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2897}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":439347,"byte_end":439349,"line_start":11,"line_end":11,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":439604,"byte_end":439610,"line_start":22,"line_end":22,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2934}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":439880,"byte_end":439882,"line_start":32,"line_end":32,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2937}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":440359,"byte_end":440361,"line_start":43,"line_end":43,"column_start":41,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":440528,"byte_end":440534,"line_start":49,"line_end":49,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2945},{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":440928,"byte_end":440930,"line_start":63,"line_end":63,"column_start":41,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2949},{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":441524,"byte_end":441526,"line_start":78,"line_end":78,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2953},{"krate":0,"index":2954}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":441947,"byte_end":441953,"line_start":94,"line_end":94,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2977}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":442344,"byte_end":442346,"line_start":108,"line_end":108,"column_start":41,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2980},{"krate":0,"index":2981}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":442618,"byte_end":442620,"line_start":118,"line_end":118,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411778,"byte_end":411784,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":412740,"byte_end":412746,"line_start":153,"line_end":153,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3041}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413117,"byte_end":413123,"line_start":166,"line_end":166,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3044}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413328,"byte_end":413333,"line_start":177,"line_end":177,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413378,"byte_end":413383,"line_start":179,"line_end":179,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414480,"byte_end":414482,"line_start":225,"line_end":225,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3089},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":416173,"byte_end":416175,"line_start":281,"line_end":281,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417037,"byte_end":417043,"line_start":311,"line_end":311,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3111}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417185,"byte_end":417191,"line_start":317,"line_end":317,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417333,"byte_end":417339,"line_start":323,"line_end":323,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3121}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417493,"byte_end":417499,"line_start":329,"line_end":329,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":418330,"byte_end":418335,"line_start":360,"line_end":360,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3142},{"krate":0,"index":3146},{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":419191,"byte_end":419197,"line_start":393,"line_end":393,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3158},{"krate":0,"index":3166}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":423735,"byte_end":423741,"line_start":531,"line_end":531,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3171}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":424120,"byte_end":424126,"line_start":546,"line_end":546,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":424507,"byte_end":424513,"line_start":561,"line_end":561,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3185},{"krate":0,"index":3189},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426375,"byte_end":426381,"line_start":614,"line_end":614,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426818,"byte_end":426824,"line_start":631,"line_end":631,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3205}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":427277,"byte_end":427279,"line_start":648,"line_end":648,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":427502,"byte_end":427504,"line_start":660,"line_end":660,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3212},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":427716,"byte_end":427722,"line_start":672,"line_end":672,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3218}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":432021,"byte_end":432027,"line_start":816,"line_end":816,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":432172,"byte_end":432174,"line_start":822,"line_end":822,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3232}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":432377,"byte_end":432379,"line_start":830,"line_end":830,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3237}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":432617,"byte_end":432619,"line_start":837,"line_end":837,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":433638,"byte_end":433640,"line_start":868,"line_end":868,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":434221,"byte_end":434223,"line_start":891,"line_end":891,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3250},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443614,"byte_end":443617,"line_start":35,"line_end":35,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444123,"byte_end":444132,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3267},{"krate":0,"index":3268}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444513,"byte_end":444520,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3270}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444778,"byte_end":444788,"line_start":94,"line_end":94,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3272}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":445049,"byte_end":445060,"line_start":107,"line_end":107,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3274}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":459478,"byte_end":459486,"line_start":3,"line_end":3,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":459687,"byte_end":459692,"line_start":12,"line_end":12,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3321}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":459951,"byte_end":459955,"line_start":21,"line_end":21,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":460271,"byte_end":460274,"line_start":34,"line_end":34,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":460623,"byte_end":460626,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":461346,"byte_end":461349,"line_start":72,"line_end":72,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3398},{"krate":0,"index":3399}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":461808,"byte_end":461811,"line_start":89,"line_end":89,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3405}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":462233,"byte_end":462236,"line_start":106,"line_end":106,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3409},{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":462618,"byte_end":462621,"line_start":122,"line_end":122,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3414},{"krate":0,"index":3415}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":463127,"byte_end":463130,"line_start":142,"line_end":142,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3420},{"krate":0,"index":3421}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":463622,"byte_end":463625,"line_start":161,"line_end":161,"column_start":69,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":3428},{"krate":0,"index":3429}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":464242,"byte_end":464250,"line_start":3,"line_end":3,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":464451,"byte_end":464456,"line_start":12,"line_end":12,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":464715,"byte_end":464719,"line_start":21,"line_end":21,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":464885,"byte_end":464890,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3459}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":465164,"byte_end":465167,"line_start":40,"line_end":40,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3464}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":465410,"byte_end":465413,"line_start":48,"line_end":48,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":465734,"byte_end":465737,"line_start":61,"line_end":61,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3493},{"krate":0,"index":3495}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":466449,"byte_end":466452,"line_start":84,"line_end":84,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3538}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":466875,"byte_end":466878,"line_start":99,"line_end":99,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3542}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":467299,"byte_end":467302,"line_start":114,"line_end":114,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3546}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":467683,"byte_end":467686,"line_start":128,"line_end":128,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":468191,"byte_end":468194,"line_start":146,"line_end":146,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3555}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":468692,"byte_end":468695,"line_start":163,"line_end":163,"column_start":76,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3562}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446373,"byte_end":446376,"line_start":59,"line_end":59,"column_start":24,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446420,"byte_end":446424,"line_start":61,"line_end":61,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446468,"byte_end":446472,"line_start":63,"line_end":63,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446515,"byte_end":446518,"line_start":65,"line_end":65,"column_start":24,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":449270,"byte_end":449273,"line_start":175,"line_end":175,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3625},{"krate":0,"index":3628}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":449789,"byte_end":449792,"line_start":196,"line_end":196,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3634},{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":450644,"byte_end":450647,"line_start":229,"line_end":229,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3640},{"krate":0,"index":3642}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":451523,"byte_end":451526,"line_start":262,"line_end":262,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3647}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":451737,"byte_end":451740,"line_start":274,"line_end":274,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3651}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":452168,"byte_end":452171,"line_start":294,"line_end":294,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3656}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":452608,"byte_end":452611,"line_start":314,"line_end":314,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3665},{"krate":0,"index":3667},{"krate":0,"index":3670},{"krate":0,"index":3674},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3687},{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":458450,"byte_end":458460,"line_start":506,"line_end":506,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3705}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":459007,"byte_end":459009,"line_start":533,"line_end":533,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3709},{"krate":0,"index":3710}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":459217,"byte_end":459219,"line_start":545,"line_end":545,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3714}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":469531,"byte_end":469537,"line_start":12,"line_end":12,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3735}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":469878,"byte_end":469884,"line_start":28,"line_end":28,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3740},{"krate":0,"index":3741}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":470175,"byte_end":470181,"line_start":44,"line_end":44,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3743}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495398,"byte_end":495407,"line_start":9,"line_end":9,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3838},{"krate":0,"index":3839}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495526,"byte_end":495535,"line_start":16,"line_end":16,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3842}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495641,"byte_end":495650,"line_start":22,"line_end":22,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3845}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495835,"byte_end":495844,"line_start":31,"line_end":31,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3848},{"krate":0,"index":3849},{"krate":0,"index":3850}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497052,"byte_end":497059,"line_start":74,"line_end":74,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3859},{"krate":0,"index":3860}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497208,"byte_end":497215,"line_start":81,"line_end":81,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3864}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497627,"byte_end":497634,"line_start":95,"line_end":95,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":498933,"byte_end":498940,"line_start":144,"line_end":144,"column_start":67,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499355,"byte_end":499360,"line_start":164,"line_end":164,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3891}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499904,"byte_end":499916,"line_start":184,"line_end":184,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3896},{"krate":0,"index":3897}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":500032,"byte_end":500044,"line_start":191,"line_end":191,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3899}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":500132,"byte_end":500144,"line_start":197,"line_end":197,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501067,"byte_end":501077,"line_start":235,"line_end":235,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3912},{"krate":0,"index":3913}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501216,"byte_end":501226,"line_start":242,"line_end":242,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3916}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501337,"byte_end":501347,"line_start":248,"line_end":248,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3919},{"krate":0,"index":3920},{"krate":0,"index":3921},{"krate":0,"index":3922},{"krate":0,"index":3923},{"krate":0,"index":3924}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":502725,"byte_end":502735,"line_start":301,"line_end":301,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3930},{"krate":0,"index":3931}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503408,"byte_end":503416,"line_start":11,"line_end":11,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3965},{"krate":0,"index":3966}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503532,"byte_end":503540,"line_start":18,"line_end":18,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3968}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503628,"byte_end":503636,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3970}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503746,"byte_end":503751,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3972}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503834,"byte_end":503842,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3974}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":504714,"byte_end":504719,"line_start":64,"line_end":64,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3984},{"krate":0,"index":3985}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":504868,"byte_end":504873,"line_start":71,"line_end":71,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3989}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":505270,"byte_end":505275,"line_start":85,"line_end":85,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4001}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":506616,"byte_end":506621,"line_start":124,"line_end":124,"column_start":67,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":4005},{"krate":0,"index":4006}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":506860,"byte_end":506868,"line_start":133,"line_end":133,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4009},{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":514678,"byte_end":514681,"line_start":123,"line_end":123,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4143},{"krate":0,"index":4147}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515255,"byte_end":515265,"line_start":147,"line_end":147,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4153}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515432,"byte_end":515442,"line_start":155,"line_end":155,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4157},{"krate":0,"index":4158},{"krate":0,"index":4159},{"krate":0,"index":4160},{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516175,"byte_end":516180,"line_start":192,"line_end":192,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4172},{"krate":0,"index":4173}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516482,"byte_end":516487,"line_start":208,"line_end":208,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4178},{"krate":0,"index":4179}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516693,"byte_end":516698,"line_start":219,"line_end":219,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4184}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516888,"byte_end":516893,"line_start":229,"line_end":229,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4187}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":518285,"byte_end":518290,"line_start":272,"line_end":272,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4200}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":519735,"byte_end":519738,"line_start":325,"line_end":325,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4213},{"krate":0,"index":4214}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":520072,"byte_end":520075,"line_start":341,"line_end":341,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4220},{"krate":0,"index":4221}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":520311,"byte_end":520314,"line_start":352,"line_end":352,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":520527,"byte_end":520533,"line_start":362,"line_end":362,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4231}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":521899,"byte_end":521902,"line_start":407,"line_end":407,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523184,"byte_end":523187,"line_start":9,"line_end":9,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524437,"byte_end":524445,"line_start":45,"line_end":45,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4291},{"krate":0,"index":4292}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524642,"byte_end":524650,"line_start":56,"line_end":56,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4296}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524820,"byte_end":524828,"line_start":66,"line_end":66,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4300}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":532727,"byte_end":532735,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4381}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":532839,"byte_end":532847,"line_start":24,"line_end":24,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":532954,"byte_end":532962,"line_start":30,"line_end":30,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4385}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533067,"byte_end":533075,"line_start":36,"line_end":36,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4387}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533180,"byte_end":533188,"line_start":42,"line_end":42,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4389}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533291,"byte_end":533299,"line_start":48,"line_end":48,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4391}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533405,"byte_end":533414,"line_start":54,"line_end":54,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533441,"byte_end":533453,"line_start":55,"line_end":55,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533492,"byte_end":533502,"line_start":56,"line_end":56,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533532,"byte_end":533544,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4401}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533908,"byte_end":533920,"line_start":76,"line_end":76,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4403},{"krate":0,"index":4404}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":534067,"byte_end":534076,"line_start":84,"line_end":84,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4410}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":534460,"byte_end":534469,"line_start":102,"line_end":102,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4413},{"krate":0,"index":4414}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":534623,"byte_end":534633,"line_start":110,"line_end":110,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4420}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":535042,"byte_end":535052,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4423},{"krate":0,"index":4424}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":535239,"byte_end":535249,"line_start":136,"line_end":136,"column_start":69,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430},{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":4433}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":535665,"byte_end":535670,"line_start":156,"line_end":156,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4438},{"krate":0,"index":4439},{"krate":0,"index":4440},{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4443},{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4446},{"krate":0,"index":4447}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":536600,"byte_end":536605,"line_start":198,"line_end":198,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4452}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":536788,"byte_end":536793,"line_start":205,"line_end":205,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4456}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":536976,"byte_end":536981,"line_start":212,"line_end":212,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4460}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":537172,"byte_end":537177,"line_start":218,"line_end":218,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4464}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":537368,"byte_end":537373,"line_start":225,"line_end":225,"column_start":54,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4468}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":537562,"byte_end":537567,"line_start":231,"line_end":231,"column_start":54,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4472}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":537754,"byte_end":537761,"line_start":238,"line_end":238,"column_start":51,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":537828,"byte_end":537835,"line_start":240,"line_end":240,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4479},{"krate":0,"index":4480},{"krate":0,"index":4482}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":538264,"byte_end":538271,"line_start":258,"line_end":258,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4486},{"krate":0,"index":4487}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":538453,"byte_end":538456,"line_start":266,"line_end":266,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4501},{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_1.rs","byte_start":539719,"byte_end":539727,"line_start":12,"line_end":12,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4528},{"krate":0,"index":4529},{"krate":0,"index":4530}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_1.rs","byte_start":540038,"byte_end":540043,"line_start":26,"line_end":26,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4536}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473715,"byte_end":473718,"line_start":112,"line_end":112,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4557},{"krate":0,"index":4559},{"krate":0,"index":4560}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474684,"byte_end":474688,"line_start":138,"line_end":138,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4573}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":475045,"byte_end":475050,"line_start":150,"line_end":150,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4575},{"krate":0,"index":4576},{"krate":0,"index":4577},{"krate":0,"index":4578},{"krate":0,"index":4579},{"krate":0,"index":4580},{"krate":0,"index":4581}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":489515,"byte_end":489520,"line_start":583,"line_end":583,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490921,"byte_end":490926,"line_start":634,"line_end":634,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491512,"byte_end":491518,"line_start":655,"line_end":655,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4668},{"krate":0,"index":4669},{"krate":0,"index":4670}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":493477,"byte_end":493483,"line_start":720,"line_end":720,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4674}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":540798,"byte_end":540817,"line_start":20,"line_end":20,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4700}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":541086,"byte_end":541105,"line_start":32,"line_end":32,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4707},{"krate":0,"index":4708},{"krate":0,"index":4710},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4722},{"krate":0,"index":4724}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":543414,"byte_end":543433,"line_start":112,"line_end":112,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4727},{"krate":0,"index":4728}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":543586,"byte_end":543605,"line_start":120,"line_end":120,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4731}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":3896,"byte_end":3899,"line_start":107,"line_end":107,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":3945,"byte_end":3947,"line_start":109,"line_end":109,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":101}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4120,"byte_end":4125,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":114}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4322,"byte_end":4326,"line_start":124,"line_end":124,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":150}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4372,"byte_end":4375,"line_start":126,"line_end":126,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1288}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4426,"byte_end":4429,"line_start":128,"line_end":128,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1528}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4520,"byte_end":4526,"line_start":130,"line_end":130,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1614}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4770,"byte_end":4773,"line_start":142,"line_end":142,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1666}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":189777,"byte_end":189783,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1714}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4819,"byte_end":4822,"line_start":144,"line_end":144,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2139}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":4868,"byte_end":4873,"line_start":146,"line_end":146,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2208}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5054,"byte_end":5061,"line_start":154,"line_end":154,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2316}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5107,"byte_end":5110,"line_start":156,"line_end":156,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2399}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5156,"byte_end":5159,"line_start":158,"line_end":158,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2451}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5205,"byte_end":5208,"line_start":160,"line_end":160,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2647}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5350,"byte_end":5356,"line_start":164,"line_end":164,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2777}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5402,"byte_end":5411,"line_start":166,"line_end":166,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":3255}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5457,"byte_end":5460,"line_start":168,"line_end":168,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3275}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5506,"byte_end":5512,"line_start":170,"line_end":170,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3715}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5558,"byte_end":5562,"line_start":172,"line_end":172,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3744}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5608,"byte_end":5613,"line_start":174,"line_end":174,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3759}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471097,"byte_end":471104,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3789}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471134,"byte_end":471139,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3933}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471194,"byte_end":471197,"line_start":23,"line_end":23,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4032}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":471223,"byte_end":471232,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":4247}},{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/lib.rs","byte_start":5659,"byte_end":5667,"line_start":176,"line_end":176,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":4676}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":8735,"byte_end":8743,"line_start":109,"line_end":109,"column_start":23,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4739},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":10045,"byte_end":10055,"line_start":155,"line_end":155,"column_start":23,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4787},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":18010,"byte_end":18019,"line_start":410,"line_end":410,"column_start":10,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":20040,"byte_end":20049,"line_start":471,"line_end":471,"column_start":22,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4999},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/adc.rs","byte_start":25888,"byte_end":25891,"line_start":632,"line_end":632,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5022},"to":{"krate":1,"index":9558}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/crc32.rs","byte_start":67440,"byte_end":67445,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97177,"byte_end":97182,"line_start":10,"line_end":10,"column_start":40,"column_end":45},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5584},"to":{"krate":0,"index":205}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97350,"byte_end":97353,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":205}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97610,"byte_end":97613,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":205}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":97998,"byte_end":98001,"line_start":44,"line_end":44,"column_start":9,"column_end":12},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":205}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":98186,"byte_end":98189,"line_start":51,"line_end":51,"column_start":9,"column_end":12},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":205}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/alt.rs","byte_start":98370,"byte_end":98375,"line_start":61,"line_end":61,"column_start":35,"column_end":40},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5584},"to":{"krate":0,"index":242}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":113213,"byte_end":113219,"line_start":6,"line_end":6,"column_start":32,"column_end":38},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":113356,"byte_end":113359,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":113594,"byte_end":113597,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":113821,"byte_end":113824,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":114072,"byte_end":114075,"line_start":38,"line_end":38,"column_start":9,"column_end":12},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":114321,"byte_end":114324,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":114571,"byte_end":114574,"line_start":56,"line_end":56,"column_start":9,"column_end":12},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":114810,"byte_end":114813,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":115072,"byte_end":115075,"line_start":74,"line_end":74,"column_start":9,"column_end":12},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":115313,"byte_end":115316,"line_start":82,"line_end":82,"column_start":71,"column_end":74},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":115527,"byte_end":115530,"line_start":89,"line_end":89,"column_start":69,"column_end":72},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":115748,"byte_end":115751,"line_start":97,"line_end":97,"column_start":9,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":115952,"byte_end":115955,"line_start":105,"line_end":105,"column_start":62,"column_end":65},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":116183,"byte_end":116186,"line_start":113,"line_end":113,"column_start":9,"column_end":12},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":116431,"byte_end":116434,"line_start":122,"line_end":122,"column_start":9,"column_end":12},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":116655,"byte_end":116658,"line_start":130,"line_end":130,"column_start":71,"column_end":74},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":116867,"byte_end":116870,"line_start":137,"line_end":137,"column_start":71,"column_end":74},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":117082,"byte_end":117085,"line_start":144,"line_end":144,"column_start":74,"column_end":77},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":117282,"byte_end":117285,"line_start":151,"line_end":151,"column_start":62,"column_end":65},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":117509,"byte_end":117512,"line_start":159,"line_end":159,"column_start":9,"column_end":12},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":117753,"byte_end":117756,"line_start":168,"line_end":168,"column_start":9,"column_end":12},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":117973,"byte_end":117976,"line_start":176,"line_end":176,"column_start":71,"column_end":74},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":118186,"byte_end":118189,"line_start":183,"line_end":183,"column_start":69,"column_end":72},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":118406,"byte_end":118409,"line_start":191,"line_end":191,"column_start":9,"column_end":12},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":118609,"byte_end":118612,"line_start":199,"line_end":199,"column_start":62,"column_end":65},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":118839,"byte_end":118842,"line_start":207,"line_end":207,"column_start":9,"column_end":12},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":119086,"byte_end":119089,"line_start":216,"line_end":216,"column_start":9,"column_end":12},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":119315,"byte_end":119318,"line_start":225,"line_end":225,"column_start":9,"column_end":12},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":119536,"byte_end":119539,"line_start":234,"line_end":234,"column_start":9,"column_end":12},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":119748,"byte_end":119751,"line_start":242,"line_end":242,"column_start":62,"column_end":65},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":119983,"byte_end":119986,"line_start":250,"line_end":250,"column_start":9,"column_end":12},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":120235,"byte_end":120238,"line_start":259,"line_end":259,"column_start":9,"column_end":12},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":120469,"byte_end":120472,"line_start":268,"line_end":268,"column_start":9,"column_end":12},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":120689,"byte_end":120692,"line_start":277,"line_end":277,"column_start":9,"column_end":12},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":120900,"byte_end":120903,"line_start":285,"line_end":285,"column_start":62,"column_end":65},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":121133,"byte_end":121136,"line_start":293,"line_end":293,"column_start":9,"column_end":12},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":121383,"byte_end":121386,"line_start":302,"line_end":302,"column_start":9,"column_end":12},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":121611,"byte_end":121614,"line_start":310,"line_end":310,"column_start":73,"column_end":76},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":121808,"byte_end":121811,"line_start":317,"line_end":317,"column_start":74,"column_end":77},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":122027,"byte_end":122030,"line_start":325,"line_end":325,"column_start":9,"column_end":12},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":122257,"byte_end":122260,"line_start":334,"line_end":334,"column_start":9,"column_end":12},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":122432,"byte_end":122435,"line_start":342,"line_end":342,"column_start":40,"column_end":43},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":126969,"byte_end":126972,"line_start":472,"line_end":472,"column_start":40,"column_end":43},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131111,"byte_end":131120,"line_start":596,"line_end":596,"column_start":62,"column_end":71},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":525},"to":{"krate":1,"index":3258}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131335,"byte_end":131341,"line_start":605,"line_end":605,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":4733},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131623,"byte_end":131628,"line_start":617,"line_end":617,"column_start":24,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1134},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131659,"byte_end":131664,"line_start":618,"line_end":618,"column_start":18,"column_end":23},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1134},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131761,"byte_end":131766,"line_start":623,"line_end":623,"column_start":24,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1134},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131797,"byte_end":131802,"line_start":624,"line_end":624,"column_start":18,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1134},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131899,"byte_end":131904,"line_start":629,"line_end":629,"column_start":24,"column_end":29},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1134},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":131933,"byte_end":131938,"line_start":630,"line_end":630,"column_start":18,"column_end":23},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1134},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132033,"byte_end":132039,"line_start":635,"line_end":635,"column_start":24,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1150},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132060,"byte_end":132066,"line_start":636,"line_end":636,"column_start":18,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1150},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132153,"byte_end":132159,"line_start":641,"line_end":641,"column_start":24,"column_end":30},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132191,"byte_end":132197,"line_start":642,"line_end":642,"column_start":18,"column_end":24},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132338,"byte_end":132344,"line_start":648,"line_end":648,"column_start":24,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/convert.rs","byte_start":132375,"byte_end":132381,"line_start":649,"line_end":649,"column_start":18,"column_end":24},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":132871,"byte_end":132889,"line_start":14,"line_end":14,"column_start":27,"column_end":45},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":133062,"byte_end":133080,"line_start":23,"line_end":23,"column_start":42,"column_end":60},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":575},"to":{"krate":1,"index":9558}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":133680,"byte_end":133698,"line_start":47,"line_end":47,"column_start":38,"column_end":56},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":575},"to":{"krate":0,"index":1125}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":133915,"byte_end":133933,"line_start":60,"line_end":60,"column_start":27,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135289,"byte_end":135307,"line_start":115,"line_end":115,"column_start":21,"column_end":39},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/partially_erased.rs","byte_start":135647,"byte_end":135665,"line_start":128,"line_end":128,"column_start":27,"column_end":45},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":136273,"byte_end":136282,"line_start":14,"line_end":14,"column_start":27,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":626},"to":{"krate":1,"index":9558}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":136877,"byte_end":136886,"line_start":38,"line_end":38,"column_start":23,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":626},"to":{"krate":0,"index":1125}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":137103,"byte_end":137112,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":138155,"byte_end":138164,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139436,"byte_end":139445,"line_start":134,"line_end":134,"column_start":6,"column_end":15},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/erased.rs","byte_start":139699,"byte_end":139708,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140454,"byte_end":140461,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/dynamic.rs","byte_start":140981,"byte_end":140991,"line_start":46,"line_end":46,"column_start":34,"column_end":44},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":144092,"byte_end":144095,"line_start":14,"line_end":14,"column_start":54,"column_end":57},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":229}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":144459,"byte_end":144462,"line_start":30,"line_end":30,"column_start":62,"column_end":65},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":144782,"byte_end":144785,"line_start":42,"line_end":42,"column_start":64,"column_end":67},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":237}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":145007,"byte_end":145010,"line_start":52,"line_end":52,"column_start":47,"column_end":50},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":256}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":145338,"byte_end":145341,"line_start":66,"line_end":66,"column_start":53,"column_end":56},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":256}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":145666,"byte_end":145669,"line_start":80,"line_end":80,"column_start":56,"column_end":59},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":260}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":146027,"byte_end":146030,"line_start":92,"line_end":92,"column_start":9,"column_end":12},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":260}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":146434,"byte_end":146437,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":260}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":146821,"byte_end":146824,"line_start":117,"line_end":117,"column_start":9,"column_end":12},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":260}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":147226,"byte_end":147229,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":260}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":147609,"byte_end":147612,"line_start":142,"line_end":142,"column_start":9,"column_end":12},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":260}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":148011,"byte_end":148014,"line_start":155,"line_end":155,"column_start":9,"column_end":12},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":260}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":148394,"byte_end":148397,"line_start":167,"line_end":167,"column_start":9,"column_end":12},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":260}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":148800,"byte_end":148803,"line_start":180,"line_end":180,"column_start":9,"column_end":12},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1191},"to":{"krate":4,"index":260}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":149165,"byte_end":149174,"line_start":193,"line_end":193,"column_start":26,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":626},"to":{"krate":4,"index":229}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":149519,"byte_end":149528,"line_start":209,"line_end":209,"column_start":34,"column_end":43},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":626},"to":{"krate":4,"index":234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":149814,"byte_end":149823,"line_start":221,"line_end":221,"column_start":36,"column_end":45},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":626},"to":{"krate":4,"index":237}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":150011,"byte_end":150020,"line_start":231,"line_end":231,"column_start":19,"column_end":28},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":626},"to":{"krate":4,"index":256}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":150329,"byte_end":150338,"line_start":245,"line_end":245,"column_start":25,"column_end":34},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":626},"to":{"krate":4,"index":256}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":150702,"byte_end":150720,"line_start":261,"line_end":261,"column_start":41,"column_end":59},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":575},"to":{"krate":4,"index":229}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":151068,"byte_end":151086,"line_start":277,"line_end":277,"column_start":49,"column_end":67},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":575},"to":{"krate":4,"index":234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":151390,"byte_end":151408,"line_start":289,"line_end":289,"column_start":51,"column_end":69},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":575},"to":{"krate":4,"index":237}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":151614,"byte_end":151632,"line_start":299,"line_end":299,"column_start":34,"column_end":52},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":575},"to":{"krate":4,"index":256}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":151944,"byte_end":151962,"line_start":313,"line_end":313,"column_start":40,"column_end":58},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":575},"to":{"krate":4,"index":256}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":152313,"byte_end":152323,"line_start":329,"line_end":329,"column_start":48,"column_end":58},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":670},"to":{"krate":4,"index":229}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_02.rs","byte_start":152582,"byte_end":152592,"line_start":339,"line_end":339,"column_start":47,"column_end":57},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":670},"to":{"krate":4,"index":256}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":153392,"byte_end":153395,"line_start":22,"line_end":22,"column_start":54,"column_end":57},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":115}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":153495,"byte_end":153498,"line_start":26,"line_end":26,"column_start":54,"column_end":57},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":132}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":153832,"byte_end":153835,"line_start":40,"line_end":40,"column_start":62,"column_end":65},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":141}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":154155,"byte_end":154158,"line_start":52,"line_end":52,"column_start":64,"column_end":67},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":148}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":154350,"byte_end":154353,"line_start":60,"line_end":60,"column_start":47,"column_end":50},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":153}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":154651,"byte_end":154654,"line_start":72,"line_end":72,"column_start":53,"column_end":56},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":153}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":154949,"byte_end":154952,"line_start":84,"line_end":84,"column_start":56,"column_end":59},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":160}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":155322,"byte_end":155325,"line_start":96,"line_end":96,"column_start":9,"column_end":12},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":160}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":155741,"byte_end":155744,"line_start":109,"line_end":109,"column_start":9,"column_end":12},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":160}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":156140,"byte_end":156143,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":160}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":156557,"byte_end":156560,"line_start":134,"line_end":134,"column_start":9,"column_end":12},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":160}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":156952,"byte_end":156955,"line_start":146,"line_end":146,"column_start":9,"column_end":12},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":160}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":157366,"byte_end":157369,"line_start":159,"line_end":159,"column_start":9,"column_end":12},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":160}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":157761,"byte_end":157764,"line_start":171,"line_end":171,"column_start":9,"column_end":12},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":160}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":158179,"byte_end":158182,"line_start":184,"line_end":184,"column_start":9,"column_end":12},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1191},"to":{"krate":15,"index":160}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":158555,"byte_end":158564,"line_start":196,"line_end":196,"column_start":26,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":626},"to":{"krate":15,"index":115}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":158645,"byte_end":158654,"line_start":200,"line_end":200,"column_start":26,"column_end":35},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":626},"to":{"krate":15,"index":132}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":158954,"byte_end":158963,"line_start":214,"line_end":214,"column_start":34,"column_end":43},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":626},"to":{"krate":15,"index":141}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":159249,"byte_end":159258,"line_start":226,"line_end":226,"column_start":36,"column_end":45},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":626},"to":{"krate":15,"index":148}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":159416,"byte_end":159425,"line_start":234,"line_end":234,"column_start":19,"column_end":28},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":626},"to":{"krate":15,"index":153}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":159689,"byte_end":159698,"line_start":246,"line_end":246,"column_start":25,"column_end":34},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":626},"to":{"krate":15,"index":153}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":160016,"byte_end":160034,"line_start":259,"line_end":259,"column_start":41,"column_end":59},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":575},"to":{"krate":15,"index":115}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":160118,"byte_end":160136,"line_start":263,"line_end":263,"column_start":41,"column_end":59},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":575},"to":{"krate":15,"index":132}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":160454,"byte_end":160472,"line_start":277,"line_end":277,"column_start":49,"column_end":67},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":575},"to":{"krate":15,"index":141}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":160776,"byte_end":160794,"line_start":289,"line_end":289,"column_start":51,"column_end":69},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":575},"to":{"krate":15,"index":148}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":160970,"byte_end":160988,"line_start":297,"line_end":297,"column_start":34,"column_end":52},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":575},"to":{"krate":15,"index":153}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio/hal_1.rs","byte_start":161270,"byte_end":161288,"line_start":309,"line_end":309,"column_start":40,"column_end":58},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":575},"to":{"krate":15,"index":153}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76545,"byte_end":76551,"line_start":158,"line_end":158,"column_start":30,"column_end":36},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":1155}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76590,"byte_end":76595,"line_start":159,"line_end":159,"column_start":30,"column_end":35},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1134},"to":{"krate":0,"index":1155}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":76998,"byte_end":77001,"line_start":171,"line_end":171,"column_start":23,"column_end":26},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1171},"to":{"krate":0,"index":1163}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":80306,"byte_end":80309,"line_start":268,"line_end":268,"column_start":40,"column_end":43},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":80452,"byte_end":80455,"line_start":274,"line_end":274,"column_start":55,"column_end":58},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1191},"to":{"krate":1,"index":9558}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":80988,"byte_end":80991,"line_start":292,"line_end":292,"column_start":51,"column_end":54},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":1125}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":81219,"byte_end":81222,"line_start":305,"line_end":305,"column_start":40,"column_end":43},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":81592,"byte_end":81595,"line_start":320,"line_end":320,"column_start":34,"column_end":37},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":82433,"byte_end":82436,"line_start":348,"line_end":348,"column_start":47,"column_end":50},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":83591,"byte_end":83594,"line_start":389,"line_end":389,"column_start":47,"column_end":50},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84006,"byte_end":84009,"line_start":403,"line_end":403,"column_start":40,"column_end":43},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":84610,"byte_end":84613,"line_start":421,"line_end":421,"column_start":40,"column_end":43},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":85855,"byte_end":85858,"line_start":455,"line_end":455,"column_start":40,"column_end":43},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":86838,"byte_end":86841,"line_start":503,"line_end":503,"column_start":34,"column_end":37},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":87085,"byte_end":87088,"line_start":515,"line_end":515,"column_start":40,"column_end":43},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/gpio.rs","byte_start":95910,"byte_end":95914,"line_start":795,"line_end":795,"column_start":21,"column_end":25},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_02.rs","byte_start":175480,"byte_end":175483,"line_start":5,"line_end":5,"column_start":35,"column_end":38},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1436},"to":{"krate":4,"index":58}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_02.rs","byte_start":175831,"byte_end":175834,"line_start":21,"line_end":21,"column_start":39,"column_end":42},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1436},"to":{"krate":4,"index":62}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_02.rs","byte_start":176245,"byte_end":176248,"line_start":40,"line_end":40,"column_start":31,"column_end":34},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1436},"to":{"krate":4,"index":49}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_02.rs","byte_start":176496,"byte_end":176499,"line_start":51,"line_end":51,"column_start":35,"column_end":38},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1436},"to":{"krate":4,"index":53}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_02.rs","byte_start":176808,"byte_end":176811,"line_start":65,"line_end":65,"column_start":30,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1436},"to":{"krate":4,"index":45}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_1.rs","byte_start":177112,"byte_end":177117,"line_start":3,"line_end":3,"column_start":23,"column_end":28},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6603},"to":{"krate":15,"index":170}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_1.rs","byte_start":177536,"byte_end":177539,"line_start":15,"line_end":15,"column_start":55,"column_end":58},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1436},"to":{"krate":15,"index":180}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c/hal_1.rs","byte_start":177765,"byte_end":177768,"line_start":23,"line_end":23,"column_start":72,"column_end":75},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1436},"to":{"krate":15,"index":201}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162046,"byte_end":162050,"line_start":32,"line_end":32,"column_start":6,"column_end":10},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":6591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162512,"byte_end":162516,"line_start":52,"line_end":52,"column_start":22,"column_end":26},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6591},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162950,"byte_end":162953,"line_start":73,"line_end":73,"column_start":24,"column_end":27},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1441},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":162996,"byte_end":162999,"line_start":75,"line_end":75,"column_start":24,"column_end":27},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1444},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":163873,"byte_end":163878,"line_start":111,"line_end":111,"column_start":6,"column_end":11},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":6603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164408,"byte_end":164414,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":4733},"to":{"krate":0,"index":1465}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164417,"byte_end":164422,"line_start":130,"line_end":130,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":3234},"to":{"krate":0,"index":1465}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164455,"byte_end":164461,"line_start":130,"line_end":130,"column_start":75,"column_end":81},"kind":"SuperTrait","from":{"krate":0,"index":2528},"to":{"krate":0,"index":1465}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164464,"byte_end":164469,"line_start":130,"line_end":130,"column_start":84,"column_end":89},"kind":"SuperTrait","from":{"krate":0,"index":2534},"to":{"krate":0,"index":1465}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164497,"byte_end":164501,"line_start":132,"line_end":132,"column_start":24,"column_end":28},"kind":{"Impl":{"id":211}},"from":{"krate":8,"index":54376},"to":{"krate":0,"index":1465}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164572,"byte_end":164576,"line_start":134,"line_end":134,"column_start":24,"column_end":28},"kind":{"Impl":{"id":212}},"from":{"krate":8,"index":54365},"to":{"krate":0,"index":1465}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164673,"byte_end":164677,"line_start":138,"line_end":138,"column_start":24,"column_end":28},"kind":{"Impl":{"id":213}},"from":{"krate":8,"index":54354},"to":{"krate":0,"index":1465}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164769,"byte_end":164774,"line_start":142,"line_end":142,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":1475}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164777,"byte_end":164785,"line_start":142,"line_end":142,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":1465},"to":{"krate":0,"index":1475}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":164968,"byte_end":164971,"line_start":151,"line_end":151,"column_start":32,"column_end":35},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1480},"to":{"krate":0,"index":1475}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":165189,"byte_end":165192,"line_start":162,"line_end":162,"column_start":17,"column_end":20},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2c.rs","byte_start":165885,"byte_end":165888,"line_start":191,"line_end":191,"column_start":27,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":180147,"byte_end":180150,"line_start":35,"line_end":35,"column_start":24,"column_end":27},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1568},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":181236,"byte_end":181243,"line_start":70,"line_end":70,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1589},"to":{"krate":0,"index":1588}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":181251,"byte_end":181257,"line_start":70,"line_end":70,"column_start":36,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":2528},"to":{"krate":0,"index":1588}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":181265,"byte_end":181270,"line_start":70,"line_end":70,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":2534},"to":{"krate":0,"index":1588}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182480,"byte_end":182485,"line_start":105,"line_end":105,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":1592}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182488,"byte_end":182496,"line_start":105,"line_end":105,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":1588},"to":{"krate":0,"index":1592}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182617,"byte_end":182620,"line_start":109,"line_end":109,"column_start":32,"column_end":35},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1596},"to":{"krate":0,"index":1592}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":182770,"byte_end":182773,"line_start":115,"line_end":115,"column_start":17,"column_end":20},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/i2s.rs","byte_start":185966,"byte_end":185969,"line_start":229,"line_end":229,"column_start":15,"column_end":18},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187935,"byte_end":187938,"line_start":24,"line_end":24,"column_start":22,"column_end":25},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1647},"to":{"krate":1,"index":3031}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/otg_fs.rs","byte_start":187973,"byte_end":187976,"line_start":26,"line_end":26,"column_start":31,"column_end":34},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1647},"to":{"krate":19,"index":9349}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":246297,"byte_end":246303,"line_start":23,"line_end":23,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1743},"to":{"krate":0,"index":1752}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247412,"byte_end":247421,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1752},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":247424,"byte_end":247430,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":1743},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":252416,"byte_end":252420,"line_start":189,"line_end":189,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":1740},"to":{"krate":0,"index":1799}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253398,"byte_end":253402,"line_start":227,"line_end":227,"column_start":17,"column_end":21},"kind":{"Impl":{"id":233}},"from":{"krate":8,"index":44317},"to":{"krate":0,"index":1743}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253422,"byte_end":253426,"line_start":228,"line_end":228,"column_start":17,"column_end":21},"kind":{"Impl":{"id":234}},"from":{"krate":8,"index":44306},"to":{"krate":0,"index":1743}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253947,"byte_end":253952,"line_start":249,"line_end":249,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3234},"to":{"krate":0,"index":1809}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":253982,"byte_end":253988,"line_start":249,"line_end":249,"column_start":56,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":1743},"to":{"krate":0,"index":1809}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254099,"byte_end":254103,"line_start":254,"line_end":254,"column_start":19,"column_end":23},"kind":{"Impl":{"id":235}},"from":{"krate":8,"index":44317},"to":{"krate":0,"index":1809}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/traits.rs","byte_start":254217,"byte_end":254221,"line_start":261,"line_end":261,"column_start":19,"column_end":23},"kind":{"Impl":{"id":236}},"from":{"krate":8,"index":44306},"to":{"krate":0,"index":1809}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":190504,"byte_end":190512,"line_start":43,"line_end":43,"column_start":19,"column_end":27},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":7169},"to":{"krate":1,"index":9558}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191243,"byte_end":191261,"line_start":68,"line_end":68,"column_start":19,"column_end":37},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":7201},"to":{"krate":0,"index":1740}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191350,"byte_end":191368,"line_start":75,"line_end":75,"column_start":20,"column_end":38},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":7201},"to":{"krate":0,"index":1799}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191709,"byte_end":191723,"line_start":91,"line_end":91,"column_start":22,"column_end":36},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":7208},"to":{"krate":0,"index":1740}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":191818,"byte_end":191832,"line_start":98,"line_end":98,"column_start":23,"column_end":37},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":7208},"to":{"krate":0,"index":1799}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192136,"byte_end":192154,"line_start":112,"line_end":112,"column_start":19,"column_end":37},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":7219},"to":{"krate":0,"index":1740}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192243,"byte_end":192261,"line_start":119,"line_end":119,"column_start":20,"column_end":38},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":7219},"to":{"krate":0,"index":1799}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192435,"byte_end":192449,"line_start":128,"line_end":128,"column_start":29,"column_end":43},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":7208},"to":{"krate":0,"index":1802}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192572,"byte_end":192586,"line_start":135,"line_end":135,"column_start":29,"column_end":43},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":7208},"to":{"krate":0,"index":1802}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":192711,"byte_end":192725,"line_start":142,"line_end":142,"column_start":29,"column_end":43},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":7208},"to":{"krate":0,"index":1802}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193262,"byte_end":193271,"line_start":168,"line_end":168,"column_start":19,"column_end":28},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":7226},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":193883,"byte_end":193896,"line_start":191,"line_end":191,"column_start":14,"column_end":27},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":7246},"to":{"krate":1,"index":3138}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":194258,"byte_end":194265,"line_start":208,"line_end":208,"column_start":24,"column_end":31},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":1888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":194376,"byte_end":194383,"line_start":214,"line_end":214,"column_start":34,"column_end":41},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":1888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195558,"byte_end":195565,"line_start":254,"line_end":254,"column_start":22,"column_end":29},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":1888},"to":{"krate":0,"index":1743}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195598,"byte_end":195605,"line_start":255,"line_end":255,"column_start":22,"column_end":29},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":1888},"to":{"krate":0,"index":1743}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195638,"byte_end":195645,"line_start":256,"line_end":256,"column_start":22,"column_end":29},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":1888},"to":{"krate":0,"index":1743}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195678,"byte_end":195685,"line_start":257,"line_end":257,"column_start":22,"column_end":29},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":1888},"to":{"krate":0,"index":1743}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195718,"byte_end":195725,"line_start":258,"line_end":258,"column_start":22,"column_end":29},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":1888},"to":{"krate":0,"index":1743}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195758,"byte_end":195765,"line_start":259,"line_end":259,"column_start":22,"column_end":29},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":1888},"to":{"krate":0,"index":1743}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195798,"byte_end":195805,"line_start":260,"line_end":260,"column_start":22,"column_end":29},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":1888},"to":{"krate":0,"index":1743}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":195838,"byte_end":195845,"line_start":261,"line_end":261,"column_start":22,"column_end":29},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":1888},"to":{"krate":0,"index":1743}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":196172,"byte_end":196184,"line_start":275,"line_end":275,"column_start":37,"column_end":49},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":1948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":196799,"byte_end":196806,"line_start":297,"line_end":297,"column_start":43,"column_end":50},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":1888},"to":{"krate":0,"index":1764}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210121,"byte_end":210129,"line_start":691,"line_end":691,"column_start":23,"column_end":31},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":7466},"to":{"krate":0,"index":1740}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":210699,"byte_end":210712,"line_start":715,"line_end":715,"column_start":23,"column_end":36},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":7480},"to":{"krate":0,"index":1740}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":211404,"byte_end":211413,"line_start":739,"line_end":739,"column_start":23,"column_end":32},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":7494},"to":{"krate":0,"index":1740}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":212427,"byte_end":212436,"line_start":768,"line_end":768,"column_start":22,"column_end":31},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":7508},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":213143,"byte_end":213152,"line_start":788,"line_end":788,"column_start":10,"column_end":19},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":7508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":216581,"byte_end":216589,"line_start":887,"line_end":887,"column_start":5,"column_end":13},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":2059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":222584,"byte_end":222592,"line_start":1018,"line_end":1018,"column_start":5,"column_end":13},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":2059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":223051,"byte_end":223059,"line_start":1032,"line_end":1032,"column_start":5,"column_end":13},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":2059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":229106,"byte_end":229114,"line_start":1166,"line_end":1166,"column_start":5,"column_end":13},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":2059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":233135,"byte_end":233143,"line_start":1265,"line_end":1265,"column_start":5,"column_end":13},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":2059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dma/mod.rs","byte_start":245560,"byte_end":245568,"line_start":1593,"line_end":1593,"column_start":9,"column_end":17},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":2059},"to":{"krate":1,"index":3258}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291299,"byte_end":291302,"line_start":10,"line_end":10,"column_start":17,"column_end":20},"kind":{"Impl":{"id":487}},"from":{"krate":9,"index":722},"to":{"krate":0,"index":2153}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":291699,"byte_end":291702,"line_start":29,"line_end":29,"column_start":6,"column_end":9},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":2157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":292882,"byte_end":292887,"line_start":63,"line_end":63,"column_start":6,"column_end":11},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":7527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":294433,"byte_end":294438,"line_start":100,"line_end":100,"column_start":66,"column_end":71},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":7527},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":294734,"byte_end":294739,"line_start":108,"line_end":108,"column_start":66,"column_end":71},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":7527},"to":{"krate":4,"index":28}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":295019,"byte_end":295024,"line_start":117,"line_end":117,"column_start":53,"column_end":58},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":7527},"to":{"krate":15,"index":98}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":295997,"byte_end":296006,"line_start":147,"line_end":147,"column_start":10,"column_end":19},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":2183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":297625,"byte_end":297638,"line_start":203,"line_end":203,"column_start":6,"column_end":19},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":298885,"byte_end":298894,"line_start":241,"line_end":241,"column_start":6,"column_end":15},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":7538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/dwt.rs","byte_start":299654,"byte_end":299661,"line_start":274,"line_end":274,"column_start":6,"column_end":13},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":300172,"byte_end":300177,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":7548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":301520,"byte_end":301525,"line_start":57,"line_end":57,"column_start":19,"column_end":24},"kind":{"Impl":{"id":498}},"from":{"krate":8,"index":5371},"to":{"krate":0,"index":2234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303389,"byte_end":303400,"line_start":125,"line_end":125,"column_start":6,"column_end":17},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":2249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":303492,"byte_end":303503,"line_start":131,"line_end":131,"column_start":19,"column_end":30},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":2249},"to":{"krate":0,"index":2234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304784,"byte_end":304797,"line_start":183,"line_end":183,"column_start":15,"column_end":28},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":2259},"to":{"krate":1,"index":3258}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":304869,"byte_end":304882,"line_start":189,"line_end":189,"column_start":6,"column_end":19},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":2259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":307704,"byte_end":307715,"line_start":289,"line_end":289,"column_start":6,"column_end":17},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":2279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":308147,"byte_end":308166,"line_start":305,"line_end":305,"column_start":6,"column_end":25},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":2285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":308398,"byte_end":308417,"line_start":316,"line_end":316,"column_start":19,"column_end":38},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":2285},"to":{"krate":1,"index":7829}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":309818,"byte_end":309829,"line_start":360,"line_end":360,"column_start":23,"column_end":34},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":2249},"to":{"krate":30,"index":47}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":310208,"byte_end":310221,"line_start":376,"line_end":376,"column_start":27,"column_end":40},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":2259},"to":{"krate":30,"index":47}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":310600,"byte_end":310613,"line_start":392,"line_end":392,"column_start":23,"column_end":36},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":2259},"to":{"krate":30,"index":52}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/flash.rs","byte_start":311455,"byte_end":311468,"line_start":421,"line_end":421,"column_start":33,"column_end":46},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":2259},"to":{"krate":30,"index":57}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315079,"byte_end":315084,"line_start":7,"line_end":7,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":2415}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315172,"byte_end":315175,"line_start":11,"line_end":11,"column_start":34,"column_end":37},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":2419},"to":{"krate":0,"index":2415}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":315554,"byte_end":315557,"line_start":34,"line_end":34,"column_start":27,"column_end":30},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":2428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316041,"byte_end":316044,"line_start":52,"line_end":52,"column_start":27,"column_end":30},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":2428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316236,"byte_end":316239,"line_start":59,"line_end":59,"column_start":49,"column_end":52},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":2428},"to":{"krate":4,"index":503}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316610,"byte_end":316616,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":4733},"to":{"krate":0,"index":2447}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316624,"byte_end":316630,"line_start":75,"line_end":75,"column_start":42,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":2528},"to":{"krate":0,"index":2447}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316638,"byte_end":316643,"line_start":75,"line_end":75,"column_start":56,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":2534},"to":{"krate":0,"index":2447}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/qei.rs","byte_start":316646,"byte_end":316653,"line_start":75,"line_end":75,"column_start":64,"column_end":71},"kind":"SuperTrait","from":{"krate":0,"index":4593},"to":{"krate":0,"index":2447}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/pll.rs","byte_start":368444,"byte_end":368451,"line_start":13,"line_end":13,"column_start":6,"column_end":13},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":2482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/pll.rs","byte_start":376322,"byte_end":376328,"line_start":235,"line_end":235,"column_start":6,"column_end":12},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":2494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/pll.rs","byte_start":383918,"byte_end":383933,"line_start":479,"line_end":479,"column_start":6,"column_end":21},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":2506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321024,"byte_end":321030,"line_start":68,"line_end":68,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":4733},"to":{"krate":0,"index":2526}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321116,"byte_end":321122,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2526},"to":{"krate":0,"index":2528}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321245,"byte_end":321251,"line_start":80,"line_end":80,"column_start":21,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":2526},"to":{"krate":0,"index":2531}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321372,"byte_end":321378,"line_start":86,"line_end":86,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":2526},"to":{"krate":0,"index":2534}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":321995,"byte_end":321996,"line_start":108,"line_end":108,"column_start":22,"column_end":23},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":2543},"to":{"krate":0,"index":2538}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":322148,"byte_end":322149,"line_start":118,"line_end":118,"column_start":27,"column_end":28},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":2546},"to":{"krate":0,"index":2540}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":322379,"byte_end":322383,"line_start":133,"line_end":133,"column_start":6,"column_end":10},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":2548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":322831,"byte_end":322835,"line_start":155,"line_end":155,"column_start":6,"column_end":10},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":2554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":323715,"byte_end":323719,"line_start":198,"line_end":198,"column_start":6,"column_end":10},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":2560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324095,"byte_end":324099,"line_start":218,"line_end":218,"column_start":6,"column_end":10},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":2566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324408,"byte_end":324412,"line_start":233,"line_end":233,"column_start":19,"column_end":23},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":2548},"to":{"krate":0,"index":2538}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324538,"byte_end":324542,"line_start":240,"line_end":240,"column_start":19,"column_end":23},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":2554},"to":{"krate":0,"index":2538}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324775,"byte_end":324779,"line_start":253,"line_end":253,"column_start":19,"column_end":23},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":2560},"to":{"krate":0,"index":2538}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324871,"byte_end":324875,"line_start":259,"line_end":259,"column_start":19,"column_end":23},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":2566},"to":{"krate":0,"index":2538}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":324972,"byte_end":324976,"line_start":265,"line_end":265,"column_start":24,"column_end":28},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":2560},"to":{"krate":0,"index":2540}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":325175,"byte_end":325179,"line_start":272,"line_end":272,"column_start":24,"column_end":28},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":2566},"to":{"krate":0,"index":2540}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":325371,"byte_end":325374,"line_start":279,"line_end":279,"column_start":17,"column_end":20},"kind":{"Impl":{"id":534}},"from":{"krate":8,"index":18819},"to":{"krate":0,"index":2536}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":331693,"byte_end":331697,"line_start":509,"line_end":509,"column_start":6,"column_end":10},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":2593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":357166,"byte_end":357175,"line_start":1275,"line_end":1275,"column_start":6,"column_end":15},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":7982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":358869,"byte_end":358882,"line_start":1341,"line_end":1341,"column_start":6,"column_end":19},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":7997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rcc/mod.rs","byte_start":365023,"byte_end":365029,"line_start":1559,"line_end":1559,"column_start":6,"column_end":12},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":8012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393138,"byte_end":393141,"line_start":40,"line_end":40,"column_start":21,"column_end":24},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":2697},"to":{"krate":1,"index":9558}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":393672,"byte_end":393675,"line_start":57,"line_end":57,"column_start":6,"column_end":9},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":2697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":396257,"byte_end":396260,"line_start":136,"line_end":136,"column_start":6,"column_end":9},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":2697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/rtc.rs","byte_start":398229,"byte_end":398232,"line_start":198,"line_end":198,"column_start":10,"column_end":13},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":2697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":435376,"byte_end":435382,"line_start":5,"line_end":5,"column_start":44,"column_end":50},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":3065},"to":{"krate":4,"index":426}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":435669,"byte_end":435671,"line_start":17,"line_end":17,"column_start":40,"column_end":42},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":3073},"to":{"krate":4,"index":426}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":436177,"byte_end":436179,"line_start":30,"line_end":30,"column_start":41,"column_end":43},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":3073},"to":{"krate":4,"index":426}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":436369,"byte_end":436375,"line_start":38,"line_end":38,"column_start":45,"column_end":51},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":3065},"to":{"krate":4,"index":430}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":436780,"byte_end":436782,"line_start":54,"line_end":54,"column_start":41,"column_end":43},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":3078},"to":{"krate":4,"index":430}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":437405,"byte_end":437407,"line_start":71,"line_end":71,"column_start":42,"column_end":44},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":3078},"to":{"krate":4,"index":430}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":437824,"byte_end":437826,"line_start":88,"line_end":88,"column_start":41,"column_end":43},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":3078},"to":{"krate":4,"index":83}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":438138,"byte_end":438144,"line_start":100,"line_end":100,"column_start":47,"column_end":53},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":3065},"to":{"krate":4,"index":83}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":438463,"byte_end":438465,"line_start":112,"line_end":112,"column_start":42,"column_end":44},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":3078},"to":{"krate":4,"index":83}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_02.rs","byte_start":438780,"byte_end":438786,"line_start":124,"line_end":124,"column_start":48,"column_end":54},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":3065},"to":{"krate":4,"index":83}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":439155,"byte_end":439161,"line_start":3,"line_end":3,"column_start":46,"column_end":52},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":3065},"to":{"krate":15,"index":266}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":439256,"byte_end":439258,"line_start":7,"line_end":7,"column_start":40,"column_end":42},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":3073},"to":{"krate":15,"index":266}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":439347,"byte_end":439349,"line_start":11,"line_end":11,"column_start":40,"column_end":42},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":3078},"to":{"krate":15,"index":266}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":439604,"byte_end":439610,"line_start":22,"line_end":22,"column_start":50,"column_end":56},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":3065},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":439880,"byte_end":439882,"line_start":32,"line_end":32,"column_start":40,"column_end":42},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":3073},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":440359,"byte_end":440361,"line_start":43,"line_end":43,"column_start":41,"column_end":43},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":3073},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":440528,"byte_end":440534,"line_start":49,"line_end":49,"column_start":51,"column_end":57},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":3065},"to":{"krate":15,"index":249}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":440928,"byte_end":440930,"line_start":63,"line_end":63,"column_start":41,"column_end":43},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":3078},"to":{"krate":15,"index":249}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":441524,"byte_end":441526,"line_start":78,"line_end":78,"column_start":42,"column_end":44},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":3078},"to":{"krate":15,"index":249}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":441947,"byte_end":441953,"line_start":94,"line_end":94,"column_start":51,"column_end":57},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":3065},"to":{"krate":15,"index":232}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":442344,"byte_end":442346,"line_start":108,"line_end":108,"column_start":41,"column_end":43},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":3078},"to":{"krate":15,"index":232}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial/hal_1.rs","byte_start":442618,"byte_end":442620,"line_start":118,"line_end":118,"column_start":42,"column_end":44},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":3078},"to":{"krate":15,"index":232}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":411778,"byte_end":411784,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":8125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":412740,"byte_end":412746,"line_start":153,"line_end":153,"column_start":22,"column_end":28},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":8125},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413117,"byte_end":413123,"line_start":166,"line_end":166,"column_start":36,"column_end":42},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":8125},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413328,"byte_end":413333,"line_start":177,"line_end":177,"column_start":24,"column_end":29},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":3045},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":413378,"byte_end":413383,"line_start":179,"line_end":179,"column_start":24,"column_end":29},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":3048},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":414480,"byte_end":414482,"line_start":225,"line_end":225,"column_start":19,"column_end":21},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":3073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":416173,"byte_end":416175,"line_start":281,"line_end":281,"column_start":19,"column_end":21},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":3078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417037,"byte_end":417043,"line_start":311,"line_end":311,"column_start":52,"column_end":58},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":3065},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417185,"byte_end":417191,"line_start":317,"line_end":317,"column_start":52,"column_end":58},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":3065},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417333,"byte_end":417339,"line_start":323,"line_end":323,"column_start":52,"column_end":58},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":3065},"to":{"krate":1,"index":2919}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417493,"byte_end":417499,"line_start":329,"line_end":329,"column_start":52,"column_end":58},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":3065},"to":{"krate":1,"index":2919}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417623,"byte_end":417628,"line_start":335,"line_end":335,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":3127}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":417631,"byte_end":417639,"line_start":335,"line_end":335,"column_start":30,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":3222},"to":{"krate":0,"index":3127}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":418330,"byte_end":418335,"line_start":360,"line_end":360,"column_start":37,"column_end":42},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":3141},"to":{"krate":0,"index":3127}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":419191,"byte_end":419197,"line_start":393,"line_end":393,"column_start":25,"column_end":31},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":423735,"byte_end":423741,"line_start":531,"line_end":531,"column_start":23,"column_end":29},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":424120,"byte_end":424126,"line_start":546,"line_end":546,"column_start":23,"column_end":29},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":424507,"byte_end":424513,"line_start":561,"line_end":561,"column_start":25,"column_end":31},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426375,"byte_end":426381,"line_start":614,"line_end":614,"column_start":19,"column_end":25},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":426818,"byte_end":426824,"line_start":631,"line_end":631,"column_start":19,"column_end":25},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":427277,"byte_end":427279,"line_start":648,"line_end":648,"column_start":36,"column_end":38},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":3073},"to":{"krate":0,"index":1802}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":427502,"byte_end":427504,"line_start":660,"line_end":660,"column_start":36,"column_end":38},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":3078},"to":{"krate":0,"index":1802}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":427716,"byte_end":427722,"line_start":672,"line_end":672,"column_start":25,"column_end":31},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":428669,"byte_end":428675,"line_start":713,"line_end":713,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":4733},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":428683,"byte_end":428689,"line_start":713,"line_end":713,"column_start":42,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":2528},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":428697,"byte_end":428702,"line_start":713,"line_end":713,"column_start":56,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":2534},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":428710,"byte_end":428718,"line_start":713,"line_end":713,"column_start":69,"column_end":77},"kind":"SuperTrait","from":{"krate":0,"index":2538},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":432021,"byte_end":432027,"line_start":816,"line_end":816,"column_start":44,"column_end":50},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":3065},"to":{"krate":1,"index":9509}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":432172,"byte_end":432174,"line_start":822,"line_end":822,"column_start":38,"column_end":40},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":3078},"to":{"krate":1,"index":9509}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":432377,"byte_end":432379,"line_start":830,"line_end":830,"column_start":23,"column_end":25},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":3073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":432617,"byte_end":432619,"line_start":837,"line_end":837,"column_start":23,"column_end":25},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":3073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":433638,"byte_end":433640,"line_start":868,"line_end":868,"column_start":23,"column_end":25},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":3078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/serial.rs","byte_start":434221,"byte_end":434223,"line_start":891,"line_end":891,"column_start":23,"column_end":25},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":3078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":443614,"byte_end":443617,"line_start":35,"line_end":35,"column_start":6,"column_end":9},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":8186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444123,"byte_end":444132,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":8199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444513,"byte_end":444520,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":8207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":444778,"byte_end":444788,"line_start":94,"line_end":94,"column_start":6,"column_end":16},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":8215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/signature.rs","byte_start":445049,"byte_end":445060,"line_start":107,"line_end":107,"column_start":6,"column_end":17},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":8223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":459478,"byte_end":459486,"line_start":3,"line_end":3,"column_start":32,"column_end":40},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":8231},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":459687,"byte_end":459692,"line_start":12,"line_end":12,"column_start":29,"column_end":34},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":8247},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":459951,"byte_end":459955,"line_start":21,"line_end":21,"column_start":28,"column_end":32},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":8263},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":460271,"byte_end":460274,"line_start":34,"line_end":34,"column_start":40,"column_end":43},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":8314},"to":{"krate":4,"index":439}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":460623,"byte_end":460626,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":8314},"to":{"krate":4,"index":439}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":461346,"byte_end":461349,"line_start":72,"line_end":72,"column_start":53,"column_end":56},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":8314},"to":{"krate":4,"index":98}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":461808,"byte_end":461811,"line_start":89,"line_end":89,"column_start":35,"column_end":38},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":8314},"to":{"krate":4,"index":103}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":462233,"byte_end":462236,"line_start":106,"line_end":106,"column_start":35,"column_end":38},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":8314},"to":{"krate":4,"index":103}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":462618,"byte_end":462621,"line_start":122,"line_end":122,"column_start":39,"column_end":42},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":8314},"to":{"krate":4,"index":107}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":463127,"byte_end":463130,"line_start":142,"line_end":142,"column_start":39,"column_end":42},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":8314},"to":{"krate":4,"index":107}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_02.rs","byte_start":463622,"byte_end":463625,"line_start":161,"line_end":161,"column_start":69,"column_end":72},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":8314},"to":{"krate":4,"index":138}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":464242,"byte_end":464250,"line_start":3,"line_end":3,"column_start":32,"column_end":40},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":8231},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":464451,"byte_end":464456,"line_start":12,"line_end":12,"column_start":29,"column_end":34},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":8247},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":464715,"byte_end":464719,"line_start":21,"line_end":21,"column_start":28,"column_end":32},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":8263},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":464885,"byte_end":464890,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":8278},"to":{"krate":15,"index":339}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":465164,"byte_end":465167,"line_start":40,"line_end":40,"column_start":53,"column_end":56},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":8314},"to":{"krate":15,"index":347}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":465410,"byte_end":465413,"line_start":48,"line_end":48,"column_start":40,"column_end":43},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":8314},"to":{"krate":15,"index":326}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":465734,"byte_end":465737,"line_start":61,"line_end":61,"column_start":40,"column_end":43},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":8314},"to":{"krate":15,"index":326}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":466449,"byte_end":466452,"line_start":84,"line_end":84,"column_start":60,"column_end":63},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":8314},"to":{"krate":15,"index":283}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":466875,"byte_end":466878,"line_start":99,"line_end":99,"column_start":35,"column_end":38},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":8314},"to":{"krate":15,"index":297}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":467299,"byte_end":467302,"line_start":114,"line_end":114,"column_start":35,"column_end":38},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":8314},"to":{"krate":15,"index":297}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":467683,"byte_end":467686,"line_start":128,"line_end":128,"column_start":39,"column_end":42},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":8314},"to":{"krate":15,"index":304}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":468191,"byte_end":468194,"line_start":146,"line_end":146,"column_start":39,"column_end":42},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":8314},"to":{"krate":15,"index":304}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi/hal_1.rs","byte_start":468692,"byte_end":468695,"line_start":163,"line_end":163,"column_start":76,"column_end":79},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":8314},"to":{"krate":15,"index":313}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446373,"byte_end":446376,"line_start":59,"line_end":59,"column_start":24,"column_end":27},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":3580},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446420,"byte_end":446424,"line_start":61,"line_end":61,"column_start":24,"column_end":28},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":3583},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446468,"byte_end":446472,"line_start":63,"line_end":63,"column_start":24,"column_end":28},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":3586},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":446515,"byte_end":446518,"line_start":65,"line_end":65,"column_start":24,"column_end":27},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":3589},"to":{"krate":0,"index":4733}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448095,"byte_end":448101,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":4733},"to":{"krate":0,"index":3613}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448104,"byte_end":448109,"line_start":124,"line_end":124,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3234},"to":{"krate":0,"index":3613}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448147,"byte_end":448153,"line_start":124,"line_end":124,"column_start":64,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":2528},"to":{"krate":0,"index":3613}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448161,"byte_end":448166,"line_start":124,"line_end":124,"column_start":78,"column_end":83},"kind":"SuperTrait","from":{"krate":0,"index":2534},"to":{"krate":0,"index":3613}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448174,"byte_end":448182,"line_start":124,"line_end":124,"column_start":91,"column_end":99},"kind":"SuperTrait","from":{"krate":0,"index":2538},"to":{"krate":0,"index":3613}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448840,"byte_end":448845,"line_start":158,"line_end":158,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":3616}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":448848,"byte_end":448856,"line_start":158,"line_end":158,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":3613},"to":{"krate":0,"index":3616}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":449270,"byte_end":449273,"line_start":175,"line_end":175,"column_start":32,"column_end":35},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":3624},"to":{"krate":0,"index":3616}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":449789,"byte_end":449792,"line_start":196,"line_end":196,"column_start":17,"column_end":20},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":8314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":450644,"byte_end":450647,"line_start":229,"line_end":229,"column_start":17,"column_end":20},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":8314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":451523,"byte_end":451526,"line_start":262,"line_end":262,"column_start":32,"column_end":35},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":8314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":451737,"byte_end":451740,"line_start":274,"line_end":274,"column_start":17,"column_end":20},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":8314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":452168,"byte_end":452171,"line_start":294,"line_end":294,"column_start":17,"column_end":20},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":8314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":452608,"byte_end":452611,"line_start":314,"line_end":314,"column_start":32,"column_end":35},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":8314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":458450,"byte_end":458460,"line_start":506,"line_end":506,"column_start":11,"column_end":21},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":3689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":459007,"byte_end":459009,"line_start":533,"line_end":533,"column_start":34,"column_end":36},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":3695},"to":{"krate":0,"index":1802}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/spi.rs","byte_start":459217,"byte_end":459219,"line_start":545,"line_end":545,"column_start":34,"column_end":36},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":3692},"to":{"krate":0,"index":1802}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":469531,"byte_end":469537,"line_start":12,"line_end":12,"column_start":20,"column_end":26},"kind":{"Impl":{"id":643}},"from":{"krate":8,"index":27525},"to":{"krate":0,"index":3732}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":469878,"byte_end":469884,"line_start":28,"line_end":28,"column_start":16,"column_end":22},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":3736},"to":{"krate":1,"index":3234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/syscfg.rs","byte_start":470175,"byte_end":470181,"line_start":44,"line_end":44,"column_start":21,"column_end":27},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":3736},"to":{"krate":1,"index":9558}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495398,"byte_end":495407,"line_start":9,"line_end":9,"column_start":19,"column_end":28},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":3832},"to":{"krate":1,"index":3234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495526,"byte_end":495535,"line_start":16,"line_end":16,"column_start":22,"column_end":31},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":3832},"to":{"krate":1,"index":3247}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495641,"byte_end":495650,"line_start":22,"line_end":22,"column_start":21,"column_end":30},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":3832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":495835,"byte_end":495844,"line_start":31,"line_end":31,"column_start":21,"column_end":30},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":3832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497052,"byte_end":497059,"line_start":74,"line_end":74,"column_start":36,"column_end":43},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":3851},"to":{"krate":1,"index":3234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497208,"byte_end":497215,"line_start":81,"line_end":81,"column_start":39,"column_end":46},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":3851},"to":{"krate":1,"index":3247}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":497627,"byte_end":497634,"line_start":95,"line_end":95,"column_start":38,"column_end":45},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":3851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":498933,"byte_end":498940,"line_start":144,"line_end":144,"column_start":67,"column_end":74},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":3851},"to":{"krate":33,"index":5}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499355,"byte_end":499360,"line_start":164,"line_end":164,"column_start":6,"column_end":11},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":4537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":499904,"byte_end":499916,"line_start":184,"line_end":184,"column_start":16,"column_end":28},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":3892},"to":{"krate":1,"index":3234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":500032,"byte_end":500044,"line_start":191,"line_end":191,"column_start":19,"column_end":31},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":3892},"to":{"krate":1,"index":3247}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":500132,"byte_end":500144,"line_start":197,"line_end":197,"column_start":6,"column_end":18},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":3892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501067,"byte_end":501077,"line_start":235,"line_end":235,"column_start":33,"column_end":43},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":3906},"to":{"krate":1,"index":3234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501216,"byte_end":501226,"line_start":242,"line_end":242,"column_start":36,"column_end":46},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":3906},"to":{"krate":1,"index":3247}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":501337,"byte_end":501347,"line_start":248,"line_end":248,"column_start":23,"column_end":33},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":3906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/counter.rs","byte_start":502725,"byte_end":502735,"line_start":301,"line_end":301,"column_start":52,"column_end":62},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":3906},"to":{"krate":33,"index":5}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503408,"byte_end":503416,"line_start":11,"line_end":11,"column_start":16,"column_end":24},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":3961},"to":{"krate":1,"index":3234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503532,"byte_end":503540,"line_start":18,"line_end":18,"column_start":19,"column_end":27},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":3961},"to":{"krate":1,"index":3247}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503628,"byte_end":503636,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":3961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503746,"byte_end":503751,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":4537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":503834,"byte_end":503842,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":3961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":504714,"byte_end":504719,"line_start":64,"line_end":64,"column_start":36,"column_end":41},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":3976},"to":{"krate":1,"index":3234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":504868,"byte_end":504873,"line_start":71,"line_end":71,"column_start":39,"column_end":44},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":3976},"to":{"krate":1,"index":3247}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":505270,"byte_end":505275,"line_start":85,"line_end":85,"column_start":38,"column_end":43},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":3976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":506616,"byte_end":506621,"line_start":124,"line_end":124,"column_start":67,"column_end":72},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":3976},"to":{"krate":33,"index":12}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/delay.rs","byte_start":506860,"byte_end":506868,"line_start":133,"line_end":133,"column_start":40,"column_end":48},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":3961},"to":{"krate":33,"index":12}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":514678,"byte_end":514681,"line_start":123,"line_end":123,"column_start":22,"column_end":25},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":4142},"to":{"krate":0,"index":4127}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515255,"byte_end":515265,"line_start":147,"line_end":147,"column_start":44,"column_end":54},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":4104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":515432,"byte_end":515442,"line_start":155,"line_end":155,"column_start":44,"column_end":54},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":4104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516175,"byte_end":516180,"line_start":192,"line_end":192,"column_start":20,"column_end":25},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":4162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516482,"byte_end":516487,"line_start":208,"line_end":208,"column_start":30,"column_end":35},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":4162},"to":{"krate":1,"index":3234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516693,"byte_end":516698,"line_start":219,"line_end":219,"column_start":33,"column_end":38},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":4162},"to":{"krate":1,"index":3247}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":516888,"byte_end":516893,"line_start":229,"line_end":229,"column_start":31,"column_end":36},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":4537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":518285,"byte_end":518290,"line_start":272,"line_end":272,"column_start":20,"column_end":25},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":4162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":519735,"byte_end":519738,"line_start":325,"line_end":325,"column_start":37,"column_end":40},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":4201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":520072,"byte_end":520075,"line_start":341,"line_end":341,"column_start":47,"column_end":50},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":4201},"to":{"krate":1,"index":3234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":520311,"byte_end":520314,"line_start":352,"line_end":352,"column_start":50,"column_end":53},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":4201},"to":{"krate":1,"index":3247}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":520527,"byte_end":520533,"line_start":362,"line_end":362,"column_start":48,"column_end":54},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":4649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm.rs","byte_start":521899,"byte_end":521902,"line_start":407,"line_end":407,"column_start":37,"column_end":40},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":4201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":523184,"byte_end":523187,"line_start":9,"line_end":9,"column_start":30,"column_end":33},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":4281},"to":{"krate":0,"index":4277}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524437,"byte_end":524445,"line_start":45,"line_end":45,"column_start":27,"column_end":35},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":4283},"to":{"krate":1,"index":3234}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524642,"byte_end":524650,"line_start":56,"line_end":56,"column_start":30,"column_end":38},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":4283},"to":{"krate":1,"index":3247}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/pwm_input.rs","byte_start":524820,"byte_end":524828,"line_start":66,"line_end":66,"column_start":17,"column_end":25},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":4283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":532727,"byte_end":532735,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":3961},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":532839,"byte_end":532847,"line_start":24,"line_end":24,"column_start":23,"column_end":31},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":3961},"to":{"krate":4,"index":28}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":532954,"byte_end":532962,"line_start":30,"line_end":30,"column_start":23,"column_end":31},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":3961},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533067,"byte_end":533075,"line_start":36,"line_end":36,"column_start":23,"column_end":31},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":3961},"to":{"krate":4,"index":28}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533180,"byte_end":533188,"line_start":42,"line_end":42,"column_start":22,"column_end":30},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":3961},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533291,"byte_end":533299,"line_start":48,"line_end":48,"column_start":22,"column_end":30},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":3961},"to":{"krate":4,"index":28}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533405,"byte_end":533414,"line_start":54,"line_end":54,"column_start":24,"column_end":33},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":3832},"to":{"krate":4,"index":460}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533441,"byte_end":533453,"line_start":55,"line_end":55,"column_start":19,"column_end":31},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":3892},"to":{"krate":4,"index":460}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533492,"byte_end":533502,"line_start":56,"line_end":56,"column_start":36,"column_end":46},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":3906},"to":{"krate":4,"index":460}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533532,"byte_end":533544,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":3892},"to":{"krate":4,"index":455}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":533908,"byte_end":533920,"line_start":76,"line_end":76,"column_start":17,"column_end":29},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":3892},"to":{"krate":4,"index":461}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":534067,"byte_end":534076,"line_start":84,"line_end":84,"column_start":35,"column_end":44},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":3832},"to":{"krate":4,"index":455}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":534460,"byte_end":534469,"line_start":102,"line_end":102,"column_start":32,"column_end":41},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":3832},"to":{"krate":4,"index":461}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":534623,"byte_end":534633,"line_start":110,"line_end":110,"column_start":37,"column_end":47},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":3906},"to":{"krate":4,"index":455}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":535042,"byte_end":535052,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":3906},"to":{"krate":4,"index":461}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":535239,"byte_end":535249,"line_start":136,"line_end":136,"column_start":69,"column_end":79},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":4104},"to":{"krate":4,"index":496}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":535665,"byte_end":535670,"line_start":156,"line_end":156,"column_start":42,"column_end":47},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":4162},"to":{"krate":4,"index":484}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":536600,"byte_end":536605,"line_start":198,"line_end":198,"column_start":55,"column_end":60},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":3976},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":536788,"byte_end":536793,"line_start":205,"line_end":205,"column_start":55,"column_end":60},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":3976},"to":{"krate":4,"index":28}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":536976,"byte_end":536981,"line_start":212,"line_end":212,"column_start":55,"column_end":60},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":3976},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":537172,"byte_end":537177,"line_start":218,"line_end":218,"column_start":55,"column_end":60},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":3976},"to":{"krate":4,"index":28}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":537368,"byte_end":537373,"line_start":225,"line_end":225,"column_start":54,"column_end":59},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":3976},"to":{"krate":4,"index":31}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":537562,"byte_end":537567,"line_start":231,"line_end":231,"column_start":54,"column_end":59},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":3976},"to":{"krate":4,"index":28}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":537754,"byte_end":537761,"line_start":238,"line_end":238,"column_start":51,"column_end":58},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":3851},"to":{"krate":4,"index":460}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":537828,"byte_end":537835,"line_start":240,"line_end":240,"column_start":52,"column_end":59},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":3851},"to":{"krate":4,"index":455}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":538264,"byte_end":538271,"line_start":258,"line_end":258,"column_start":49,"column_end":56},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":3851},"to":{"krate":4,"index":461}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_02.rs","byte_start":538453,"byte_end":538456,"line_start":266,"line_end":266,"column_start":59,"column_end":62},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":4201},"to":{"krate":4,"index":484}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_1.rs","byte_start":539719,"byte_end":539727,"line_start":12,"line_end":12,"column_start":18,"column_end":26},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":3961},"to":{"krate":15,"index":98}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer/hal_1.rs","byte_start":540038,"byte_end":540043,"line_start":26,"line_end":26,"column_start":50,"column_end":55},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":3976},"to":{"krate":15,"index":98}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":472072,"byte_end":472077,"line_start":74,"line_end":74,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":4541}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":473715,"byte_end":473718,"line_start":112,"line_end":112,"column_start":34,"column_end":37},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":4556},"to":{"krate":0,"index":4541}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474115,"byte_end":474120,"line_start":124,"line_end":124,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":4562}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":474684,"byte_end":474688,"line_start":138,"line_end":138,"column_start":22,"column_end":26},"kind":{"Impl":{"id":720}},"from":{"krate":9,"index":801},"to":{"krate":0,"index":4562}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":475045,"byte_end":475050,"line_start":150,"line_end":150,"column_start":6,"column_end":11},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":4537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477563,"byte_end":477570,"line_start":236,"line_end":236,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":4593},"to":{"krate":0,"index":4614}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":477897,"byte_end":477904,"line_start":245,"line_end":245,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":4593},"to":{"krate":0,"index":4621}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":478073,"byte_end":478079,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":4733},"to":{"krate":0,"index":4634}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":478087,"byte_end":478093,"line_start":253,"line_end":253,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":2528},"to":{"krate":0,"index":4634}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":478101,"byte_end":478106,"line_start":253,"line_end":253,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":2534},"to":{"krate":0,"index":4634}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":478114,"byte_end":478127,"line_start":253,"line_end":253,"column_start":53,"column_end":66},"kind":"SuperTrait","from":{"krate":0,"index":2540},"to":{"krate":0,"index":4634}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":478130,"byte_end":478137,"line_start":253,"line_end":253,"column_start":69,"column_end":76},"kind":"SuperTrait","from":{"krate":0,"index":4593},"to":{"krate":0,"index":4634}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":489515,"byte_end":489520,"line_start":583,"line_end":583,"column_start":21,"column_end":26},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":4537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":490921,"byte_end":490926,"line_start":634,"line_end":634,"column_start":35,"column_end":40},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":4537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":491512,"byte_end":491518,"line_start":655,"line_end":655,"column_start":38,"column_end":44},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":4649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/timer.rs","byte_start":493477,"byte_end":493483,"line_start":720,"line_end":720,"column_start":52,"column_end":58},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":4649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":540798,"byte_end":540817,"line_start":20,"line_end":20,"column_start":21,"column_end":40},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":4697},"to":{"krate":1,"index":9558}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":541086,"byte_end":541105,"line_start":32,"line_end":32,"column_start":6,"column_end":25},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":4697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":543414,"byte_end":543433,"line_start":112,"line_end":112,"column_start":25,"column_end":44},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":4697},"to":{"krate":4,"index":467}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f4xx-hal-0.12.0/src/watchdog.rs","byte_start":543586,"byte_end":543605,"line_start":120,"line_end":120,"column_start":19,"column_end":38},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":4697},"to":{"krate":4,"index":465}}]}