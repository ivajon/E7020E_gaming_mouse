{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1","program":"/home/s7rul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rtt_target","--edition=2018","/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=1","-C","debuginfo=2","--cfg","feature=\"cortex-m\"","-C","metadata=4164a1049d7cd964","-C","extra-filename=-4164a1049d7cd964","--out-dir","/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/debug/deps","--extern","cortex_m=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m-e2710c0d5373be6b.rmeta","--extern","ufmt_write=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libufmt_write-17b186c60098ca8e.rmeta","--cap-lints","allow","-L","/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/build/cortex-m-9cc62ea7a2682fe4/out","--error-format=json","--sysroot","/home/s7rul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/librtt_target-4164a1049d7cd964.rmeta"},"prelude":{"crate_id":{"name":"rtt_target","disambiguator":[17001085304273791672,0]},"crate_root":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src","external_crates":[{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11850898037736144901,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4266445326248464732,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10236682895667522671,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","num":4,"id":{"name":"ufmt_write","disambiguator":[500194231799560660,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","num":5,"id":{"name":"cortex_m","disambiguator":[4850524805246375290,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","num":6,"id":{"name":"bare_metal","disambiguator":[16944285582135952960,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","num":7,"id":{"name":"volatile_register","disambiguator":[13936815109044514835,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","num":8,"id":{"name":"vcell","disambiguator":[14635091974150106792,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","num":9,"id":{"name":"embedded_hal","disambiguator":[1470599666875002530,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","num":10,"id":{"name":"nb","disambiguator":[932372155979664908,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","num":11,"id":{"name":"nb","disambiguator":[5444142482443035389,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","num":12,"id":{"name":"void","disambiguator":[2468047175398030117,0]}}],"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":0,"byte_end":12926,"line_start":1,"line_end":355,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4805,"byte_end":4806,"line_start":104,"line_end":104,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":0,"byte_end":12926,"line_start":1,"line_end":355,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":22},{"krate":0,"index":86},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":209},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":184},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":194}],"decl_id":null,"docs":" Target side implementation of the RTT (Real-Time Transfer) I/O protocol","sig":null,"attributes":[{"value":"/ Target side implementation of the RTT (Real-Time Transfer) I/O protocol","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":0,"byte_end":75,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":76,"byte_end":79,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ RTT implements input and output to/from a debug probe using in-memory ring buffers and memory","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":80,"byte_end":177,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ polling. This enables debug logging from the microcontroller with minimal delays and no","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":178,"byte_end":269,"line_start":4,"line_end":4,"column_start":1,"column_end":92}},{"value":"/ blocking, making it usable even in real-time applications where e.g. semihosting delays cannot","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":270,"byte_end":368,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ be tolerated.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":369,"byte_end":386,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":387,"byte_end":390,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Hardware support","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":391,"byte_end":413,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":414,"byte_end":417,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This crate is platform agnostic and can be used on any chip that supports background memory","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":418,"byte_end":513,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ access via its debug interface. The printing macros require a critical section which is","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":514,"byte_end":605,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ platform-dependent. Built-in ARM Cortex-M support can be enabled with the \"cortex-m\" feature,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":606,"byte_end":703,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ and RISC-V support can be enabled with the \"riscv\" feature.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":704,"byte_end":767,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":768,"byte_end":771,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ To interface with RTT from the host computer, a debug probe such as an ST-Link or J-Link is","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":772,"byte_end":867,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ required. The normal debug protocol (e.g. SWD) is used to access RTT, so no extra connections","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":868,"byte_end":965,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ such as SWO pins are needed.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":966,"byte_end":998,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":999,"byte_end":1002,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Initialization","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1003,"byte_end":1023,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1024,"byte_end":1027,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ RTT must be initialized at the start of your program using one of the init macros. See the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1028,"byte_end":1122,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ macros for more details.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1123,"byte_end":1151,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1152,"byte_end":1155,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The initialization macros return channel objects that can be used for writing and reading.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1156,"byte_end":1250,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ Different channel objects can safely be used concurrently in different contexts without locking.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1251,"byte_end":1351,"line_start":25,"line_end":25,"column_start":1,"column_end":101}},{"value":"/ In an interrupt-based application with realtime constraints you could use a separate channel for","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1352,"byte_end":1452,"line_start":26,"line_end":26,"column_start":1,"column_end":101}},{"value":"/ every interrupt context to allow for lock-free logging.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1453,"byte_end":1512,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Channels and virtual terminals","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1517,"byte_end":1553,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1554,"byte_end":1557,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ RTT supports multiple *channels* in both directions. Up channels go from target to host, and","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1558,"byte_end":1654,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ down channels go from host to target. Each channel is identified by its direction and number.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1655,"byte_end":1752,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1753,"byte_end":1756,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ By convention channel 0 is reserved for terminal use. In the up direction there is a set of","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1757,"byte_end":1852,"line_start":34,"line_end":34,"column_start":1,"column_end":96}},{"value":"/ escape sequences that further enable the single channel to be treated as up to 16 *virtual","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1853,"byte_end":1947,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ terminals*. This can be used to separate different types of messages (for example, log levels)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":1948,"byte_end":2046,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ from each other without having to allocate memory for multiple buffers. As a downside, multiple","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2047,"byte_end":2146,"line_start":37,"line_end":37,"column_start":1,"column_end":100}},{"value":"/ threads cannot write to the same channel at once, even if using different virtual terminal","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2147,"byte_end":2241,"line_start":38,"line_end":38,"column_start":1,"column_end":95}},{"value":"/ numbers, so access has to be synchronized. Down channel 0 is conventionally used for keyboard","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2242,"byte_end":2339,"line_start":39,"line_end":39,"column_start":1,"column_end":98}},{"value":"/ input.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2340,"byte_end":2350,"line_start":40,"line_end":40,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2351,"byte_end":2354,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ **Note:** Some host side programs only display channel 0 by default, so to see the other","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2355,"byte_end":2447,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"/ channels you might need to configure them appropriately.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2448,"byte_end":2508,"line_start":43,"line_end":43,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2509,"byte_end":2512,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The other channels can be used to either enable concurrent use from multiple sources without","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2513,"byte_end":2609,"line_start":45,"line_end":45,"column_start":1,"column_end":97}},{"value":"/ locking, or to send e.g. binary data in either direction.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2610,"byte_end":2671,"line_start":46,"line_end":46,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2672,"byte_end":2675,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Channel 0 can also be used for arbitrary data, but most tools expect it to be plain text.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2676,"byte_end":2769,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2770,"byte_end":2773,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Channel modes","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2774,"byte_end":2793,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2794,"byte_end":2797,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ By default, channels start in [`NoBlockSkip`](ChannelMode::NoBlockSkip) mode, which discards","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2798,"byte_end":2894,"line_start":52,"line_end":52,"column_start":1,"column_end":97}},{"value":"/ data if the buffer is full. This enables RTT to not crash the application if there is no debug","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2895,"byte_end":2993,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ probe attached or if the host is not reading the buffers. However if the application outputs","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":2994,"byte_end":3090,"line_start":54,"line_end":54,"column_start":1,"column_end":97}},{"value":"/ faster than the host can read (which is easy to do, because writing is very fast), messages will","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3091,"byte_end":3191,"line_start":55,"line_end":55,"column_start":1,"column_end":101}},{"value":"/ be lost. Channels can be set to blocking mode if this is desirable, however in that case the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3192,"byte_end":3288,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ application will likely freeze when the buffer fills up if a debugger is not attached.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3289,"byte_end":3379,"line_start":57,"line_end":57,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3380,"byte_end":3383,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The channel mode can also be changed on the fly by the debug probe. Therefore it may be","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3384,"byte_end":3475,"line_start":59,"line_end":59,"column_start":1,"column_end":92}},{"value":"/ advantageous to use a non-blocking mode in your microcontroller code, and set a blocking mode as","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3476,"byte_end":3576,"line_start":60,"line_end":60,"column_start":1,"column_end":101}},{"value":"/ needed when debugging. That way you will never end up with an application that freezes without a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3577,"byte_end":3677,"line_start":61,"line_end":61,"column_start":1,"column_end":101}},{"value":"/ debugger connected.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3678,"byte_end":3701,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3702,"byte_end":3705,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Printing","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3706,"byte_end":3720,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3721,"byte_end":3724,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ For no-hassle output the [`rprint`] and [`rprintln`] macros are provided. They use a single down","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3725,"byte_end":3825,"line_start":66,"line_end":66,"column_start":1,"column_end":101}},{"value":"/ channel defined at initialization time, and a critical section for synchronization, and they","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3826,"byte_end":3922,"line_start":67,"line_end":67,"column_start":1,"column_end":97}},{"value":"/ therefore work exactly like the standard `println` style macros. They can be used from any","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":3923,"byte_end":4017,"line_start":68,"line_end":68,"column_start":1,"column_end":95}},{"value":"/ context. The [`rtt_init_print`] convenience macro initializes printing on channel 0.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4018,"byte_end":4106,"line_start":69,"line_end":69,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4107,"byte_end":4110,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4111,"byte_end":4118,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use rtt_target::{rtt_init_print, rprintln};","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4119,"byte_end":4166,"line_start":72,"line_end":72,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4167,"byte_end":4170,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ fn main() -> ! {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4171,"byte_end":4191,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/     rtt_init_print!();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4192,"byte_end":4218,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/     loop {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4219,"byte_end":4233,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/         rprintln!(\"Hello, world!\");","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4234,"byte_end":4273,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4274,"byte_end":4283,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4284,"byte_end":4289,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4290,"byte_end":4297,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4298,"byte_end":4301,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ The macros also support an extended syntax to print to different RTT virtual terminals.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4302,"byte_end":4393,"line_start":82,"line_end":82,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4394,"byte_end":4397,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Please note that because a critical section is used, printing into a blocking channel will cause","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4398,"byte_end":4498,"line_start":84,"line_end":84,"column_start":1,"column_end":101}},{"value":"/ the application to block and freeze when the buffer is full.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4499,"byte_end":4563,"line_start":85,"line_end":85,"column_start":1,"column_end":65}},{"value":"no_std","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4565,"byte_end":4575,"line_start":87,"line_end":87,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":22},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rtt","qualname":"::rtt","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":60},{"krate":0,"index":69},{"krate":0,"index":196},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":75},{"krate":0,"index":82},{"krate":0,"index":84}],"decl_id":null,"docs":" Public due to access from macro\n This module contains the implementation for the RTT protocol. It's not meant to be used directly\n in user code, and therefore mostly undocumented. The module is only public so that it can be\n accessed from the rtt_init! macro.\n","sig":null,"attributes":[{"value":"/ Public due to access from macro","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4700,"byte_end":4735,"line_start":97,"line_end":97,"column_start":1,"column_end":36}},{"value":"/ This module contains the implementation for the RTT protocol. It's not meant to be used directly","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19056,"byte_end":19156,"line_start":1,"line_end":1,"column_start":1,"column_end":101}},{"value":"/ in user code, and therefore mostly undocumented. The module is only public so that it can be","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19157,"byte_end":19253,"line_start":2,"line_end":2,"column_start":1,"column_end":97}},{"value":"/ accessed from the rtt_init! macro.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19254,"byte_end":19292,"line_start":3,"line_end":3,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19552,"byte_end":19561,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"RttHeader","qualname":"::rtt::RttHeader","value":"RttHeader {  }","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19530,"byte_end":19540,"line_start":12,"line_end":12,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19983,"byte_end":19987,"line_start":28,"line_end":28,"column_start":19,"column_end":23},"name":"init","qualname":"<RttHeader>::init","value":"pub unsafe fn init(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Initializes the control block header.","sig":null,"attributes":[{"value":"/ Initializes the control block header.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19791,"byte_end":19832,"line_start":23,"line_end":23,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19837,"byte_end":19840,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19845,"byte_end":19857,"line_start":25,"line_end":25,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19862,"byte_end":19865,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The arguments must correspond to the sizes of the arrays that follow the header in memory.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19870,"byte_end":19964,"line_start":27,"line_end":27,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":20675,"byte_end":20690,"line_start":46,"line_end":46,"column_start":12,"column_end":27},"name":"max_up_channels","qualname":"<RttHeader>::max_up_channels","value":"pub fn max_up_channels(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":20866,"byte_end":20876,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"RttChannel","qualname":"::rtt::RttChannel","value":"RttChannel {  }","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":20844,"byte_end":20854,"line_start":52,"line_end":52,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":21208,"byte_end":21212,"line_start":68,"line_end":68,"column_start":19,"column_end":23},"name":"init","qualname":"<RttChannel>::init","value":"pub unsafe fn init(&mut Self, *const u8, ChannelMode, *mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Initializes the channel.","sig":null,"attributes":[{"value":"/ Initializes the channel.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":21034,"byte_end":21062,"line_start":63,"line_end":63,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":21067,"byte_end":21070,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":21075,"byte_end":21087,"line_start":65,"line_end":65,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":21092,"byte_end":21095,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The pointer arguments must point to a valid null-terminated name and writable buffer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":21100,"byte_end":21189,"line_start":67,"line_end":67,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":21600,"byte_end":21614,"line_start":77,"line_end":77,"column_start":12,"column_end":26},"name":"is_initialized","qualname":"<RttChannel>::is_initialized","value":"pub fn is_initialized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":119},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28104,"byte_end":28123,"line_start":14,"line_end":14,"column_start":10,"column_end":29},"name":"CriticalSectionFunc","qualname":"::print::CriticalSectionFunc","value":"fn(arg: *mut (), f: fn(arg: *mut ()) -> ()) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Type-erased critical section function used to synchronize printing.","sig":null,"attributes":[{"value":"/ Type-erased critical section function used to synchronize printing.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":27896,"byte_end":27967,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":27968,"byte_end":27971,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When called, the function must establish a critical section and call `f` within it, passing","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":27972,"byte_end":28067,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ `arg` as the argument.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28068,"byte_end":28094,"line_start":13,"line_end":13,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":120},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29442,"byte_end":29462,"line_start":51,"line_end":51,"column_start":15,"column_end":35},"name":"set_print_channel_cs","qualname":"::print::set_print_channel_cs","value":"pub unsafe fn set_print_channel_cs(UpChannel, &'static CriticalSectionFunc)","parent":null,"children":[],"decl_id":null,"docs":" Sets the channel to use for [`rprint`] and [`rprintln`] and the critical section function used\n to synchronize printing. You should only use this function if the [`set_print_channel`] function\n isn't available on your platform.","sig":null,"attributes":[{"value":"/ Sets the channel to use for [`rprint`] and [`rprintln`] and the critical section function used","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28178,"byte_end":28276,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"/ to synchronize printing. You should only use this function if the [`set_print_channel`] function","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28277,"byte_end":28377,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ isn't available on your platform.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28378,"byte_end":28415,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28416,"byte_end":28419,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28420,"byte_end":28433,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28434,"byte_end":28437,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Because the function takes a *static reference to a function pointer* as an argument, the call","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28438,"byte_end":28536,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ requires a manual cast. Luckily Rust will automatically promote a reference to a suitable","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28537,"byte_end":28630,"line_start":23,"line_end":23,"column_start":1,"column_end":94}},{"value":"/ closure to `'static`. In this example, `interrupt::free` is a function that establishes a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28631,"byte_end":28724,"line_start":24,"line_end":24,"column_start":1,"column_end":94}},{"value":"/ critical section and calls the supplied function.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28725,"byte_end":28778,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28779,"byte_end":28782,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28783,"byte_end":28790,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use rtt_target::{rtt_init_detault, rprintln};","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28791,"byte_end":28840,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/ use platform_specific::interrupt;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28841,"byte_end":28878,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28879,"byte_end":28882,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fn main() -> ! {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28883,"byte_end":28903,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/     let channels = rtt_init_detault!();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28904,"byte_end":28947,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28948,"byte_end":28951,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     unsafe {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28952,"byte_end":28968,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/         rtt_target::set_print_channel_cs(","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":28969,"byte_end":29014,"line_start":35,"line_end":35,"column_start":1,"column_end":46}},{"value":"/             channels.up.0,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29015,"byte_end":29045,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/             &((|arg, f| interrupt::free(|_| f(arg))) as rtt_target::CriticalSectionFunc),","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29046,"byte_end":29139,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/         );","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29140,"byte_end":29154,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29155,"byte_end":29164,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29165,"byte_end":29168,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29169,"byte_end":29183,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/         rprintln!(\"Hello, world!\");","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29184,"byte_end":29223,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29224,"byte_end":29233,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29234,"byte_end":29239,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29240,"byte_end":29247,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29248,"byte_end":29251,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29252,"byte_end":29264,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29265,"byte_end":29268,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This function is unsafe because the user must guarantee that the `cs` function pointer passed in","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29269,"byte_end":29369,"line_start":49,"line_end":49,"column_start":1,"column_end":101}},{"value":"/ adheres to the [`CriticalSectionFunc`] specification.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29370,"byte_end":29427,"line_start":50,"line_end":50,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":30072,"byte_end":30089,"line_start":67,"line_end":67,"column_start":8,"column_end":25},"name":"set_print_channel","qualname":"::print::set_print_channel","value":"pub fn set_print_channel(UpChannel)","parent":null,"children":[],"decl_id":null,"docs":" Sets the channel to use for [`rprint`] and [`rprintln`].","sig":null,"attributes":[{"value":"/ Sets the channel to use for [`rprint`] and [`rprintln`].","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29809,"byte_end":29869,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29870,"byte_end":29873,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This function is available only if you have enabled a platform support feature. Otherwise,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29874,"byte_end":29968,"line_start":64,"line_end":64,"column_start":1,"column_end":95}},{"value":"/ [`set_print_channel_cs`] must be used.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":29969,"byte_end":30011,"line_start":65,"line_end":65,"column_start":1,"column_end":43}},{"value":"cfg(any(feature = \"cortex-m\", feature = \"riscv\"))","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":30012,"byte_end":30064,"line_start":66,"line_end":66,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":30452,"byte_end":30462,"line_start":82,"line_end":82,"column_start":9,"column_end":19},"name":"print_impl","qualname":"::print::print_impl","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" Public due to access from macro.\n","sig":null,"attributes":[{"value":"/ Public due to access from macro.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":30392,"byte_end":30428,"line_start":80,"line_end":80,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":31166,"byte_end":31175,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"write_str","qualname":"::print::print_impl::write_str","value":"pub fn write_str(u8, &str)","parent":null,"children":[],"decl_id":null,"docs":" Public due to access from macro.\n","sig":null,"attributes":[{"value":"/ Public due to access from macro.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":31099,"byte_end":31135,"line_start":104,"line_end":104,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":135},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":31360,"byte_end":31369,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"write_fmt","qualname":"::print::print_impl::write_fmt","value":"pub fn write_fmt(u8, fmt::Arguments)","parent":null,"children":[],"decl_id":null,"docs":" Public due to access from macro.\n","sig":null,"attributes":[{"value":"/ Public due to access from macro.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/print.rs","byte_start":31293,"byte_end":31329,"line_start":112,"line_end":112,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":141},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5213,"byte_end":5222,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"UpChannel","qualname":"::UpChannel","value":"","parent":null,"children":[],"decl_id":null,"docs":" RTT up (target to host) channel","sig":null,"attributes":[{"value":"/ RTT up (target to host) channel","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4809,"byte_end":4844,"line_start":106,"line_end":106,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4845,"byte_end":4848,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Supports writing binary data directly, or writing strings via [`core::fmt`] macros such as","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4849,"byte_end":4943,"line_start":108,"line_end":108,"column_start":1,"column_end":95}},{"value":"/ [`write`] as well as the ufmt crate's `uwrite` macros (use the `u` method).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4944,"byte_end":5023,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5024,"byte_end":5027,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Note that the formatted writing implementations diverge slightly from the trait definitions in","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5028,"byte_end":5126,"line_start":111,"line_end":111,"column_start":1,"column_end":99}},{"value":"/ that if the channel is in non-blocking mode, writing will *not* block.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5127,"byte_end":5201,"line_start":112,"line_end":112,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5377,"byte_end":5380,"line_start":120,"line_end":120,"column_start":19,"column_end":22},"name":"new","qualname":"<UpChannel>::new","value":"pub unsafe fn new(*mut rtt::RttChannel) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Public due to access from macro.\n","sig":null,"attributes":[{"value":"/ Public due to access from macro.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5303,"byte_end":5339,"line_start":118,"line_end":118,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5713,"byte_end":5718,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"write","qualname":"<UpChannel>::write","value":"pub fn write(&mut Self, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Writes `buf` to the channel and returns the number of bytes written. Behavior when the\n buffer is full is subject to the channel blocking mode.\n","sig":null,"attributes":[{"value":"/ Writes `buf` to the channel and returns the number of bytes written. Behavior when the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5547,"byte_end":5637,"line_start":128,"line_end":128,"column_start":5,"column_end":95}},{"value":"/ buffer is full is subject to the channel blocking mode.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5642,"byte_end":5701,"line_start":129,"line_end":129,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6209,"byte_end":6210,"line_start":145,"line_end":145,"column_start":12,"column_end":13},"name":"u","qualname":"<UpChannel>::u","value":"pub fn u(&mut Self) -> uWriter","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer for formatted writing with ufmt.","sig":null,"attributes":[{"value":"/ Creates a writer for formatted writing with ufmt.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5865,"byte_end":5918,"line_start":136,"line_end":136,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5923,"byte_end":5926,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ The correct way to use this method is to call it once for each write operation. This is so","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5931,"byte_end":6025,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ that non blocking modes will work correctly.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6030,"byte_end":6078,"line_start":139,"line_end":139,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6083,"byte_end":6086,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6091,"byte_end":6098,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ let mut output = channels.up.0;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6103,"byte_end":6138,"line_start":142,"line_end":142,"column_start":5,"column_end":40}},{"value":"/ uwriteln!(output.u(), \"Hello, ufmt!\");","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6143,"byte_end":6185,"line_start":143,"line_end":143,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6190,"byte_end":6197,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6379,"byte_end":6383,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"mode","qualname":"<UpChannel>::mode","value":"pub fn mode(&Self) -> ChannelMode","parent":null,"children":[],"decl_id":null,"docs":" Gets the current blocking mode of the channel. The default is `NoBlockSkip`.\n","sig":null,"attributes":[{"value":"/ Gets the current blocking mode of the channel. The default is `NoBlockSkip`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6287,"byte_end":6367,"line_start":149,"line_end":149,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6502,"byte_end":6510,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"set_mode","qualname":"<UpChannel>::set_mode","value":"pub fn set_mode(&mut Self, ChannelMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets the blocking mode of the channel\n","sig":null,"attributes":[{"value":"/ Sets the blocking mode of the channel","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6449,"byte_end":6490,"line_start":154,"line_end":154,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6722,"byte_end":6735,"line_start":161,"line_end":161,"column_start":12,"column_end":25},"name":"into_terminal","qualname":"<UpChannel>::into_terminal","value":"pub fn into_terminal(Self) -> TerminalChannel","parent":null,"children":[],"decl_id":null,"docs":" Converts the channel into a virtual terminal that can be used for writing into multiple\n virtual terminals.\n","sig":null,"attributes":[{"value":"/ Converts the channel into a virtual terminal that can be used for writing into multiple","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6592,"byte_end":6683,"line_start":159,"line_end":159,"column_start":5,"column_end":96}},{"value":"/ virtual terminals.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6688,"byte_end":6710,"line_start":160,"line_end":160,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":7402,"byte_end":7409,"line_start":175,"line_end":175,"column_start":19,"column_end":26},"name":"conjure","qualname":"<UpChannel>::conjure","value":"pub unsafe fn conjure(usize) -> Option<UpChannel>","parent":null,"children":[],"decl_id":null,"docs":" Magically creates a channel out of thin air. Return `None` if the channel number is too\n high, or if the channel has not been initialized.","sig":null,"attributes":[{"value":"/ Magically creates a channel out of thin air. Return `None` if the channel number is too","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6809,"byte_end":6900,"line_start":165,"line_end":165,"column_start":5,"column_end":96}},{"value":"/ high, or if the channel has not been initialized.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6905,"byte_end":6958,"line_start":166,"line_end":166,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6963,"byte_end":6966,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Calling this function will cause a linking error if `rtt_init` has not been called.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":6971,"byte_end":7058,"line_start":168,"line_end":168,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":7063,"byte_end":7066,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":7071,"byte_end":7083,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":7088,"byte_end":7091,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ It's undefined behavior for something else to access the channel through anything else","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":7096,"byte_end":7186,"line_start":172,"line_end":172,"column_start":5,"column_end":95}},{"value":"/ besides the returned object during or after calling this function. Essentially this function","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":7191,"byte_end":7287,"line_start":173,"line_end":173,"column_start":5,"column_end":101}},{"value":"/ is only safe to use in panic handlers and the like that permanently disable interrupts.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":7292,"byte_end":7383,"line_start":174,"line_end":174,"column_start":5,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":159},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8449,"byte_end":8456,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"uWriter","qualname":"::uWriter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Writer for ufmt. Don't store an instance of this, but rather create a new one for every write.\n","sig":null,"attributes":[{"value":"/ Writer for ufmt. Don't store an instance of this, but rather create a new one for every write.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8308,"byte_end":8406,"line_start":207,"line_end":207,"column_start":1,"column_end":99}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8407,"byte_end":8437,"line_start":208,"line_end":208,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8718,"byte_end":8729,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"DownChannel","qualname":"::DownChannel","value":"","parent":null,"children":[],"decl_id":null,"docs":" RTT down (host to target) channel\n","sig":null,"attributes":[{"value":"/ RTT down (host to target) channel","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8669,"byte_end":8706,"line_start":220,"line_end":220,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8888,"byte_end":8891,"line_start":228,"line_end":228,"column_start":19,"column_end":22},"name":"new","qualname":"<DownChannel>::new","value":"pub unsafe fn new(*mut rtt::RttChannel) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Public due to access from macro.\n","sig":null,"attributes":[{"value":"/ Public due to access from macro.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8814,"byte_end":8850,"line_start":226,"line_end":226,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9197,"byte_end":9201,"line_start":238,"line_end":238,"column_start":12,"column_end":16},"name":"read","qualname":"<DownChannel>::read","value":"pub fn read(&mut Self, &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Reads up to `buf.len()` bytes from the channel and return the number of bytes read. This\n method never blocks.\n","sig":null,"attributes":[{"value":"/ Reads up to `buf.len()` bytes from the channel and return the number of bytes read. This","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9064,"byte_end":9156,"line_start":236,"line_end":236,"column_start":5,"column_end":97}},{"value":"/ method never blocks.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9161,"byte_end":9185,"line_start":237,"line_end":237,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":210},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9520,"byte_end":9531,"line_start":248,"line_end":248,"column_start":5,"column_end":16},"name":"NoBlockSkip","qualname":"::ChannelMode::NoBlockSkip","value":"ChannelMode::NoBlockSkip","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Skip writing the data completely if it doesn't fit in its entirety.\n","sig":null,"attributes":[{"value":"/ Skip writing the data completely if it doesn't fit in its entirety.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9444,"byte_end":9515,"line_start":247,"line_end":247,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9609,"byte_end":9620,"line_start":251,"line_end":251,"column_start":5,"column_end":16},"name":"NoBlockTrim","qualname":"::ChannelMode::NoBlockTrim","value":"ChannelMode::NoBlockTrim","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Write as much as possible of the data and ignore the rest.\n","sig":null,"attributes":[{"value":"/ Write as much as possible of the data and ignore the rest.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9542,"byte_end":9604,"line_start":250,"line_end":250,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":216},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9829,"byte_end":9840,"line_start":256,"line_end":256,"column_start":5,"column_end":16},"name":"BlockIfFull","qualname":"::ChannelMode::BlockIfFull","value":"ChannelMode::BlockIfFull","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Block (spin) if the buffer is full. If within a critical section such as inside\n [`rprintln`], this will cause the application to freeze until the host reads from the\n buffer.\n","sig":null,"attributes":[{"value":"/ Block (spin) if the buffer is full. If within a critical section such as inside","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9631,"byte_end":9714,"line_start":253,"line_end":253,"column_start":5,"column_end":88}},{"value":"/ [`rprintln`], this will cause the application to freeze until the host reads from the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9719,"byte_end":9808,"line_start":254,"line_end":254,"column_start":5,"column_end":94}},{"value":"/ buffer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9813,"byte_end":9824,"line_start":255,"line_end":255,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":209},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9426,"byte_end":9437,"line_start":246,"line_end":246,"column_start":10,"column_end":21},"name":"ChannelMode","qualname":"::ChannelMode","value":"pub enum ChannelMode { NoBlockSkip = , NoBlockTrim = , BlockIfFull = , }","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216}],"decl_id":null,"docs":" Specifies what to do when a channel doesn't have enough buffer space for a complete write.\n","sig":null,"attributes":[{"value":"/ Specifies what to do when a channel doesn't have enough buffer space for a complete write.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9282,"byte_end":9376,"line_start":243,"line_end":243,"column_start":1,"column_end":95}},{"value":"repr(usize)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9402,"byte_end":9416,"line_start":245,"line_end":245,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":174},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10532,"byte_end":10547,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"TerminalChannel","qualname":"::TerminalChannel","value":"TerminalChannel {  }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"decl_id":null,"docs":" An up channel that supports writing into multiple virtual terminals within the same buffer.","sig":null,"attributes":[{"value":"/ An up channel that supports writing into multiple virtual terminals within the same buffer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9849,"byte_end":9944,"line_start":259,"line_end":259,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9945,"byte_end":9948,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ An [`UpChannel`] can be turned into a `TerminalChannel` by using the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":9949,"byte_end":10021,"line_start":261,"line_end":261,"column_start":1,"column_end":73}},{"value":"/ [`into_terminal`](UpChannel::into_terminal()) method.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10022,"byte_end":10079,"line_start":262,"line_end":262,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10080,"byte_end":10083,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ Virtual terminals allow you to share one buffer for writing multiple streams. The virtual","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10084,"byte_end":10177,"line_start":264,"line_end":264,"column_start":1,"column_end":94}},{"value":"/ terminals number from 0 to 15 and are implemented with a simple \"terminal switch\" sequence on","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10178,"byte_end":10275,"line_start":265,"line_end":265,"column_start":1,"column_end":98}},{"value":"/ the fly, so there is no need to declare them in advance. You could, for example, use different","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10276,"byte_end":10374,"line_start":266,"line_end":266,"column_start":1,"column_end":99}},{"value":"/ terminal numbers for messages of different priorities to separate them in a viewer program.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10375,"byte_end":10470,"line_start":267,"line_end":267,"column_start":1,"column_end":96}},{"value":"/ Printing uses a `TerminalChannel` internally.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10471,"byte_end":10520,"line_start":268,"line_end":268,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":11109,"byte_end":11114,"line_start":288,"line_end":288,"column_start":12,"column_end":17},"name":"write","qualname":"<TerminalChannel>::write","value":"pub fn write(&mut Self, u8) -> TerminalWriter","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer to write a message to the virtual terminal specified by `number`.","sig":null,"attributes":[{"value":"/ Creates a writer to write a message to the virtual terminal specified by `number`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10750,"byte_end":10836,"line_start":282,"line_end":282,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10841,"byte_end":10844,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The correct way to use this method is to call it once for each write operation. This is so","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10849,"byte_end":10943,"line_start":284,"line_end":284,"column_start":5,"column_end":99}},{"value":"/ that non blocking modes will work correctly.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10948,"byte_end":10996,"line_start":285,"line_end":285,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":11001,"byte_end":11004,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ The writer supports formatted writing with the standard `write` and ufmt's `uwrite`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":11009,"byte_end":11097,"line_start":287,"line_end":287,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":11971,"byte_end":11975,"line_start":315,"line_end":315,"column_start":12,"column_end":16},"name":"mode","qualname":"<TerminalChannel>::mode","value":"pub fn mode(&Self) -> ChannelMode","parent":null,"children":[],"decl_id":null,"docs":" Gets the current blocking mode of the channel. The default is `NoBlockSkip`.\n","sig":null,"attributes":[{"value":"/ Gets the current blocking mode of the channel. The default is `NoBlockSkip`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":11879,"byte_end":11959,"line_start":314,"line_end":314,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":12092,"byte_end":12100,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"set_mode","qualname":"<TerminalChannel>::set_mode","value":"pub fn set_mode(&mut Self, ChannelMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets the blocking mode of the channel\n","sig":null,"attributes":[{"value":"/ Sets the blocking mode of the channel","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":12039,"byte_end":12080,"line_start":319,"line_end":319,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":184},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":12304,"byte_end":12318,"line_start":327,"line_end":327,"column_start":12,"column_end":26},"name":"TerminalWriter","qualname":"::TerminalWriter","value":"TerminalWriter {  }","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Formatted writing operation. Don't store an instance of this, but rather create a new one for\n every write.\n","sig":null,"attributes":[{"value":"/ Formatted writing operation. Don't store an instance of this, but rather create a new one for","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":12178,"byte_end":12275,"line_start":325,"line_end":325,"column_start":1,"column_end":98}},{"value":"/ every write.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":12276,"byte_end":12292,"line_start":326,"line_end":326,"column_start":1,"column_end":17}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19775,"byte_end":19784,"line_start":22,"line_end":22,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":21017,"byte_end":21027,"line_start":62,"line_end":62,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":24527,"byte_end":24536,"line_start":189,"line_end":189,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":27297,"byte_end":27306,"line_start":278,"line_end":278,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":27395,"byte_end":27404,"line_start":284,"line_end":284,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5268,"byte_end":5277,"line_start":115,"line_end":115,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5287,"byte_end":5296,"line_start":117,"line_end":117,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8040,"byte_end":8049,"line_start":197,"line_end":197,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8499,"byte_end":8506,"line_start":211,"line_end":211,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8775,"byte_end":8786,"line_start":223,"line_end":223,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8796,"byte_end":8807,"line_start":225,"line_end":225,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10599,"byte_end":10614,"line_start":274,"line_end":274,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":12421,"byte_end":12435,"line_start":333,"line_end":333,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":12588,"byte_end":12602,"line_start":340,"line_end":340,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":12784,"byte_end":12798,"line_start":349,"line_end":349,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":4759,"byte_end":4762,"line_start":99,"line_end":99,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":22}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":19775,"byte_end":19784,"line_start":22,"line_end":22,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":21017,"byte_end":21027,"line_start":62,"line_end":62,"column_start":6,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":24527,"byte_end":24536,"line_start":189,"line_end":189,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":27297,"byte_end":27306,"line_start":278,"line_end":278,"column_start":15,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":69},"to":{"krate":1,"index":3258}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/rtt.rs","byte_start":27395,"byte_end":27404,"line_start":284,"line_end":284,"column_start":21,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":69},"to":{"krate":1,"index":9509}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5268,"byte_end":5277,"line_start":115,"line_end":115,"column_start":22,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":141},"to":{"krate":1,"index":3019}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":5287,"byte_end":5296,"line_start":117,"line_end":117,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8040,"byte_end":8049,"line_start":197,"line_end":197,"column_start":21,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":141},"to":{"krate":1,"index":9509}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8499,"byte_end":8506,"line_start":211,"line_end":211,"column_start":17,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":159},"to":{"krate":4,"index":6}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8775,"byte_end":8786,"line_start":223,"line_end":223,"column_start":22,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":166},"to":{"krate":1,"index":3019}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":8796,"byte_end":8807,"line_start":225,"line_end":225,"column_start":6,"column_end":17},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":10599,"byte_end":10614,"line_start":274,"line_end":274,"column_start":6,"column_end":21},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":12421,"byte_end":12435,"line_start":333,"line_end":333,"column_start":21,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":9509}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":12588,"byte_end":12602,"line_start":340,"line_end":340,"column_start":17,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":184},"to":{"krate":4,"index":6}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/rtt-target-0.3.1/src/lib.rs","byte_start":12784,"byte_end":12798,"line_start":349,"line_end":349,"column_start":15,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":3258}}]}