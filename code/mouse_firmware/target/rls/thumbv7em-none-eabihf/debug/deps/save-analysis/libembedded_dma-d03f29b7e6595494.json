{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0","program":"/home/s7rul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","embedded_dma","--edition=2018","/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=1","-C","debuginfo=2","-C","metadata=d03f29b7e6595494","-C","extra-filename=-d03f29b7e6595494","--out-dir","/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/debug/deps","--extern","stable_deref_trait=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libstable_deref_trait-394935f4c29531d2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/s7rul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_dma-d03f29b7e6595494.rmeta"},"prelude":{"crate_id":{"name":"embedded_dma","disambiguator":[928143002955384479,0]},"crate_root":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src","external_crates":[{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11850898037736144901,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4266445326248464732,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10236682895667522671,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","num":4,"id":{"name":"stable_deref_trait","disambiguator":[17122422275466883217,0]}}],"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":0,"byte_end":7224,"line_start":1,"line_end":237,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":0,"byte_end":7224,"line_start":1,"line_end":237,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":33},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":70},{"krate":0,"index":75}],"decl_id":null,"docs":" Traits to aid the correct use of buffers in DMA abstractions.","sig":null,"attributes":[{"value":"/ Traits to aid the correct use of buffers in DMA abstractions.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":66,"byte_end":69,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library provides the [`ReadBuffer`] and [`WriteBuffer`] unsafe traits to be used as bounds to","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":70,"byte_end":172,"line_start":3,"line_end":3,"column_start":1,"column_end":103}},{"value":"/ buffers types used in DMA operations.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":173,"byte_end":214,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":215,"byte_end":218,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are some subtleties to the extent of the guarantees provided by these traits, all of these","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":219,"byte_end":319,"line_start":6,"line_end":6,"column_start":1,"column_end":101}},{"value":"/ subtleties are properly documented in the safety requirements in this crate. However, as a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":320,"byte_end":414,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ measure of redundancy, some are listed below:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":415,"byte_end":464,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":465,"byte_end":468,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * The traits only guarantee a stable location while no `&mut self` methods are called upon","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":469,"byte_end":563,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ `Self` (with the exception of [`write_buffer`](trait.WriteBuffer.html#tymethod.write_buffer) in","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":564,"byte_end":663,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ our case). This is to allow types like `Vec`, this restriction doesn't apply to `Self::Target`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":664,"byte_end":763,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":764,"byte_end":767,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * [`ReadBuffer`] and [`WriteBuffer`] guarantee a stable location for as long as the DMA transfer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":768,"byte_end":868,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ occurs. Given the intrinsics of `mem::forget` and the Rust language itself, a","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":869,"byte_end":950,"line_start":15,"line_end":15,"column_start":1,"column_end":82}},{"value":"/ 'static lifetime is usually required.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":951,"byte_end":992,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":993,"byte_end":996,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The above list is not exhaustive, for a complete set of requirements and guarantees, the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":997,"byte_end":1089,"line_start":18,"line_end":18,"column_start":1,"column_end":93}},{"value":"/ documentation of each trait and method should be analyzed.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1090,"byte_end":1152,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"no_std","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1153,"byte_end":1163,"line_start":20,"line_end":20,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1854,"byte_end":1864,"line_start":40,"line_end":40,"column_start":18,"column_end":28},"name":"ReadBuffer","qualname":"::ReadBuffer","value":"ReadBuffer","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for reading.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for reading.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1276,"byte_end":1335,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1336,"byte_end":1339,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1340,"byte_end":1352,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1353,"byte_end":1356,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The implementing type must be safe to use for DMA reads. This means:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1357,"byte_end":1429,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1430,"byte_end":1433,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - It must be a pointer that references the actual buffer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1434,"byte_end":1495,"line_start":34,"line_end":34,"column_start":1,"column_end":62}},{"value":"/ - As long as no `&mut self` method is called on the implementing object:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1496,"byte_end":1572,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/   - `read_buffer` must always return the same value, if called multiple","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1573,"byte_end":1648,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/     times.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1649,"byte_end":1663,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/   - The memory specified by the pointer and size returned by `read_buffer`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1664,"byte_end":1742,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/     must not be freed during the transfer it is used in as long as `self` is not dropped.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1743,"byte_end":1836,"line_start":39,"line_end":39,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1876,"byte_end":1880,"line_start":41,"line_end":41,"column_start":10,"column_end":14},"name":"Word","qualname":"::ReadBuffer::Word","value":"type Word;","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2258,"byte_end":2269,"line_start":54,"line_end":54,"column_start":15,"column_end":26},"name":"read_buffer","qualname":"::ReadBuffer::read_buffer","value":"pub unsafe fn read_buffer(&Self) -> (*const Self::Word, usize)","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA reads.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA reads.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1887,"byte_end":1929,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1934,"byte_end":1937,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1942,"byte_end":1966,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1971,"byte_end":1974,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":1979,"byte_end":2019,"line_start":47,"line_end":47,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2024,"byte_end":2050,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2055,"byte_end":2058,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2063,"byte_end":2075,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2080,"byte_end":2083,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2088,"byte_end":2162,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ methods on this object as long as the returned value is in use (by DMA).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2167,"byte_end":2243,"line_start":53,"line_end":53,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2987,"byte_end":2998,"line_start":71,"line_end":71,"column_start":18,"column_end":29},"name":"WriteBuffer","qualname":"::WriteBuffer","value":"WriteBuffer","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for writing.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for writing.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2311,"byte_end":2370,"line_start":57,"line_end":57,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2371,"byte_end":2374,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2375,"byte_end":2387,"line_start":59,"line_end":59,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2388,"byte_end":2391,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ The implementing type must be safe to use for DMA writes. This means:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2392,"byte_end":2465,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2466,"byte_end":2469,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ - It must be a pointer that references the actual buffer.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2470,"byte_end":2531,"line_start":63,"line_end":63,"column_start":1,"column_end":62}},{"value":"/ - `Target` must be a type that is valid for any possible byte pattern.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2532,"byte_end":2606,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ - As long as no `&mut self` method, except for `write_buffer`, is called on","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2607,"byte_end":2686,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/   the implementing object:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2687,"byte_end":2717,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/   - `write_buffer` must always return the same value, if called multiple","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2718,"byte_end":2794,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/     times.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2795,"byte_end":2809,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/   - The memory specified by the pointer and size returned by `write_buffer`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2810,"byte_end":2889,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/     must not be freed during the transfer as long as `self` is not dropped.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":2890,"byte_end":2969,"line_start":70,"line_end":70,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":26},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3010,"byte_end":3014,"line_start":72,"line_end":72,"column_start":10,"column_end":14},"name":"Word","qualname":"::WriteBuffer::Word","value":"type Word;","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3429,"byte_end":3441,"line_start":86,"line_end":86,"column_start":15,"column_end":27},"name":"write_buffer","qualname":"::WriteBuffer::write_buffer","value":"pub unsafe fn write_buffer(&mut Self) -> (*mut Self::Word, usize)","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA writes.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA writes.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3021,"byte_end":3064,"line_start":74,"line_end":74,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3069,"byte_end":3072,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3077,"byte_end":3101,"line_start":76,"line_end":76,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3106,"byte_end":3109,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3114,"byte_end":3154,"line_start":78,"line_end":78,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3159,"byte_end":3185,"line_start":79,"line_end":79,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3190,"byte_end":3193,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3198,"byte_end":3210,"line_start":81,"line_end":81,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3215,"byte_end":3218,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3223,"byte_end":3297,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ methods, except for `write_buffer`, on this object as long as the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3302,"byte_end":3371,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ returned value is in use (by DMA).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3376,"byte_end":3414,"line_start":85,"line_end":85,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4349,"byte_end":4353,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"name":"Word","qualname":"::Word","value":"Word","parent":null,"children":[],"decl_id":null,"docs":" Trait for DMA word types used by the blanket DMA buffer impls.","sig":null,"attributes":[{"value":"/ Trait for DMA word types used by the blanket DMA buffer impls.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4053,"byte_end":4119,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4120,"byte_end":4123,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4124,"byte_end":4136,"line_start":117,"line_end":117,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4137,"byte_end":4140,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ Types that implement this trait must be valid for every possible byte","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4141,"byte_end":4214,"line_start":119,"line_end":119,"column_start":1,"column_end":74}},{"value":"/ pattern. This is to ensure that, whatever DMA writes into the buffer,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4215,"byte_end":4288,"line_start":120,"line_end":120,"column_start":1,"column_end":74}},{"value":"/ we won't get UB due to invalid values.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4289,"byte_end":4331,"line_start":121,"line_end":121,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4903,"byte_end":4913,"line_start":142,"line_end":142,"column_start":18,"column_end":28},"name":"ReadTarget","qualname":"::ReadTarget","value":"ReadTarget","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" Trait for `Deref` targets used by the blanket `DmaReadBuffer` impl.","sig":null,"attributes":[{"value":"/ Trait for `Deref` targets used by the blanket `DmaReadBuffer` impl.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4581,"byte_end":4652,"line_start":133,"line_end":133,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4653,"byte_end":4656,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This trait exists solely to work around","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4657,"byte_end":4700,"line_start":135,"line_end":135,"column_start":1,"column_end":44}},{"value":"/ https://github.com/rust-lang/rust/issues/20400.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4701,"byte_end":4752,"line_start":136,"line_end":136,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4753,"byte_end":4756,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4757,"byte_end":4769,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4770,"byte_end":4773,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ - `as_read_buffer` must adhere to the safety requirements","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4774,"byte_end":4835,"line_start":140,"line_end":140,"column_start":1,"column_end":62}},{"value":"/   documented for [`ReadBuffer::read_buffer`].","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4836,"byte_end":4885,"line_start":141,"line_end":141,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4925,"byte_end":4929,"line_start":143,"line_end":143,"column_start":10,"column_end":14},"name":"Word","qualname":"::ReadTarget::Word","value":"type Word: Word;","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":4945,"byte_end":4959,"line_start":145,"line_end":145,"column_start":8,"column_end":22},"name":"as_read_buffer","qualname":"::ReadTarget::as_read_buffer","value":"pub fn as_read_buffer(&Self) -> (*const Self::Word, usize)","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5486,"byte_end":5497,"line_start":161,"line_end":161,"column_start":18,"column_end":29},"name":"WriteTarget","qualname":"::WriteTarget","value":"WriteTarget","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" Trait for `DerefMut` targets used by the blanket `DmaWriteBuffer` impl.","sig":null,"attributes":[{"value":"/ Trait for `DerefMut` targets used by the blanket `DmaWriteBuffer` impl.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5157,"byte_end":5232,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5233,"byte_end":5236,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ This trait exists solely to work around","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5237,"byte_end":5280,"line_start":154,"line_end":154,"column_start":1,"column_end":44}},{"value":"/ https://github.com/rust-lang/rust/issues/20400.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5281,"byte_end":5332,"line_start":155,"line_end":155,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5333,"byte_end":5336,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5337,"byte_end":5349,"line_start":157,"line_end":157,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5350,"byte_end":5353,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ - `as_write_buffer` must adhere to the safety requirements","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5354,"byte_end":5416,"line_start":159,"line_end":159,"column_start":1,"column_end":63}},{"value":"/   documented for [`WriteBuffer::write_buffer`].","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5417,"byte_end":5468,"line_start":160,"line_end":160,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5509,"byte_end":5513,"line_start":162,"line_end":162,"column_start":10,"column_end":14},"name":"Word","qualname":"::WriteTarget::Word","value":"type Word: Word;","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5529,"byte_end":5544,"line_start":164,"line_end":164,"column_start":8,"column_end":23},"name":"as_write_buffer","qualname":"::WriteTarget::as_write_buffer","value":"pub fn as_write_buffer(&mut Self) -> (*mut Self::Word, usize)","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3575,"byte_end":3576,"line_start":91,"line_end":91,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3827,"byte_end":3828,"line_start":103,"line_end":103,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5776,"byte_end":5777,"line_start":171,"line_end":171,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5839,"byte_end":5840,"line_start":175,"line_end":175,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":6255,"byte_end":6266,"line_start":195,"line_end":195,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3575,"byte_end":3576,"line_start":91,"line_end":91,"column_start":34,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":29},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":3827,"byte_end":3828,"line_start":103,"line_end":103,"column_start":35,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":34},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5776,"byte_end":5777,"line_start":171,"line_end":171,"column_start":37,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":54},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":5839,"byte_end":5840,"line_start":175,"line_end":175,"column_start":38,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":57},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.2.0/src/lib.rs","byte_start":6255,"byte_end":6266,"line_start":195,"line_end":195,"column_start":45,"column_end":56},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":23683},"to":{"krate":0,"index":50}}]}