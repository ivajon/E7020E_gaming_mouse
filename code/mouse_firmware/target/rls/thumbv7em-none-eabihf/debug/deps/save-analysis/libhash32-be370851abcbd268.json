{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1","program":"/home/s7rul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","hash32","/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=1","-C","debuginfo=2","-C","metadata=be370851abcbd268","-C","extra-filename=-be370851abcbd268","--out-dir","/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/debug/deps","--extern","byteorder=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libbyteorder-815e6f2956fcf262.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/s7rul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libhash32-be370851abcbd268.rmeta"},"prelude":{"crate_id":{"name":"hash32","disambiguator":[10279002970035885114,0]},"crate_root":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src","external_crates":[{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11850898037736144901,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4266445326248464732,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10236682895667522671,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","num":4,"id":{"name":"byteorder","disambiguator":[17067121789010249786,0]}}],"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":0,"byte_end":8801,"line_start":1,"line_end":363,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2351,"byte_end":2357,"line_start":75,"line_end":75,"column_start":14,"column_end":20},"alias_span":null,"name":"FnvHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2389,"byte_end":2395,"line_start":76,"line_end":76,"column_start":18,"column_end":24},"alias_span":null,"name":"Murmur3Hasher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":0,"byte_end":8801,"line_start":1,"line_end":363,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":34},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":110},{"krate":0,"index":162},{"krate":0,"index":168},{"krate":0,"index":174},{"krate":0,"index":180},{"krate":0,"index":186},{"krate":0,"index":192},{"krate":0,"index":198},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":216},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":222},{"krate":0,"index":227},{"krate":0,"index":232},{"krate":0,"index":237},{"krate":0,"index":242},{"krate":0,"index":247},{"krate":0,"index":252},{"krate":0,"index":257},{"krate":0,"index":262},{"krate":0,"index":267},{"krate":0,"index":272},{"krate":0,"index":277},{"krate":0,"index":282},{"krate":0,"index":287},{"krate":0,"index":292},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":307},{"krate":0,"index":312},{"krate":0,"index":317},{"krate":0,"index":322},{"krate":0,"index":327},{"krate":0,"index":332},{"krate":0,"index":337},{"krate":0,"index":342},{"krate":0,"index":347},{"krate":0,"index":352},{"krate":0,"index":357},{"krate":0,"index":362},{"krate":0,"index":367},{"krate":0,"index":372},{"krate":0,"index":377},{"krate":0,"index":382},{"krate":0,"index":125},{"krate":0,"index":130},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":387},{"krate":0,"index":391},{"krate":0,"index":396},{"krate":0,"index":402},{"krate":0,"index":409},{"krate":0,"index":417},{"krate":0,"index":426},{"krate":0,"index":436},{"krate":0,"index":447},{"krate":0,"index":459},{"krate":0,"index":472},{"krate":0,"index":486}],"decl_id":null,"docs":" 32-bit hashing machinery","sig":null,"attributes":[{"value":"/ 32-bit hashing machinery","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":0,"byte_end":28,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":29,"byte_end":32,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Why?","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":33,"byte_end":43,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":44,"byte_end":47,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Because 32-bit architectures are a thing (e.g. ARM Cortex-M) and you don't want your hashing","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":48,"byte_end":144,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ function to pull in a bunch of slow 64-bit compiler intrinsics (software implementations of","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":145,"byte_end":240,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ 64-bit operations).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":241,"byte_end":264,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":265,"byte_end":268,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Relationship to `core::hash`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":269,"byte_end":303,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":304,"byte_end":307,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This crate exposes the same interfaces you'll find in [`core::hash`]: `Hash`, `Hasher`,","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":308,"byte_end":399,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ `BuildHasher` and `BuildHasherDefault`. The main difference is that `hash32::Hasher::finish`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":400,"byte_end":496,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ returns a `u32` instead of `u64`, and the contract of `hash32::Hasher` forbids the implementer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":497,"byte_end":595,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ from performing 64-bit (or 128-bit) operations while computing the hash.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":596,"byte_end":672,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":673,"byte_end":676,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`core::hash`]: https://doc.rust-lang.org/std/hash/index.html","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":677,"byte_end":742,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":743,"byte_end":746,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # `#[derive(Hash32)]`","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":747,"byte_end":772,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":773,"byte_end":776,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The easiest way to implement `hash32::Hash` for a `struct` is to use the `#[derive(Hash32)]`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":777,"byte_end":874,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":875,"byte_end":878,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that you need to *explicitly* depend on both `hash32` *and* `hash32_derive`; both crates","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":879,"byte_end":976,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ must appear in your `Cargo.toml`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":977,"byte_end":1014,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1015,"byte_end":1018,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ``` ignore","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1019,"byte_end":1033,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/ use hash32_derive::Hash32;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1034,"byte_end":1064,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1065,"byte_end":1068,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[derive(Hash32)]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1069,"byte_end":1090,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/ struct Ipv4Addr([u8; 4]);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1091,"byte_end":1120,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1121,"byte_end":1124,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # fn main() {}","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1125,"byte_end":1143,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1144,"byte_end":1147,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1148,"byte_end":1155,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # Hashers","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1156,"byte_end":1169,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1170,"byte_end":1173,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This crate provides implementations of the following 32-bit hashing algorithms:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1174,"byte_end":1257,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1258,"byte_end":1261,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - [Fowler-Noll-Vo](struct.FnvHasher.html)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1262,"byte_end":1307,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/ - [MurmurHash3](struct.Murmur3Hasher.html)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1308,"byte_end":1354,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1355,"byte_end":1358,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # MSRV","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1359,"byte_end":1369,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1370,"byte_end":1373,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This crate is guaranteed to compile on latest stable Rust. It *might* compile on older","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1374,"byte_end":1464,"line_start":43,"line_end":43,"column_start":1,"column_end":91}},{"value":"/ versions but that may change in any new patch release.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1465,"byte_end":1523,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1524,"byte_end":1527,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Future","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1528,"byte_end":1540,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1541,"byte_end":1544,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ In the future we'd like to deprecate this crate in favor of making `core::hash::Hasher` generic","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1545,"byte_end":1644,"line_start":48,"line_end":48,"column_start":1,"column_end":100}},{"value":"/ over the size of the computed hash. Below is shown the planned change (but it doesn't work due","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1645,"byte_end":1743,"line_start":49,"line_end":49,"column_start":1,"column_end":99}},{"value":"/ to limitations in the `associated_type_defaults` feature):","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1744,"byte_end":1806,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1807,"byte_end":1810,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ``` ignore","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1811,"byte_end":1825,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ #![feature(associated_type_defaults)]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1826,"byte_end":1867,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1868,"byte_end":1871,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ trait Hasher {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1872,"byte_end":1890,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/     type Hash = u64; // default type for backwards compatibility","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1891,"byte_end":1959,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     fn finish(&self) -> Self::Hash; // changed","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":1964,"byte_end":2014,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/     fn write(&mut self, bytes: &[u8]);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2015,"byte_end":2057,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2058,"byte_end":2063,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2064,"byte_end":2071,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2072,"byte_end":2075,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ With this change a single `#[derive(Hash)]` would enough to make a type hashable with 32-bit and","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2076,"byte_end":2176,"line_start":63,"line_end":63,"column_start":1,"column_end":101}},{"value":"/ 64-bit hashers.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2177,"byte_end":2196,"line_start":64,"line_end":64,"column_start":1,"column_end":20}},{"value":"deny(missing_docs)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2198,"byte_end":2220,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"deny(warnings)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2221,"byte_end":2239,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"no_std","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2240,"byte_end":2250,"line_start":68,"line_end":68,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":27},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/fnv.rs","byte_start":8909,"byte_end":8915,"line_start":5,"line_end":5,"column_start":12,"column_end":18},"name":"Hasher","qualname":"::fnv::Hasher","value":"Hasher {  }","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" 32-bit Fowler-Noll-Vo hasher\n","sig":null,"attributes":[{"value":"/ 32-bit Fowler-Noll-Vo hasher","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/fnv.rs","byte_start":8865,"byte_end":8897,"line_start":4,"line_end":4,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":9429,"byte_end":9435,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Hasher","qualname":"::murmur3::Hasher","value":"Hasher {  }","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"decl_id":null,"docs":" 32-bit MurmurHash3 hasher\n","sig":null,"attributes":[{"value":"/ 32-bit MurmurHash3 hasher","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":9388,"byte_end":9417,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2587,"byte_end":2605,"line_start":84,"line_end":84,"column_start":12,"column_end":30},"name":"BuildHasherDefault","qualname":"::BuildHasherDefault","value":"BuildHasherDefault {  }","parent":null,"children":[{"krate":0,"index":77}],"decl_id":null,"docs":" See [`core::hash::BuildHasherDefault`][0] for details","sig":null,"attributes":[{"value":"/ See [`core::hash::BuildHasherDefault`][0] for details","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2438,"byte_end":2495,"line_start":81,"line_end":81,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2496,"byte_end":2499,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [0]: https://doc.rust-lang.org/core/hash/struct.BuildHasherDefault.html","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2500,"byte_end":2575,"line_start":83,"line_end":83,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3444,"byte_end":3447,"line_start":129,"line_end":129,"column_start":18,"column_end":21},"name":"new","qualname":"<BuildHasherDefault<H>>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" `const` constructor\n","sig":null,"attributes":[{"value":"/ `const` constructor","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3403,"byte_end":3426,"line_start":128,"line_end":128,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":99},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3851,"byte_end":3862,"line_start":150,"line_end":150,"column_start":11,"column_end":22},"name":"BuildHasher","qualname":"::BuildHasher","value":"BuildHasher","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"decl_id":null,"docs":" See [`core::hash::BuildHasher`][0] for details","sig":null,"attributes":[{"value":"/ See [`core::hash::BuildHasher`][0] for details","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3718,"byte_end":3768,"line_start":147,"line_end":147,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3769,"byte_end":3772,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ [0]: https://doc.rust-lang.org/core/hash/trait.BuildHasher.html","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3773,"byte_end":3840,"line_start":149,"line_end":149,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":100},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4026,"byte_end":4032,"line_start":154,"line_end":154,"column_start":10,"column_end":16},"name":"Hasher","qualname":"::BuildHasher::Hasher","value":"type Hasher: Hasher;","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" See [`core::hash::BuildHasher::Hasher`][0]","sig":null,"attributes":[{"value":"/ See [`core::hash::BuildHasher::Hasher`][0]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3869,"byte_end":3915,"line_start":151,"line_end":151,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3920,"byte_end":3923,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [0]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html#associatedtype.Hasher","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3928,"byte_end":4016,"line_start":153,"line_end":153,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4207,"byte_end":4219,"line_start":159,"line_end":159,"column_start":8,"column_end":20},"name":"build_hasher","qualname":"::BuildHasher::build_hasher","value":"pub fn build_hasher(&Self) -> Self::Hasher","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" See [`core::hash::BuildHasher.build_hasher`][0]","sig":null,"attributes":[{"value":"/ See [`core::hash::BuildHasher.build_hasher`][0]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4047,"byte_end":4098,"line_start":156,"line_end":156,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4103,"byte_end":4106,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ [0]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html#tymethod.build_hasher","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4111,"byte_end":4199,"line_start":158,"line_end":158,"column_start":5,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":102},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4507,"byte_end":4513,"line_start":170,"line_end":170,"column_start":11,"column_end":17},"name":"Hasher","qualname":"::Hasher","value":"Hasher","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":" See [`core::hash::Hasher`][0] for details","sig":null,"attributes":[{"value":"/ See [`core::hash::Hasher`][0] for details","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4247,"byte_end":4292,"line_start":162,"line_end":162,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4293,"byte_end":4296,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [0]: https://doc.rust-lang.org/core/hash/trait.Hasher.html","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4297,"byte_end":4359,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4360,"byte_end":4363,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4364,"byte_end":4378,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4379,"byte_end":4382,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Implementers of this trait must *not* perform any 64-bit (or 128-bit) operation while computing","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4383,"byte_end":4482,"line_start":168,"line_end":168,"column_start":1,"column_end":100}},{"value":"/ the hash.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4483,"byte_end":4496,"line_start":169,"line_end":169,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4658,"byte_end":4664,"line_start":174,"line_end":174,"column_start":8,"column_end":14},"name":"finish","qualname":"::Hasher::finish","value":"pub fn finish(&Self) -> u32","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" See [`core::hash::Hasher.finish`][0]","sig":null,"attributes":[{"value":"/ See [`core::hash::Hasher.finish`][0]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4520,"byte_end":4560,"line_start":171,"line_end":171,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4565,"byte_end":4568,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [0]: https://doc.rust-lang.org/std/hash/trait.Hasher.html#tymethod.finish","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4573,"byte_end":4650,"line_start":173,"line_end":173,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4821,"byte_end":4826,"line_start":179,"line_end":179,"column_start":8,"column_end":13},"name":"write","qualname":"::Hasher::write","value":"pub fn write(&mut Self, &[u8])","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" See [`core::hash::Hasher.write`][0]","sig":null,"attributes":[{"value":"/ See [`core::hash::Hasher.write`][0]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4685,"byte_end":4724,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4729,"byte_end":4732,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [0]: https://doc.rust-lang.org/std/hash/trait.Hasher.html#tymethod.write","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4737,"byte_end":4813,"line_start":178,"line_end":178,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":105},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4975,"byte_end":4979,"line_start":185,"line_end":185,"column_start":11,"column_end":15},"name":"Hash","qualname":"::Hash","value":"Hash","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":108}],"decl_id":null,"docs":" See [`core::hash::Hash`][0] for details","sig":null,"attributes":[{"value":"/ See [`core::hash::Hash`][0] for details","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4856,"byte_end":4899,"line_start":182,"line_end":182,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4900,"byte_end":4903,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [0]: https://doc.rust-lang.org/core/hash/trait.Hash.html","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4904,"byte_end":4964,"line_start":184,"line_end":184,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":5039,"byte_end":5043,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"hash","qualname":"::Hash::hash","value":"pub fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Feeds this value into the given `Hasher`.\n","sig":null,"attributes":[{"value":"/ Feeds this value into the given `Hasher`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":4986,"byte_end":5031,"line_start":186,"line_end":186,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":5166,"byte_end":5176,"line_start":192,"line_end":192,"column_start":8,"column_end":18},"name":"hash_slice","qualname":"::Hash::hash_slice","value":"pub fn hash_slice<H>(&[Self], &mut H) where H: Hasher, Self: Sized","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Feeds a slice of this type into the given `Hasher`.\n","sig":null,"attributes":[{"value":"/ Feeds a slice of this type into the given `Hasher`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":5103,"byte_end":5158,"line_start":191,"line_end":191,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/fnv.rs","byte_start":8954,"byte_end":8960,"line_start":9,"line_end":9,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/fnv.rs","byte_start":9049,"byte_end":9055,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":9701,"byte_end":9706,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":9914,"byte_end":9919,"line_start":40,"line_end":40,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":10145,"byte_end":10151,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":10616,"byte_end":10622,"line_start":67,"line_end":67,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":10866,"byte_end":10872,"line_start":79,"line_end":79,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":13937,"byte_end":13942,"line_start":177,"line_end":177,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2663,"byte_end":2681,"line_start":89,"line_end":89,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2845,"byte_end":2863,"line_start":100,"line_end":100,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2999,"byte_end":3017,"line_start":109,"line_end":109,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3168,"byte_end":3186,"line_start":118,"line_end":118,"column_start":34,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3235,"byte_end":3253,"line_start":120,"line_end":120,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3375,"byte_end":3393,"line_start":126,"line_end":126,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3566,"byte_end":3584,"line_start":136,"line_end":136,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/fnv.rs","byte_start":8954,"byte_end":8960,"line_start":9,"line_end":9,"column_start":18,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":27},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/fnv.rs","byte_start":9049,"byte_end":9055,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":27},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":9701,"byte_end":9706,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":9914,"byte_end":9919,"line_start":40,"line_end":40,"column_start":22,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":10145,"byte_end":10151,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":49},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":10616,"byte_end":10622,"line_start":67,"line_end":67,"column_start":18,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":49},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":10866,"byte_end":10872,"line_start":79,"line_end":79,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":49},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/murmur3.rs","byte_start":13937,"byte_end":13942,"line_start":177,"line_end":177,"column_start":6,"column_end":11},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2663,"byte_end":2681,"line_start":89,"line_end":89,"column_start":21,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":75},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2845,"byte_end":2863,"line_start":100,"line_end":100,"column_start":19,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":75},"to":{"krate":1,"index":2640}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":2999,"byte_end":3017,"line_start":109,"line_end":109,"column_start":23,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":75},"to":{"krate":1,"index":2670}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3168,"byte_end":3186,"line_start":118,"line_end":118,"column_start":34,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":75},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3235,"byte_end":3253,"line_start":120,"line_end":120,"column_start":42,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":75},"to":{"krate":1,"index":9558}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3375,"byte_end":3393,"line_start":126,"line_end":126,"column_start":9,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":75},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.2.1/src/lib.rs","byte_start":3566,"byte_end":3584,"line_start":136,"line_end":136,"column_start":25,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":75},"to":{"krate":0,"index":99}}]}