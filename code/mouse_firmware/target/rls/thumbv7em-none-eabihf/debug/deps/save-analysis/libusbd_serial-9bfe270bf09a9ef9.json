{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1","program":"/home/s7rul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","usbd_serial","--edition=2018","/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=1","-C","debuginfo=2","-C","metadata=9bfe270bf09a9ef9","-C","extra-filename=-9bfe270bf09a9ef9","--out-dir","/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/debug/deps","--extern","embedded_hal=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_hal-a13faaa931965237.rmeta","--extern","nb=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libnb-5bf108a03c5c8846.rmeta","--extern","usb_device=/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libusb_device-d466649b125c7876.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/s7rul/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/s7rul/Documents/KiCad/inbyggda system/e7020e-project/code/mouse_firmware/target/rls/thumbv7em-none-eabihf/debug/deps/libusbd_serial-9bfe270bf09a9ef9.rmeta"},"prelude":{"crate_id":{"name":"usbd_serial","disambiguator":[8522229675052683768,0]},"crate_root":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src","external_crates":[{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11850898037736144901,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4266445326248464732,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10236682895667522671,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","num":4,"id":{"name":"usb_device","disambiguator":[16491445997211076536,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","num":5,"id":{"name":"embedded_hal","disambiguator":[1470599666875002530,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","num":6,"id":{"name":"nb","disambiguator":[932372155979664908,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","num":7,"id":{"name":"nb","disambiguator":[5444142482443035389,0]}},{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","num":8,"id":{"name":"void","disambiguator":[2468047175398030117,0]}}],"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":0,"byte_end":1810,"line_start":1,"line_end":58,"column_start":1,"column_end":43}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":6},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1691,"byte_end":1697,"line_start":55,"line_end":55,"column_start":22,"column_end":28},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":805},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1699,"byte_end":1707,"line_start":55,"line_end":55,"column_start":30,"column_end":38},"alias_span":null,"name":"UsbError","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1734,"byte_end":1735,"line_start":56,"line_end":56,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1765,"byte_end":1766,"line_start":57,"line_end":57,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":41},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1791,"byte_end":1809,"line_start":58,"line_end":58,"column_start":24,"column_end":42},"alias_span":null,"name":"DefaultBufferStore","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":0,"byte_end":1810,"line_start":1,"line_end":58,"column_start":1,"column_end":43},"name":"","qualname":"::","value":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":49},{"krate":0,"index":118},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":" CDC-ACM USB serial port implementation for [usb-device](https://crates.io/crates/usb-device).","sig":null,"attributes":[{"value":"/ CDC-ACM USB serial port implementation for [usb-device](https://crates.io/crates/usb-device).","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":0,"byte_end":97,"line_start":1,"line_end":1,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":98,"byte_end":101,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ CDC-ACM is a USB class that's supported out of the box by most operating systems and used for","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":102,"byte_end":199,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ implementing modems and generic serial ports. The [`SerialPort`](crate::SerialPort) class","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":200,"byte_end":293,"line_start":4,"line_end":4,"column_start":1,"column_end":94}},{"value":"/ implements a stream-like buffered serial port that can be used similarly to a normal UART.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":294,"byte_end":388,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":389,"byte_end":392,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The crate also contains [`CdcAcmClass`](CdcAcmClass) which is a lower-level implementation that","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":393,"byte_end":492,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ has less overhead, but requires more care to use correctly.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":493,"byte_end":556,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":557,"byte_end":560,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Example","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":561,"byte_end":572,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ =======","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":573,"byte_end":584,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":585,"byte_end":588,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A full example requires the use of a hardware-driver, but the hardware independent part is as","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":589,"byte_end":686,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ follows:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":687,"byte_end":699,"line_start":14,"line_end":14,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":700,"byte_end":703,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":704,"byte_end":711,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ let mut serial = SerialPort::new(&usb_bus);","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":712,"byte_end":759,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":760,"byte_end":763,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut usb_dev = UsbDeviceBuilder::new(&usb_bus, UsbVidPid(0x16c0, 0x27dd))","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":764,"byte_end":844,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/     .product(\"Serial port\")","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":845,"byte_end":876,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/     .device_class(USB_CLASS_CDC)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":877,"byte_end":913,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/     .build();","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":914,"byte_end":931,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":932,"byte_end":935,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":936,"byte_end":946,"line_start":24,"line_end":24,"column_start":1,"column_end":11}},{"value":"/     if !usb_dev.poll(&mut [&mut serial]) {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":947,"byte_end":993,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/         continue;","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":994,"byte_end":1015,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1016,"byte_end":1025,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1026,"byte_end":1029,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0u8; 64];","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1030,"byte_end":1062,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1063,"byte_end":1066,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     match serial.read(&mut buf[..]) {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1067,"byte_end":1108,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/         Ok(count) => {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1109,"byte_end":1135,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/             // count bytes were read to &buf[..count]","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1136,"byte_end":1193,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/         },","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1194,"byte_end":1208,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/         Err(UsbError::WouldBlock) => // No data received","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1209,"byte_end":1269,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/         Err(err) => // An error occurred","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1270,"byte_end":1314,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/     };","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1315,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/     match serial.write(&[0x3a, 0x29]) {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1330,"byte_end":1373,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/         Ok(count) => {","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1374,"byte_end":1400,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/             // count bytes were written","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1401,"byte_end":1444,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/         },","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1445,"byte_end":1459,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/         Err(UsbError::WouldBlock) => // No data could be written (buffers full)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1460,"byte_end":1543,"line_start":43,"line_end":43,"column_start":1,"column_end":84}},{"value":"/         Err(err) => // An error occurred","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1544,"byte_end":1588,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/     };","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1589,"byte_end":1599,"line_start":45,"line_end":45,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1600,"byte_end":1605,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1606,"byte_end":1613,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/lib.rs","byte_start":1615,"byte_end":1625,"line_start":49,"line_end":49,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":41},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/buffer.rs","byte_start":5743,"byte_end":5761,"line_start":121,"line_end":121,"column_start":12,"column_end":30},"name":"DefaultBufferStore","qualname":"::buffer::DefaultBufferStore","value":"","parent":null,"children":[],"decl_id":null,"docs":" Default backing store for the mediocre buffer\n","sig":null,"attributes":[{"value":"/ Default backing store for the mediocre buffer","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/buffer.rs","byte_start":5682,"byte_end":5731,"line_start":120,"line_end":120,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":60},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":7667,"byte_end":7680,"line_start":7,"line_end":7,"column_start":11,"column_end":24},"name":"USB_CLASS_CDC","qualname":"::cdc_acm::USB_CLASS_CDC","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" This should be used as `device_class` when building the `UsbDevice`.\n","sig":null,"attributes":[{"value":"/ This should be used as `device_class` when building the `UsbDevice`.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":7584,"byte_end":7656,"line_start":6,"line_end":6,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":74},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":9328,"byte_end":9339,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"CdcAcmClass","qualname":"::cdc_acm::CdcAcmClass","value":"CdcAcmClass {  }","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"decl_id":null,"docs":" Packet level implementation of a CDC-ACM serial port.","sig":null,"attributes":[{"value":"/ Packet level implementation of a CDC-ACM serial port.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":8210,"byte_end":8267,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":8268,"byte_end":8271,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This class can be used directly and it has the least overhead due to directly reading and","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":8272,"byte_end":8365,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/ writing USB packets with no intermediate buffers, but it will not act like a stream-like serial","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":8366,"byte_end":8465,"line_start":29,"line_end":29,"column_start":1,"column_end":100}},{"value":"/ port. The following constraints must be followed if you use this class directly:","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":8466,"byte_end":8550,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":8551,"byte_end":8554,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ - `read_packet` must be called with a buffer large enough to hold max_packet_size bytes, and the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":8555,"byte_end":8655,"line_start":32,"line_end":32,"column_start":1,"column_end":101}},{"value":"/   method will return a `WouldBlock` error if there is no packet to be read.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":8656,"byte_end":8735,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ - `write_packet` must not be called with a buffer larger than max_packet_size bytes, and the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":8736,"byte_end":8832,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/   method will return a `WouldBlock` error if the previous packet has not been sent yet.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":8833,"byte_end":8924,"line_start":35,"line_end":35,"column_start":1,"column_end":92}},{"value":"/ - If you write a packet that is exactly max_packet_size bytes long, it won't be processed by the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":8925,"byte_end":9025,"line_start":36,"line_end":36,"column_start":1,"column_end":101}},{"value":"/   host operating system until a subsequent shorter packet is sent. A zero-length packet (ZLP)","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":9026,"byte_end":9123,"line_start":37,"line_end":37,"column_start":1,"column_end":98}},{"value":"/   can be sent if there is no other data to send. This is because USB bulk transactions must be","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":9124,"byte_end":9222,"line_start":38,"line_end":38,"column_start":1,"column_end":99}},{"value":"/   terminated with a short packet, even if the bulk endpoint is used for stream-like data.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":9223,"byte_end":9316,"line_start":39,"line_end":39,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":9796,"byte_end":9799,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<CdcAcmClass>::new","value":"pub fn new(&UsbBusAllocator<B>, u16) -> CdcAcmClass<, B>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CdcAcmClass with the provided UsbBus and max_packet_size in bytes. For\n full-speed devices, max_packet_size has to be one of 8, 16, 32 or 64.\n","sig":null,"attributes":[{"value":"/ Creates a new CdcAcmClass with the provided UsbBus and max_packet_size in bytes. For","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":9618,"byte_end":9706,"line_start":52,"line_end":52,"column_start":5,"column_end":93}},{"value":"/ full-speed devices, max_packet_size has to be one of 8, 16, 32 or 64.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":9711,"byte_end":9784,"line_start":53,"line_end":53,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":10452,"byte_end":10467,"line_start":73,"line_end":73,"column_start":12,"column_end":27},"name":"max_packet_size","qualname":"<CdcAcmClass>::max_packet_size","value":"pub fn max_packet_size(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Gets the maximum packet size in bytes.\n","sig":null,"attributes":[{"value":"/ Gets the maximum packet size in bytes.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":10398,"byte_end":10440,"line_start":72,"line_end":72,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":10774,"byte_end":10785,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"line_coding","qualname":"<CdcAcmClass>::line_coding","value":"pub fn line_coding(&Self) -> &LineCoding","parent":null,"children":[],"decl_id":null,"docs":" Gets the current line coding. The line coding contains information that's mainly relevant\n for USB to UART serial port emulators, and can be ignored if not relevant.\n","sig":null,"attributes":[{"value":"/ Gets the current line coding. The line coding contains information that's mainly relevant","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":10586,"byte_end":10679,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ for USB to UART serial port emulators, and can be ignored if not relevant.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":10684,"byte_end":10762,"line_start":79,"line_end":79,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":10903,"byte_end":10906,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"dtr","qualname":"<CdcAcmClass>::dtr","value":"pub fn dtr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets the DTR (data terminal ready) state\n","sig":null,"attributes":[{"value":"/ Gets the DTR (data terminal ready) state","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":10847,"byte_end":10891,"line_start":84,"line_end":84,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":11004,"byte_end":11007,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"rts","qualname":"<CdcAcmClass>::rts","value":"pub fn rts(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets the RTS (request to send) state\n","sig":null,"attributes":[{"value":"/ Gets the RTS (request to send) state","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":10952,"byte_end":10992,"line_start":89,"line_end":89,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":11113,"byte_end":11125,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"write_packet","qualname":"<CdcAcmClass>::write_packet","value":"pub fn write_packet(&mut Self, &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Writes a single packet into the IN endpoint.\n","sig":null,"attributes":[{"value":"/ Writes a single packet into the IN endpoint.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":11053,"byte_end":11101,"line_start":94,"line_end":94,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":11274,"byte_end":11285,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"read_packet","qualname":"<CdcAcmClass>::read_packet","value":"pub fn read_packet(&mut Self, &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Reads a single packet from the OUT endpoint.\n","sig":null,"attributes":[{"value":"/ Reads a single packet from the OUT endpoint.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":11214,"byte_end":11262,"line_start":99,"line_end":99,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":210},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15538,"byte_end":15541,"line_start":241,"line_end":241,"column_start":5,"column_end":8},"name":"One","qualname":"::cdc_acm::StopBits::One","value":"StopBits::One","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" 1 stop bit\n","sig":null,"attributes":[{"value":"/ 1 stop bit","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15519,"byte_end":15533,"line_start":240,"line_end":240,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15574,"byte_end":15586,"line_start":244,"line_end":244,"column_start":5,"column_end":17},"name":"OnePointFive","qualname":"::cdc_acm::StopBits::OnePointFive","value":"StopBits::OnePointFive","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" 1.5 stop bits\n","sig":null,"attributes":[{"value":"/ 1.5 stop bits","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15552,"byte_end":15569,"line_start":243,"line_end":243,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":216},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15617,"byte_end":15620,"line_start":247,"line_end":247,"column_start":5,"column_end":8},"name":"Two","qualname":"::cdc_acm::StopBits::Two","value":"StopBits::Two","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" 2 stop bits\n","sig":null,"attributes":[{"value":"/ 2 stop bits","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15597,"byte_end":15612,"line_start":246,"line_end":246,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":209},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15504,"byte_end":15512,"line_start":239,"line_end":239,"column_start":10,"column_end":18},"name":"StopBits","qualname":"::cdc_acm::StopBits","value":"pub enum StopBits { One = , OnePointFive = , Two = , }","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216}],"decl_id":null,"docs":" Number of stop bits for LineCoding\n","sig":null,"attributes":[{"value":"/ Number of stop bits for LineCoding","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15418,"byte_end":15456,"line_start":237,"line_end":237,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":229},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15912,"byte_end":15916,"line_start":263,"line_end":263,"column_start":5,"column_end":9},"name":"None","qualname":"::cdc_acm::ParityType::None","value":"ParityType::None","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":232},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15926,"byte_end":15929,"line_start":264,"line_end":264,"column_start":5,"column_end":8},"name":"Odd","qualname":"::cdc_acm::ParityType::Odd","value":"ParityType::Odd","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":235},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15939,"byte_end":15944,"line_start":265,"line_end":265,"column_start":5,"column_end":10},"name":"Event","qualname":"::cdc_acm::ParityType::Event","value":"ParityType::Event","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":238},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15954,"byte_end":15958,"line_start":266,"line_end":266,"column_start":5,"column_end":9},"name":"Mark","qualname":"::cdc_acm::ParityType::Mark","value":"ParityType::Mark","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":241},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15968,"byte_end":15973,"line_start":267,"line_end":267,"column_start":5,"column_end":10},"name":"Space","qualname":"::cdc_acm::ParityType::Space","value":"ParityType::Space","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":228},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15895,"byte_end":15905,"line_start":262,"line_end":262,"column_start":10,"column_end":20},"name":"ParityType","qualname":"::cdc_acm::ParityType","value":"pub enum ParityType { None = , Odd = , Event = , Mark = , Space = , }","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241}],"decl_id":null,"docs":" Parity for LineCoding\n","sig":null,"attributes":[{"value":"/ Parity for LineCoding","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15822,"byte_end":15847,"line_start":260,"line_end":260,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16390,"byte_end":16400,"line_start":284,"line_end":284,"column_start":12,"column_end":22},"name":"LineCoding","qualname":"::cdc_acm::LineCoding","value":"LineCoding {  }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"decl_id":null,"docs":" Line coding parameters","sig":null,"attributes":[{"value":"/ Line coding parameters","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16180,"byte_end":16206,"line_start":280,"line_end":280,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16207,"byte_end":16210,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ This is provided by the host for specifying the standard UART parameters such as baud rate. Can","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16211,"byte_end":16310,"line_start":282,"line_end":282,"column_start":1,"column_end":100}},{"value":"/ be ignored if you don't plan to interface with a physical UART.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16311,"byte_end":16378,"line_start":283,"line_end":283,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16589,"byte_end":16598,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"stop_bits","qualname":"<LineCoding>::stop_bits","value":"pub fn stop_bits(&Self) -> StopBits","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of stop bits for UART communication.\n","sig":null,"attributes":[{"value":"/ Gets the number of stop bits for UART communication.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16521,"byte_end":16577,"line_start":292,"line_end":292,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16710,"byte_end":16719,"line_start":296,"line_end":296,"column_start":12,"column_end":21},"name":"data_bits","qualname":"<LineCoding>::data_bits","value":"pub fn data_bits(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of data bits for UART communication.\n","sig":null,"attributes":[{"value":"/ Gets the number of data bits for UART communication.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16642,"byte_end":16698,"line_start":295,"line_end":295,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16817,"byte_end":16828,"line_start":299,"line_end":299,"column_start":12,"column_end":23},"name":"parity_type","qualname":"<LineCoding>::parity_type","value":"pub fn parity_type(&Self) -> ParityType","parent":null,"children":[],"decl_id":null,"docs":" Gets the parity type for UART communication.\n","sig":null,"attributes":[{"value":"/ Gets the parity type for UART communication.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16757,"byte_end":16805,"line_start":298,"line_end":298,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16953,"byte_end":16962,"line_start":302,"line_end":302,"column_start":12,"column_end":21},"name":"data_rate","qualname":"<LineCoding>::data_rate","value":"pub fn data_rate(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets the data rate in bits per second for UART communication.\n","sig":null,"attributes":[{"value":"/ Gets the data rate in bits per second for UART communication.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16876,"byte_end":16941,"line_start":301,"line_end":301,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":17696,"byte_end":17706,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"SerialPort","qualname":"::serial_port::SerialPort","value":"SerialPort {  }","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"decl_id":null,"docs":" USB (CDC-ACM) serial port with built-in buffering to implement stream-like behavior.","sig":null,"attributes":[{"value":"/ USB (CDC-ACM) serial port with built-in buffering to implement stream-like behavior.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":17425,"byte_end":17513,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":17514,"byte_end":17517,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The RS and WS type arguments specify the storage for the read/write buffers, respectively. By","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":17518,"byte_end":17615,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ default an internal 128 byte buffer is used for both directions.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":17616,"byte_end":17684,"line_start":12,"line_end":12,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":18797,"byte_end":18800,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<SerialPort>::new","value":"pub fn new(&UsbBusAllocator<B>)\n-> SerialPort<, B, DefaultBufferStore, DefaultBufferStore>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new USB serial port with the provided UsbBus and 128 byte read/write buffers.\n","sig":null,"attributes":[{"value":"/ Creates a new USB serial port with the provided UsbBus and 128 byte read/write buffers.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":18694,"byte_end":18785,"line_start":48,"line_end":48,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":19274,"byte_end":19288,"line_start":66,"line_end":66,"column_start":12,"column_end":26},"name":"new_with_store","qualname":"<SerialPort>::new_with_store","value":"pub fn new_with_store(&UsbBusAllocator<B>, RS, WS) -> SerialPort<, B, RS, WS>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new USB serial port with the provided UsbBus and buffer backing stores.\n","sig":null,"attributes":[{"value":"/ Creates a new USB serial port with the provided UsbBus and buffer backing stores.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":19177,"byte_end":19262,"line_start":65,"line_end":65,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":19667,"byte_end":19678,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"line_coding","qualname":"<SerialPort>::line_coding","value":"pub fn line_coding(&Self) -> &LineCoding","parent":null,"children":[],"decl_id":null,"docs":" Gets the current line coding.\n","sig":null,"attributes":[{"value":"/ Gets the current line coding.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":19622,"byte_end":19655,"line_start":77,"line_end":77,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":19791,"byte_end":19794,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"dtr","qualname":"<SerialPort>::dtr","value":"pub fn dtr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets the DTR (data terminal ready) state\n","sig":null,"attributes":[{"value":"/ Gets the DTR (data terminal ready) state","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":19735,"byte_end":19779,"line_start":80,"line_end":80,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":19888,"byte_end":19891,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"rts","qualname":"<SerialPort>::rts","value":"pub fn rts(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets the RTS (request to send) state\n","sig":null,"attributes":[{"value":"/ Gets the RTS (request to send) state","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":19836,"byte_end":19876,"line_start":83,"line_end":83,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20259,"byte_end":20264,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"write","qualname":"<SerialPort>::write","value":"pub fn write(&mut Self, &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Writes bytes from `data` into the port and returns the number of bytes written.","sig":null,"attributes":[{"value":"/ Writes bytes from `data` into the port and returns the number of bytes written.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":19933,"byte_end":20016,"line_start":86,"line_end":86,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20021,"byte_end":20024,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20029,"byte_end":20041,"line_start":88,"line_end":88,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20046,"byte_end":20049,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ * [`WouldBlock`](usb_device::UsbError::WouldBlock) - No bytes could be written because the","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20054,"byte_end":20148,"line_start":90,"line_end":90,"column_start":5,"column_end":99}},{"value":"/   buffers are full.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20153,"byte_end":20176,"line_start":91,"line_end":91,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20181,"byte_end":20184,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Other errors from `usb-device` may also be propagated.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20189,"byte_end":20247,"line_start":93,"line_end":93,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20908,"byte_end":20912,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"read","qualname":"<SerialPort>::read","value":"pub fn read(&mut Self, &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Reads bytes from the port into `data` and returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Reads bytes from the port into `data` and returns the number of bytes read.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20620,"byte_end":20699,"line_start":109,"line_end":109,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20704,"byte_end":20707,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20712,"byte_end":20724,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20729,"byte_end":20732,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * [`WouldBlock`](usb_device::UsbError::WouldBlock) - No bytes available for reading.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20737,"byte_end":20825,"line_start":113,"line_end":113,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20830,"byte_end":20833,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Other errors from `usb-device` may also be propagated.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":20838,"byte_end":20896,"line_start":115,"line_end":115,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":22167,"byte_end":22172,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"flush","qualname":"<SerialPort>::flush","value":"pub fn flush(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends as much as possible of the current write buffer. Returns `Ok` if all data that has\n been written has been completely written to hardware buffers `Err(WouldBlock)` if there is\n still data remaining, and other errors if there's an error sending data to the host. Note\n that even if this method returns `Ok`, data may still be in hardware buffers on either side.\n","sig":null,"attributes":[{"value":"/ Sends as much as possible of the current write buffer. Returns `Ok` if all data that has","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":21765,"byte_end":21857,"line_start":145,"line_end":145,"column_start":5,"column_end":97}},{"value":"/ been written has been completely written to hardware buffers `Err(WouldBlock)` if there is","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":21862,"byte_end":21956,"line_start":146,"line_end":146,"column_start":5,"column_end":99}},{"value":"/ still data remaining, and other errors if there's an error sending data to the host. Note","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":21961,"byte_end":22054,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ that even if this method returns `Ok`, data may still be in hardware buffers on either side.","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":22059,"byte_end":22155,"line_start":148,"line_end":148,"column_start":5,"column_end":101}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/buffer.rs","byte_start":2255,"byte_end":2261,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":36},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/buffer.rs","byte_start":5797,"byte_end":5815,"line_start":123,"line_end":123,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/buffer.rs","byte_start":5900,"byte_end":5918,"line_start":129,"line_end":129,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":9593,"byte_end":9604,"line_start":51,"line_end":51,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":11553,"byte_end":11564,"line_start":110,"line_end":110,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15647,"byte_end":15655,"line_start":250,"line_end":250,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16000,"byte_end":16010,"line_start":270,"line_end":270,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16504,"byte_end":16514,"line_start":291,"line_end":291,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":17016,"byte_end":17026,"line_start":305,"line_end":305,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":18650,"byte_end":18660,"line_start":44,"line_end":44,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":19074,"byte_end":19084,"line_start":59,"line_end":59,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":23772,"byte_end":23782,"line_start":200,"line_end":200,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":24581,"byte_end":24591,"line_start":228,"line_end":228,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":25365,"byte_end":25375,"line_start":253,"line_end":253,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/buffer.rs","byte_start":2255,"byte_end":2261,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/buffer.rs","byte_start":5797,"byte_end":5815,"line_start":123,"line_end":123,"column_start":23,"column_end":41},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":2618}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/buffer.rs","byte_start":5900,"byte_end":5918,"line_start":129,"line_end":129,"column_start":26,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":2621}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":9593,"byte_end":9604,"line_start":51,"line_end":51,"column_start":17,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":11553,"byte_end":11564,"line_start":110,"line_end":110,"column_start":33,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":74},"to":{"krate":4,"index":166}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":15647,"byte_end":15655,"line_start":250,"line_end":250,"column_start":19,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16000,"byte_end":16010,"line_start":270,"line_end":270,"column_start":19,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":16504,"byte_end":16514,"line_start":291,"line_end":291,"column_start":6,"column_end":16},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/cdc_acm.rs","byte_start":17016,"byte_end":17026,"line_start":305,"line_end":305,"column_start":18,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":106},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":18650,"byte_end":18660,"line_start":44,"line_end":44,"column_start":9,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":19074,"byte_end":19084,"line_start":59,"line_end":59,"column_start":17,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":23772,"byte_end":23782,"line_start":200,"line_end":200,"column_start":33,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":140},"to":{"krate":4,"index":166}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":24581,"byte_end":24591,"line_start":228,"line_end":228,"column_start":53,"column_end":63},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":140},"to":{"krate":5,"index":430}},{"span":{"file_name":"/home/s7rul/.cargo/registry/src/github.com-1ecc6299db9ec823/usbd-serial-0.1.1/src/serial_port.rs","byte_start":25365,"byte_end":25375,"line_start":253,"line_end":253,"column_start":52,"column_end":62},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":140},"to":{"krate":5,"index":426}}]}