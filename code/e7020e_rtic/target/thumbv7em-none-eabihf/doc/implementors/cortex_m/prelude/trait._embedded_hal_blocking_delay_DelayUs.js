(function() {var implementors = {};
implementors["cortex_m"] = [{"text":"impl <a class=\"trait\" href=\"cortex_m/prelude/trait._embedded_hal_blocking_delay_DelayUs.html\" title=\"trait cortex_m::prelude::_embedded_hal_blocking_delay_DelayUs\">DelayUs</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"cortex_m/delay/struct.Delay.html\" title=\"struct cortex_m::delay::Delay\">Delay</a>","synthetic":false,"types":["cortex_m::delay::Delay"]},{"text":"impl <a class=\"trait\" href=\"cortex_m/prelude/trait._embedded_hal_blocking_delay_DelayUs.html\" title=\"trait cortex_m::prelude::_embedded_hal_blocking_delay_DelayUs\">DelayUs</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/core/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"cortex_m/delay/struct.Delay.html\" title=\"struct cortex_m::delay::Delay\">Delay</a>","synthetic":false,"types":["cortex_m::delay::Delay"]},{"text":"impl <a class=\"trait\" href=\"cortex_m/prelude/trait._embedded_hal_blocking_delay_DelayUs.html\" title=\"trait cortex_m::prelude::_embedded_hal_blocking_delay_DelayUs\">DelayUs</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"cortex_m/delay/struct.Delay.html\" title=\"struct cortex_m::delay::Delay\">Delay</a>","synthetic":false,"types":["cortex_m::delay::Delay"]},{"text":"impl <a class=\"trait\" href=\"cortex_m/prelude/trait._embedded_hal_blocking_delay_DelayUs.html\" title=\"trait cortex_m::prelude::_embedded_hal_blocking_delay_DelayUs\">DelayUs</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"cortex_m/delay/struct.Delay.html\" title=\"struct cortex_m::delay::Delay\">Delay</a>","synthetic":false,"types":["cortex_m::delay::Delay"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()