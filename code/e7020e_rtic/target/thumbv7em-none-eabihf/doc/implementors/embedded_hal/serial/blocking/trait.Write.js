(function() {var implementors = {};
implementors["embedded_hal"] = [];
implementors["stm32f4xx_hal"] = [{"text":"impl&lt;USART, PINS, WORD:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"embedded_hal/serial/blocking/trait.Write.html\" title=\"trait embedded_hal::serial::blocking::Write\">Write</a>&lt;WORD&gt; for <a class=\"struct\" href=\"stm32f4xx_hal/serial/struct.Serial.html\" title=\"struct stm32f4xx_hal::serial::Serial\">Serial</a>&lt;USART, PINS, WORD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;USART: <a class=\"trait\" href=\"stm32f4xx_hal/serial/trait.Instance.html\" title=\"trait stm32f4xx_hal::serial::Instance\">Instance</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"stm32f4xx_hal/serial/struct.Tx.html\" title=\"struct stm32f4xx_hal::serial::Tx\">Tx</a>&lt;USART, WORD&gt;: <a class=\"trait\" href=\"embedded_hal/serial/blocking/trait.Write.html\" title=\"trait embedded_hal::serial::blocking::Write\">Write</a>&lt;WORD&gt; + <a class=\"trait\" href=\"embedded_hal/serial/trait.ErrorType.html\" title=\"trait embedded_hal::serial::ErrorType\">ErrorType</a>&lt;Error = Self::<a class=\"associatedtype\" href=\"embedded_hal/serial/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::serial::ErrorType::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["stm32f4xx_hal::serial::Serial"]},{"text":"impl&lt;USART:&nbsp;<a class=\"trait\" href=\"stm32f4xx_hal/serial/trait.Instance.html\" title=\"trait stm32f4xx_hal::serial::Instance\">Instance</a>&gt; <a class=\"trait\" href=\"embedded_hal/serial/blocking/trait.Write.html\" title=\"trait embedded_hal::serial::blocking::Write\">Write</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"stm32f4xx_hal/serial/struct.Tx.html\" title=\"struct stm32f4xx_hal::serial::Tx\">Tx</a>&lt;USART, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/core/primitive.u8.html\">u8</a>&gt;","synthetic":false,"types":["stm32f4xx_hal::serial::Tx"]},{"text":"impl&lt;USART:&nbsp;<a class=\"trait\" href=\"stm32f4xx_hal/serial/trait.Instance.html\" title=\"trait stm32f4xx_hal::serial::Instance\">Instance</a>&gt; <a class=\"trait\" href=\"embedded_hal/serial/blocking/trait.Write.html\" title=\"trait embedded_hal::serial::blocking::Write\">Write</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/core/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"stm32f4xx_hal/serial/struct.Tx.html\" title=\"struct stm32f4xx_hal::serial::Tx\">Tx</a>&lt;USART, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/core/primitive.u16.html\">u16</a>&gt;","synthetic":false,"types":["stm32f4xx_hal::serial::Tx"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()